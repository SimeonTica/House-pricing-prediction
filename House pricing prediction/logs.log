2023-12-12 20:46:41,515:WARNING:C:\Users\xoryt\AppData\Local\Temp\ipykernel_27680\1957541222.py:7: FutureWarning: In a future version of pandas all arguments of DataFrame.ffill will be keyword-only.
  df.ffill(df.median(), inplace=True)

2023-12-12 20:46:45,026:WARNING:C:\Users\xoryt\AppData\Local\Temp\ipykernel_27680\1957541222.py:7: FutureWarning: In a future version of pandas all arguments of DataFrame.ffill will be keyword-only.
  df.ffill(df.median(), inplace=True)

2023-12-12 20:46:45,611:WARNING:C:\Users\xoryt\AppData\Local\Temp\ipykernel_27680\1957541222.py:7: FutureWarning: In a future version of pandas all arguments of DataFrame.ffill will be keyword-only.
  df.ffill(df.median(), inplace=True)

2023-12-12 20:46:52,013:WARNING:C:\Users\xoryt\AppData\Local\Temp\ipykernel_27680\1793245099.py:7: FutureWarning: In a future version of pandas all arguments of DataFrame.ffill will be keyword-only.
  df.ffill(df.median(), inplace=True)

2023-12-12 20:51:43,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 20:51:43,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 20:51:43,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 20:51:43,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 20:51:43,568:INFO:PyCaret RegressionExperiment
2023-12-12 20:51:43,568:INFO:Logging name: reg-default-name
2023-12-12 20:51:43,568:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-12 20:51:43,568:INFO:version 3.2.0
2023-12-12 20:51:43,568:INFO:Initializing setup()
2023-12-12 20:51:43,568:INFO:self.USI: 7ee4
2023-12-12 20:51:43,568:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'X', '_ml_usecase', 'USI', 'fold_shuffle_param', 'y_train', '_available_plots', 'X_train', 'n_jobs_param', 'target_param', 'memory', 'exp_id', 'idx', 'html_param', 'fold_groups_param', 'pipeline', 'X_test', 'seed', 'y_test', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'data', 'log_plots_param', 'gpu_param', 'y'}
2023-12-12 20:51:43,568:INFO:Checking environment
2023-12-12 20:51:43,569:INFO:python_version: 3.11.0
2023-12-12 20:51:43,569:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-12 20:51:43,569:INFO:machine: AMD64
2023-12-12 20:51:43,569:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-12 20:51:43,575:INFO:Memory: svmem(total=14877257728, available=3190685696, percent=78.6, used=11686572032, free=3190685696)
2023-12-12 20:51:43,575:INFO:Physical Core: 8
2023-12-12 20:51:43,575:INFO:Logical Core: 16
2023-12-12 20:51:43,575:INFO:Checking libraries
2023-12-12 20:51:43,575:INFO:System:
2023-12-12 20:51:43,575:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-12 20:51:43,575:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-12 20:51:43,575:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-12 20:51:43,575:INFO:PyCaret required dependencies:
2023-12-12 20:51:43,631:INFO:                 pip: 22.3
2023-12-12 20:51:43,631:INFO:          setuptools: 65.5.0
2023-12-12 20:51:43,631:INFO:             pycaret: 3.2.0
2023-12-12 20:51:43,631:INFO:             IPython: 8.18.1
2023-12-12 20:51:43,631:INFO:          ipywidgets: 8.1.1
2023-12-12 20:51:43,632:INFO:                tqdm: 4.66.1
2023-12-12 20:51:43,632:INFO:               numpy: 1.25.2
2023-12-12 20:51:43,632:INFO:              pandas: 1.5.3
2023-12-12 20:51:43,632:INFO:              jinja2: 3.1.2
2023-12-12 20:51:43,632:INFO:               scipy: 1.10.1
2023-12-12 20:51:43,632:INFO:              joblib: 1.3.2
2023-12-12 20:51:43,632:INFO:             sklearn: 1.2.2
2023-12-12 20:51:43,632:INFO:                pyod: 1.1.2
2023-12-12 20:51:43,632:INFO:            imblearn: 0.11.0
2023-12-12 20:51:43,632:INFO:   category_encoders: 2.6.3
2023-12-12 20:51:43,632:INFO:            lightgbm: 4.1.0
2023-12-12 20:51:43,632:INFO:               numba: 0.58.1
2023-12-12 20:51:43,632:INFO:            requests: 2.31.0
2023-12-12 20:51:43,632:INFO:          matplotlib: 3.6.0
2023-12-12 20:51:43,632:INFO:          scikitplot: 0.3.7
2023-12-12 20:51:43,632:INFO:         yellowbrick: 1.5
2023-12-12 20:51:43,632:INFO:              plotly: 5.18.0
2023-12-12 20:51:43,632:INFO:    plotly-resampler: Not installed
2023-12-12 20:51:43,632:INFO:             kaleido: 0.2.1
2023-12-12 20:51:43,632:INFO:           schemdraw: 0.15
2023-12-12 20:51:43,632:INFO:         statsmodels: 0.14.0
2023-12-12 20:51:43,632:INFO:              sktime: 0.21.1
2023-12-12 20:51:43,632:INFO:               tbats: 1.1.3
2023-12-12 20:51:43,632:INFO:            pmdarima: 2.0.4
2023-12-12 20:51:43,632:INFO:              psutil: 5.9.6
2023-12-12 20:51:43,632:INFO:          markupsafe: 2.1.3
2023-12-12 20:51:43,632:INFO:             pickle5: Not installed
2023-12-12 20:51:43,632:INFO:         cloudpickle: 3.0.0
2023-12-12 20:51:43,632:INFO:         deprecation: 2.1.0
2023-12-12 20:51:43,632:INFO:              xxhash: 3.4.1
2023-12-12 20:51:43,632:INFO:           wurlitzer: Not installed
2023-12-12 20:51:43,632:INFO:PyCaret optional dependencies:
2023-12-12 20:51:43,647:INFO:                shap: Not installed
2023-12-12 20:51:43,648:INFO:           interpret: Not installed
2023-12-12 20:51:43,648:INFO:                umap: Not installed
2023-12-12 20:51:43,648:INFO:     ydata_profiling: Not installed
2023-12-12 20:51:43,648:INFO:  explainerdashboard: Not installed
2023-12-12 20:51:43,648:INFO:             autoviz: Not installed
2023-12-12 20:51:43,648:INFO:           fairlearn: Not installed
2023-12-12 20:51:43,648:INFO:          deepchecks: Not installed
2023-12-12 20:51:43,648:INFO:             xgboost: Not installed
2023-12-12 20:51:43,648:INFO:            catboost: Not installed
2023-12-12 20:51:43,648:INFO:              kmodes: Not installed
2023-12-12 20:51:43,648:INFO:             mlxtend: Not installed
2023-12-12 20:51:43,648:INFO:       statsforecast: Not installed
2023-12-12 20:51:43,648:INFO:        tune_sklearn: Not installed
2023-12-12 20:51:43,648:INFO:                 ray: Not installed
2023-12-12 20:51:43,648:INFO:            hyperopt: Not installed
2023-12-12 20:51:43,648:INFO:              optuna: Not installed
2023-12-12 20:51:43,648:INFO:               skopt: Not installed
2023-12-12 20:51:43,648:INFO:              mlflow: Not installed
2023-12-12 20:51:43,648:INFO:              gradio: Not installed
2023-12-12 20:51:43,648:INFO:             fastapi: Not installed
2023-12-12 20:51:43,648:INFO:             uvicorn: Not installed
2023-12-12 20:51:43,648:INFO:              m2cgen: Not installed
2023-12-12 20:51:43,648:INFO:           evidently: Not installed
2023-12-12 20:51:43,648:INFO:               fugue: Not installed
2023-12-12 20:51:43,648:INFO:           streamlit: Not installed
2023-12-12 20:51:43,648:INFO:             prophet: Not installed
2023-12-12 20:51:43,648:INFO:None
2023-12-12 20:51:43,649:INFO:Set up data.
2023-12-12 20:51:55,178:INFO:PyCaret RegressionExperiment
2023-12-12 20:51:55,178:INFO:Logging name: reg-default-name
2023-12-12 20:51:55,178:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-12 20:51:55,178:INFO:version 3.2.0
2023-12-12 20:51:55,178:INFO:Initializing setup()
2023-12-12 20:51:55,179:INFO:self.USI: 62dc
2023-12-12 20:51:55,179:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'X', '_ml_usecase', 'USI', 'fold_shuffle_param', 'y_train', '_available_plots', 'X_train', 'n_jobs_param', 'target_param', 'memory', 'exp_id', 'idx', 'html_param', 'fold_groups_param', 'pipeline', 'X_test', 'seed', 'y_test', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'data', 'log_plots_param', 'gpu_param', 'y'}
2023-12-12 20:51:55,179:INFO:Checking environment
2023-12-12 20:51:55,179:INFO:python_version: 3.11.0
2023-12-12 20:51:55,179:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-12 20:51:55,179:INFO:machine: AMD64
2023-12-12 20:51:55,179:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-12 20:51:55,187:INFO:Memory: svmem(total=14877257728, available=3084156928, percent=79.3, used=11793100800, free=3084156928)
2023-12-12 20:51:55,187:INFO:Physical Core: 8
2023-12-12 20:51:55,187:INFO:Logical Core: 16
2023-12-12 20:51:55,187:INFO:Checking libraries
2023-12-12 20:51:55,187:INFO:System:
2023-12-12 20:51:55,187:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-12 20:51:55,188:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-12 20:51:55,188:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-12 20:51:55,188:INFO:PyCaret required dependencies:
2023-12-12 20:51:55,188:INFO:                 pip: 22.3
2023-12-12 20:51:55,188:INFO:          setuptools: 65.5.0
2023-12-12 20:51:55,188:INFO:             pycaret: 3.2.0
2023-12-12 20:51:55,188:INFO:             IPython: 8.18.1
2023-12-12 20:51:55,188:INFO:          ipywidgets: 8.1.1
2023-12-12 20:51:55,188:INFO:                tqdm: 4.66.1
2023-12-12 20:51:55,188:INFO:               numpy: 1.25.2
2023-12-12 20:51:55,188:INFO:              pandas: 1.5.3
2023-12-12 20:51:55,188:INFO:              jinja2: 3.1.2
2023-12-12 20:51:55,188:INFO:               scipy: 1.10.1
2023-12-12 20:51:55,188:INFO:              joblib: 1.3.2
2023-12-12 20:51:55,188:INFO:             sklearn: 1.2.2
2023-12-12 20:51:55,188:INFO:                pyod: 1.1.2
2023-12-12 20:51:55,188:INFO:            imblearn: 0.11.0
2023-12-12 20:51:55,188:INFO:   category_encoders: 2.6.3
2023-12-12 20:51:55,188:INFO:            lightgbm: 4.1.0
2023-12-12 20:51:55,188:INFO:               numba: 0.58.1
2023-12-12 20:51:55,188:INFO:            requests: 2.31.0
2023-12-12 20:51:55,188:INFO:          matplotlib: 3.6.0
2023-12-12 20:51:55,188:INFO:          scikitplot: 0.3.7
2023-12-12 20:51:55,188:INFO:         yellowbrick: 1.5
2023-12-12 20:51:55,188:INFO:              plotly: 5.18.0
2023-12-12 20:51:55,188:INFO:    plotly-resampler: Not installed
2023-12-12 20:51:55,188:INFO:             kaleido: 0.2.1
2023-12-12 20:51:55,188:INFO:           schemdraw: 0.15
2023-12-12 20:51:55,189:INFO:         statsmodels: 0.14.0
2023-12-12 20:51:55,189:INFO:              sktime: 0.21.1
2023-12-12 20:51:55,189:INFO:               tbats: 1.1.3
2023-12-12 20:51:55,189:INFO:            pmdarima: 2.0.4
2023-12-12 20:51:55,189:INFO:              psutil: 5.9.6
2023-12-12 20:51:55,189:INFO:          markupsafe: 2.1.3
2023-12-12 20:51:55,189:INFO:             pickle5: Not installed
2023-12-12 20:51:55,189:INFO:         cloudpickle: 3.0.0
2023-12-12 20:51:55,189:INFO:         deprecation: 2.1.0
2023-12-12 20:51:55,189:INFO:              xxhash: 3.4.1
2023-12-12 20:51:55,189:INFO:           wurlitzer: Not installed
2023-12-12 20:51:55,189:INFO:PyCaret optional dependencies:
2023-12-12 20:51:55,189:INFO:                shap: Not installed
2023-12-12 20:51:55,189:INFO:           interpret: Not installed
2023-12-12 20:51:55,189:INFO:                umap: Not installed
2023-12-12 20:51:55,189:INFO:     ydata_profiling: Not installed
2023-12-12 20:51:55,189:INFO:  explainerdashboard: Not installed
2023-12-12 20:51:55,189:INFO:             autoviz: Not installed
2023-12-12 20:51:55,189:INFO:           fairlearn: Not installed
2023-12-12 20:51:55,189:INFO:          deepchecks: Not installed
2023-12-12 20:51:55,189:INFO:             xgboost: Not installed
2023-12-12 20:51:55,189:INFO:            catboost: Not installed
2023-12-12 20:51:55,189:INFO:              kmodes: Not installed
2023-12-12 20:51:55,189:INFO:             mlxtend: Not installed
2023-12-12 20:51:55,189:INFO:       statsforecast: Not installed
2023-12-12 20:51:55,189:INFO:        tune_sklearn: Not installed
2023-12-12 20:51:55,189:INFO:                 ray: Not installed
2023-12-12 20:51:55,189:INFO:            hyperopt: Not installed
2023-12-12 20:51:55,189:INFO:              optuna: Not installed
2023-12-12 20:51:55,190:INFO:               skopt: Not installed
2023-12-12 20:51:55,190:INFO:              mlflow: Not installed
2023-12-12 20:51:55,190:INFO:              gradio: Not installed
2023-12-12 20:51:55,190:INFO:             fastapi: Not installed
2023-12-12 20:51:55,190:INFO:             uvicorn: Not installed
2023-12-12 20:51:55,190:INFO:              m2cgen: Not installed
2023-12-12 20:51:55,190:INFO:           evidently: Not installed
2023-12-12 20:51:55,190:INFO:               fugue: Not installed
2023-12-12 20:51:55,190:INFO:           streamlit: Not installed
2023-12-12 20:51:55,190:INFO:             prophet: Not installed
2023-12-12 20:51:55,190:INFO:None
2023-12-12 20:51:55,190:INFO:Set up data.
2023-12-12 20:51:55,202:INFO:Set up folding strategy.
2023-12-12 20:51:55,202:INFO:Set up train/test split.
2023-12-12 20:51:55,206:INFO:Set up index.
2023-12-12 20:51:55,207:INFO:Assigning column types.
2023-12-12 20:51:55,211:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-12 20:51:55,211:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,219:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,224:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,281:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,330:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,332:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,340:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,347:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,418:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,458:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,459:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-12 20:51:55,463:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,467:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,514:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,548:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,553:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,556:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,636:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-12 20:51:55,643:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,687:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,729:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,773:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,808:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-12 20:51:55,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:51:55,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:55,986:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-12 20:51:56,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:56,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:51:56,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,163:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-12 20:51:56,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,366:INFO:Preparing preprocessing pipeline...
2023-12-12 20:51:56,366:INFO:Set up simple imputation.
2023-12-12 20:51:56,367:INFO:Set up column name cleaning.
2023-12-12 20:51:56,392:INFO:Finished creating preprocessing pipeline.
2023-12-12 20:51:56,506:INFO:Creating final display dataframe.
2023-12-12 20:51:56,566:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 19)
4        Transformed data shape        (1555, 19)
5   Transformed train set shape        (1088, 19)
6    Transformed test set shape         (467, 19)
7              Numeric features                18
8      Rows with missing values             98.7%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              62dc
2023-12-12 20:51:56,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:51:56,767:INFO:setup() successfully completed in 1.59s...............
2023-12-12 20:52:01,152:INFO:PyCaret RegressionExperiment
2023-12-12 20:52:01,152:INFO:Logging name: reg-default-name
2023-12-12 20:52:01,152:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-12 20:52:01,152:INFO:version 3.2.0
2023-12-12 20:52:01,152:INFO:Initializing setup()
2023-12-12 20:52:01,152:INFO:self.USI: 7854
2023-12-12 20:52:01,152:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'X', '_ml_usecase', 'USI', 'fold_shuffle_param', 'y_train', '_available_plots', 'X_train', 'n_jobs_param', 'target_param', 'memory', 'exp_id', 'idx', 'html_param', 'fold_groups_param', 'pipeline', 'X_test', 'seed', 'y_test', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'data', 'log_plots_param', 'gpu_param', 'y'}
2023-12-12 20:52:01,152:INFO:Checking environment
2023-12-12 20:52:01,152:INFO:python_version: 3.11.0
2023-12-12 20:52:01,152:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-12 20:52:01,152:INFO:machine: AMD64
2023-12-12 20:52:01,152:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-12 20:52:01,159:INFO:Memory: svmem(total=14877257728, available=3069497344, percent=79.4, used=11807760384, free=3069497344)
2023-12-12 20:52:01,159:INFO:Physical Core: 8
2023-12-12 20:52:01,159:INFO:Logical Core: 16
2023-12-12 20:52:01,159:INFO:Checking libraries
2023-12-12 20:52:01,159:INFO:System:
2023-12-12 20:52:01,159:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-12 20:52:01,159:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-12 20:52:01,160:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-12 20:52:01,160:INFO:PyCaret required dependencies:
2023-12-12 20:52:01,160:INFO:                 pip: 22.3
2023-12-12 20:52:01,160:INFO:          setuptools: 65.5.0
2023-12-12 20:52:01,160:INFO:             pycaret: 3.2.0
2023-12-12 20:52:01,160:INFO:             IPython: 8.18.1
2023-12-12 20:52:01,160:INFO:          ipywidgets: 8.1.1
2023-12-12 20:52:01,160:INFO:                tqdm: 4.66.1
2023-12-12 20:52:01,160:INFO:               numpy: 1.25.2
2023-12-12 20:52:01,160:INFO:              pandas: 1.5.3
2023-12-12 20:52:01,160:INFO:              jinja2: 3.1.2
2023-12-12 20:52:01,160:INFO:               scipy: 1.10.1
2023-12-12 20:52:01,160:INFO:              joblib: 1.3.2
2023-12-12 20:52:01,160:INFO:             sklearn: 1.2.2
2023-12-12 20:52:01,160:INFO:                pyod: 1.1.2
2023-12-12 20:52:01,160:INFO:            imblearn: 0.11.0
2023-12-12 20:52:01,160:INFO:   category_encoders: 2.6.3
2023-12-12 20:52:01,160:INFO:            lightgbm: 4.1.0
2023-12-12 20:52:01,160:INFO:               numba: 0.58.1
2023-12-12 20:52:01,160:INFO:            requests: 2.31.0
2023-12-12 20:52:01,160:INFO:          matplotlib: 3.6.0
2023-12-12 20:52:01,160:INFO:          scikitplot: 0.3.7
2023-12-12 20:52:01,160:INFO:         yellowbrick: 1.5
2023-12-12 20:52:01,160:INFO:              plotly: 5.18.0
2023-12-12 20:52:01,160:INFO:    plotly-resampler: Not installed
2023-12-12 20:52:01,160:INFO:             kaleido: 0.2.1
2023-12-12 20:52:01,160:INFO:           schemdraw: 0.15
2023-12-12 20:52:01,160:INFO:         statsmodels: 0.14.0
2023-12-12 20:52:01,160:INFO:              sktime: 0.21.1
2023-12-12 20:52:01,160:INFO:               tbats: 1.1.3
2023-12-12 20:52:01,160:INFO:            pmdarima: 2.0.4
2023-12-12 20:52:01,160:INFO:              psutil: 5.9.6
2023-12-12 20:52:01,160:INFO:          markupsafe: 2.1.3
2023-12-12 20:52:01,160:INFO:             pickle5: Not installed
2023-12-12 20:52:01,160:INFO:         cloudpickle: 3.0.0
2023-12-12 20:52:01,161:INFO:         deprecation: 2.1.0
2023-12-12 20:52:01,161:INFO:              xxhash: 3.4.1
2023-12-12 20:52:01,161:INFO:           wurlitzer: Not installed
2023-12-12 20:52:01,161:INFO:PyCaret optional dependencies:
2023-12-12 20:52:01,161:INFO:                shap: Not installed
2023-12-12 20:52:01,161:INFO:           interpret: Not installed
2023-12-12 20:52:01,161:INFO:                umap: Not installed
2023-12-12 20:52:01,161:INFO:     ydata_profiling: Not installed
2023-12-12 20:52:01,161:INFO:  explainerdashboard: Not installed
2023-12-12 20:52:01,161:INFO:             autoviz: Not installed
2023-12-12 20:52:01,161:INFO:           fairlearn: Not installed
2023-12-12 20:52:01,161:INFO:          deepchecks: Not installed
2023-12-12 20:52:01,161:INFO:             xgboost: Not installed
2023-12-12 20:52:01,161:INFO:            catboost: Not installed
2023-12-12 20:52:01,161:INFO:              kmodes: Not installed
2023-12-12 20:52:01,161:INFO:             mlxtend: Not installed
2023-12-12 20:52:01,161:INFO:       statsforecast: Not installed
2023-12-12 20:52:01,161:INFO:        tune_sklearn: Not installed
2023-12-12 20:52:01,161:INFO:                 ray: Not installed
2023-12-12 20:52:01,161:INFO:            hyperopt: Not installed
2023-12-12 20:52:01,161:INFO:              optuna: Not installed
2023-12-12 20:52:01,161:INFO:               skopt: Not installed
2023-12-12 20:52:01,161:INFO:              mlflow: Not installed
2023-12-12 20:52:01,161:INFO:              gradio: Not installed
2023-12-12 20:52:01,161:INFO:             fastapi: Not installed
2023-12-12 20:52:01,161:INFO:             uvicorn: Not installed
2023-12-12 20:52:01,161:INFO:              m2cgen: Not installed
2023-12-12 20:52:01,161:INFO:           evidently: Not installed
2023-12-12 20:52:01,161:INFO:               fugue: Not installed
2023-12-12 20:52:01,161:INFO:           streamlit: Not installed
2023-12-12 20:52:01,161:INFO:             prophet: Not installed
2023-12-12 20:52:01,162:INFO:None
2023-12-12 20:52:01,162:INFO:Set up data.
2023-12-12 20:52:01,168:INFO:Set up folding strategy.
2023-12-12 20:52:01,168:INFO:Set up train/test split.
2023-12-12 20:52:01,171:INFO:Set up index.
2023-12-12 20:52:01,172:INFO:Assigning column types.
2023-12-12 20:52:01,175:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-12 20:52:01,175:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,180:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,184:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,237:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,277:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,281:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,287:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,337:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,379:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-12 20:52:01,383:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,388:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,484:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,488:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,536:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,573:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-12 20:52:01,580:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,669:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,754:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-12 20:52:01,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,844:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:01,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:01,937:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-12 20:52:01,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:02,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:02,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,124:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-12 20:52:02,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,354:INFO:Preparing preprocessing pipeline...
2023-12-12 20:52:02,354:INFO:Set up simple imputation.
2023-12-12 20:52:02,355:INFO:Set up column name cleaning.
2023-12-12 20:52:02,372:INFO:Finished creating preprocessing pipeline.
2023-12-12 20:52:02,377:INFO:Creating final display dataframe.
2023-12-12 20:52:02,429:INFO:Setup _display_container:                     Description             Value
0                    Session id              5296
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 19)
4        Transformed data shape        (1555, 19)
5   Transformed train set shape        (1088, 19)
6    Transformed test set shape         (467, 19)
7              Numeric features                18
8      Rows with missing values             98.7%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              7854
2023-12-12 20:52:02,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:02,624:INFO:setup() successfully completed in 1.47s...............
2023-12-12 20:52:24,438:INFO:PyCaret RegressionExperiment
2023-12-12 20:52:24,438:INFO:Logging name: reg-default-name
2023-12-12 20:52:24,438:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-12 20:52:24,438:INFO:version 3.2.0
2023-12-12 20:52:24,439:INFO:Initializing setup()
2023-12-12 20:52:24,439:INFO:self.USI: 647b
2023-12-12 20:52:24,439:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'X', '_ml_usecase', 'USI', 'fold_shuffle_param', 'y_train', '_available_plots', 'X_train', 'n_jobs_param', 'target_param', 'memory', 'exp_id', 'idx', 'html_param', 'fold_groups_param', 'pipeline', 'X_test', 'seed', 'y_test', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'data', 'log_plots_param', 'gpu_param', 'y'}
2023-12-12 20:52:24,439:INFO:Checking environment
2023-12-12 20:52:24,439:INFO:python_version: 3.11.0
2023-12-12 20:52:24,439:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-12 20:52:24,439:INFO:machine: AMD64
2023-12-12 20:52:24,439:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-12 20:52:24,447:INFO:Memory: svmem(total=14877257728, available=3189485568, percent=78.6, used=11687772160, free=3189485568)
2023-12-12 20:52:24,447:INFO:Physical Core: 8
2023-12-12 20:52:24,447:INFO:Logical Core: 16
2023-12-12 20:52:24,447:INFO:Checking libraries
2023-12-12 20:52:24,447:INFO:System:
2023-12-12 20:52:24,447:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-12 20:52:24,447:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-12 20:52:24,447:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-12 20:52:24,447:INFO:PyCaret required dependencies:
2023-12-12 20:52:24,447:INFO:                 pip: 22.3
2023-12-12 20:52:24,447:INFO:          setuptools: 65.5.0
2023-12-12 20:52:24,447:INFO:             pycaret: 3.2.0
2023-12-12 20:52:24,447:INFO:             IPython: 8.18.1
2023-12-12 20:52:24,447:INFO:          ipywidgets: 8.1.1
2023-12-12 20:52:24,447:INFO:                tqdm: 4.66.1
2023-12-12 20:52:24,447:INFO:               numpy: 1.25.2
2023-12-12 20:52:24,448:INFO:              pandas: 1.5.3
2023-12-12 20:52:24,448:INFO:              jinja2: 3.1.2
2023-12-12 20:52:24,448:INFO:               scipy: 1.10.1
2023-12-12 20:52:24,448:INFO:              joblib: 1.3.2
2023-12-12 20:52:24,448:INFO:             sklearn: 1.2.2
2023-12-12 20:52:24,448:INFO:                pyod: 1.1.2
2023-12-12 20:52:24,448:INFO:            imblearn: 0.11.0
2023-12-12 20:52:24,448:INFO:   category_encoders: 2.6.3
2023-12-12 20:52:24,448:INFO:            lightgbm: 4.1.0
2023-12-12 20:52:24,448:INFO:               numba: 0.58.1
2023-12-12 20:52:24,448:INFO:            requests: 2.31.0
2023-12-12 20:52:24,448:INFO:          matplotlib: 3.6.0
2023-12-12 20:52:24,448:INFO:          scikitplot: 0.3.7
2023-12-12 20:52:24,448:INFO:         yellowbrick: 1.5
2023-12-12 20:52:24,448:INFO:              plotly: 5.18.0
2023-12-12 20:52:24,448:INFO:    plotly-resampler: Not installed
2023-12-12 20:52:24,448:INFO:             kaleido: 0.2.1
2023-12-12 20:52:24,448:INFO:           schemdraw: 0.15
2023-12-12 20:52:24,448:INFO:         statsmodels: 0.14.0
2023-12-12 20:52:24,448:INFO:              sktime: 0.21.1
2023-12-12 20:52:24,448:INFO:               tbats: 1.1.3
2023-12-12 20:52:24,448:INFO:            pmdarima: 2.0.4
2023-12-12 20:52:24,448:INFO:              psutil: 5.9.6
2023-12-12 20:52:24,448:INFO:          markupsafe: 2.1.3
2023-12-12 20:52:24,448:INFO:             pickle5: Not installed
2023-12-12 20:52:24,448:INFO:         cloudpickle: 3.0.0
2023-12-12 20:52:24,448:INFO:         deprecation: 2.1.0
2023-12-12 20:52:24,448:INFO:              xxhash: 3.4.1
2023-12-12 20:52:24,448:INFO:           wurlitzer: Not installed
2023-12-12 20:52:24,448:INFO:PyCaret optional dependencies:
2023-12-12 20:52:24,448:INFO:                shap: Not installed
2023-12-12 20:52:24,449:INFO:           interpret: Not installed
2023-12-12 20:52:24,449:INFO:                umap: Not installed
2023-12-12 20:52:24,449:INFO:     ydata_profiling: Not installed
2023-12-12 20:52:24,449:INFO:  explainerdashboard: Not installed
2023-12-12 20:52:24,449:INFO:             autoviz: Not installed
2023-12-12 20:52:24,449:INFO:           fairlearn: Not installed
2023-12-12 20:52:24,449:INFO:          deepchecks: Not installed
2023-12-12 20:52:24,449:INFO:             xgboost: Not installed
2023-12-12 20:52:24,449:INFO:            catboost: Not installed
2023-12-12 20:52:24,449:INFO:              kmodes: Not installed
2023-12-12 20:52:24,449:INFO:             mlxtend: Not installed
2023-12-12 20:52:24,449:INFO:       statsforecast: Not installed
2023-12-12 20:52:24,449:INFO:        tune_sklearn: Not installed
2023-12-12 20:52:24,449:INFO:                 ray: Not installed
2023-12-12 20:52:24,449:INFO:            hyperopt: Not installed
2023-12-12 20:52:24,449:INFO:              optuna: Not installed
2023-12-12 20:52:24,449:INFO:               skopt: Not installed
2023-12-12 20:52:24,449:INFO:              mlflow: Not installed
2023-12-12 20:52:24,449:INFO:              gradio: Not installed
2023-12-12 20:52:24,449:INFO:             fastapi: Not installed
2023-12-12 20:52:24,449:INFO:             uvicorn: Not installed
2023-12-12 20:52:24,449:INFO:              m2cgen: Not installed
2023-12-12 20:52:24,449:INFO:           evidently: Not installed
2023-12-12 20:52:24,449:INFO:               fugue: Not installed
2023-12-12 20:52:24,449:INFO:           streamlit: Not installed
2023-12-12 20:52:24,449:INFO:             prophet: Not installed
2023-12-12 20:52:24,449:INFO:None
2023-12-12 20:52:24,449:INFO:Set up data.
2023-12-12 20:52:24,455:INFO:Set up folding strategy.
2023-12-12 20:52:24,455:INFO:Set up train/test split.
2023-12-12 20:52:24,458:INFO:Set up index.
2023-12-12 20:52:24,459:INFO:Assigning column types.
2023-12-12 20:52:24,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-12 20:52:24,462:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,466:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,470:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,555:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,556:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,559:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,563:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,650:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,696:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-12 20:52:24,700:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,758:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,802:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,806:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,856:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,899:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-12 20:52:24,906:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,953:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:24,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:24,999:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,081:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-12 20:52:25,135:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,174:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,265:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-12 20:52:25,318:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:52:25,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,446:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-12 20:52:25,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,664:INFO:Preparing preprocessing pipeline...
2023-12-12 20:52:25,665:INFO:Set up simple imputation.
2023-12-12 20:52:25,665:INFO:Set up column name cleaning.
2023-12-12 20:52:25,681:INFO:Finished creating preprocessing pipeline.
2023-12-12 20:52:25,686:INFO:Creating final display dataframe.
2023-12-12 20:52:25,744:INFO:Setup _display_container:                     Description             Value
0                    Session id              4812
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 19)
4        Transformed data shape        (1555, 19)
5   Transformed train set shape        (1088, 19)
6    Transformed test set shape         (467, 19)
7              Numeric features                18
8      Rows with missing values             98.7%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              647b
2023-12-12 20:52:25,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:52:25,948:INFO:setup() successfully completed in 1.51s...............
2023-12-12 20:53:41,789:INFO:Initializing compare_models()
2023-12-12 20:53:41,789:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-12 20:53:41,789:INFO:Checking exceptions
2023-12-12 20:53:41,791:INFO:Preparing display monitor
2023-12-12 20:53:41,812:INFO:Initializing Linear Regression
2023-12-12 20:53:41,812:INFO:Total runtime is 0.0 minutes
2023-12-12 20:53:41,816:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:41,816:INFO:Initializing create_model()
2023-12-12 20:53:41,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:41,816:INFO:Checking exceptions
2023-12-12 20:53:41,816:INFO:Importing libraries
2023-12-12 20:53:41,816:INFO:Copying training dataset
2023-12-12 20:53:41,819:INFO:Defining folds
2023-12-12 20:53:41,819:INFO:Declaring metric variables
2023-12-12 20:53:41,822:INFO:Importing untrained model
2023-12-12 20:53:41,826:INFO:Linear Regression Imported successfully
2023-12-12 20:53:41,831:INFO:Starting cross validation
2023-12-12 20:53:41,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:52,653:INFO:Calculating mean and std
2023-12-12 20:53:52,657:INFO:Creating metrics dataframe
2023-12-12 20:53:52,665:INFO:Uploading results into container
2023-12-12 20:53:52,667:INFO:Uploading model into container now
2023-12-12 20:53:52,669:INFO:_master_model_container: 1
2023-12-12 20:53:52,669:INFO:_display_container: 2
2023-12-12 20:53:52,670:INFO:LinearRegression(n_jobs=-1)
2023-12-12 20:53:52,670:INFO:create_model() successfully completed......................................
2023-12-12 20:53:52,965:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:52,965:INFO:Creating metrics dataframe
2023-12-12 20:53:52,981:INFO:Initializing Lasso Regression
2023-12-12 20:53:52,981:INFO:Total runtime is 0.1861416220664978 minutes
2023-12-12 20:53:52,986:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:52,986:INFO:Initializing create_model()
2023-12-12 20:53:52,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:52,987:INFO:Checking exceptions
2023-12-12 20:53:52,987:INFO:Importing libraries
2023-12-12 20:53:52,987:INFO:Copying training dataset
2023-12-12 20:53:52,994:INFO:Defining folds
2023-12-12 20:53:52,994:INFO:Declaring metric variables
2023-12-12 20:53:52,998:INFO:Importing untrained model
2023-12-12 20:53:53,002:INFO:Lasso Regression Imported successfully
2023-12-12 20:53:53,009:INFO:Starting cross validation
2023-12-12 20:53:53,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:56,470:INFO:Calculating mean and std
2023-12-12 20:53:56,472:INFO:Creating metrics dataframe
2023-12-12 20:53:56,477:INFO:Uploading results into container
2023-12-12 20:53:56,478:INFO:Uploading model into container now
2023-12-12 20:53:56,478:INFO:_master_model_container: 2
2023-12-12 20:53:56,478:INFO:_display_container: 2
2023-12-12 20:53:56,479:INFO:Lasso(random_state=4812)
2023-12-12 20:53:56,479:INFO:create_model() successfully completed......................................
2023-12-12 20:53:56,672:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:56,672:INFO:Creating metrics dataframe
2023-12-12 20:53:56,680:INFO:Initializing Ridge Regression
2023-12-12 20:53:56,680:INFO:Total runtime is 0.24779808918635052 minutes
2023-12-12 20:53:56,683:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:56,683:INFO:Initializing create_model()
2023-12-12 20:53:56,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:56,683:INFO:Checking exceptions
2023-12-12 20:53:56,684:INFO:Importing libraries
2023-12-12 20:53:56,684:INFO:Copying training dataset
2023-12-12 20:53:56,687:INFO:Defining folds
2023-12-12 20:53:56,687:INFO:Declaring metric variables
2023-12-12 20:53:56,690:INFO:Importing untrained model
2023-12-12 20:53:56,693:INFO:Ridge Regression Imported successfully
2023-12-12 20:53:56,698:INFO:Starting cross validation
2023-12-12 20:53:56,699:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:56,775:INFO:Calculating mean and std
2023-12-12 20:53:56,775:INFO:Creating metrics dataframe
2023-12-12 20:53:56,778:INFO:Uploading results into container
2023-12-12 20:53:56,778:INFO:Uploading model into container now
2023-12-12 20:53:56,779:INFO:_master_model_container: 3
2023-12-12 20:53:56,779:INFO:_display_container: 2
2023-12-12 20:53:56,779:INFO:Ridge(random_state=4812)
2023-12-12 20:53:56,779:INFO:create_model() successfully completed......................................
2023-12-12 20:53:56,911:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:56,912:INFO:Creating metrics dataframe
2023-12-12 20:53:56,918:INFO:Initializing Elastic Net
2023-12-12 20:53:56,919:INFO:Total runtime is 0.2517805814743042 minutes
2023-12-12 20:53:56,921:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:56,921:INFO:Initializing create_model()
2023-12-12 20:53:56,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:56,921:INFO:Checking exceptions
2023-12-12 20:53:56,921:INFO:Importing libraries
2023-12-12 20:53:56,921:INFO:Copying training dataset
2023-12-12 20:53:56,925:INFO:Defining folds
2023-12-12 20:53:56,925:INFO:Declaring metric variables
2023-12-12 20:53:56,928:INFO:Importing untrained model
2023-12-12 20:53:56,931:INFO:Elastic Net Imported successfully
2023-12-12 20:53:56,935:INFO:Starting cross validation
2023-12-12 20:53:56,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:56,997:INFO:Calculating mean and std
2023-12-12 20:53:56,997:INFO:Creating metrics dataframe
2023-12-12 20:53:57,000:INFO:Uploading results into container
2023-12-12 20:53:57,000:INFO:Uploading model into container now
2023-12-12 20:53:57,000:INFO:_master_model_container: 4
2023-12-12 20:53:57,000:INFO:_display_container: 2
2023-12-12 20:53:57,001:INFO:ElasticNet(random_state=4812)
2023-12-12 20:53:57,001:INFO:create_model() successfully completed......................................
2023-12-12 20:53:57,121:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:57,121:INFO:Creating metrics dataframe
2023-12-12 20:53:57,129:INFO:Initializing Least Angle Regression
2023-12-12 20:53:57,129:INFO:Total runtime is 0.2552787184715271 minutes
2023-12-12 20:53:57,131:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:57,132:INFO:Initializing create_model()
2023-12-12 20:53:57,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:57,132:INFO:Checking exceptions
2023-12-12 20:53:57,132:INFO:Importing libraries
2023-12-12 20:53:57,132:INFO:Copying training dataset
2023-12-12 20:53:57,135:INFO:Defining folds
2023-12-12 20:53:57,135:INFO:Declaring metric variables
2023-12-12 20:53:57,137:INFO:Importing untrained model
2023-12-12 20:53:57,140:INFO:Least Angle Regression Imported successfully
2023-12-12 20:53:57,145:INFO:Starting cross validation
2023-12-12 20:53:57,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:57,217:INFO:Calculating mean and std
2023-12-12 20:53:57,218:INFO:Creating metrics dataframe
2023-12-12 20:53:57,220:INFO:Uploading results into container
2023-12-12 20:53:57,220:INFO:Uploading model into container now
2023-12-12 20:53:57,221:INFO:_master_model_container: 5
2023-12-12 20:53:57,221:INFO:_display_container: 2
2023-12-12 20:53:57,221:INFO:Lars(random_state=4812)
2023-12-12 20:53:57,221:INFO:create_model() successfully completed......................................
2023-12-12 20:53:57,345:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:57,345:INFO:Creating metrics dataframe
2023-12-12 20:53:57,352:INFO:Initializing Lasso Least Angle Regression
2023-12-12 20:53:57,352:INFO:Total runtime is 0.2589956045150757 minutes
2023-12-12 20:53:57,355:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:57,355:INFO:Initializing create_model()
2023-12-12 20:53:57,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:57,355:INFO:Checking exceptions
2023-12-12 20:53:57,355:INFO:Importing libraries
2023-12-12 20:53:57,356:INFO:Copying training dataset
2023-12-12 20:53:57,358:INFO:Defining folds
2023-12-12 20:53:57,359:INFO:Declaring metric variables
2023-12-12 20:53:57,361:INFO:Importing untrained model
2023-12-12 20:53:57,363:INFO:Lasso Least Angle Regression Imported successfully
2023-12-12 20:53:57,368:INFO:Starting cross validation
2023-12-12 20:53:57,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:57,441:INFO:Calculating mean and std
2023-12-12 20:53:57,442:INFO:Creating metrics dataframe
2023-12-12 20:53:57,444:INFO:Uploading results into container
2023-12-12 20:53:57,444:INFO:Uploading model into container now
2023-12-12 20:53:57,445:INFO:_master_model_container: 6
2023-12-12 20:53:57,445:INFO:_display_container: 2
2023-12-12 20:53:57,445:INFO:LassoLars(random_state=4812)
2023-12-12 20:53:57,445:INFO:create_model() successfully completed......................................
2023-12-12 20:53:57,569:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:57,569:INFO:Creating metrics dataframe
2023-12-12 20:53:57,577:INFO:Initializing Orthogonal Matching Pursuit
2023-12-12 20:53:57,577:INFO:Total runtime is 0.2627482811609904 minutes
2023-12-12 20:53:57,580:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:57,580:INFO:Initializing create_model()
2023-12-12 20:53:57,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:57,581:INFO:Checking exceptions
2023-12-12 20:53:57,581:INFO:Importing libraries
2023-12-12 20:53:57,581:INFO:Copying training dataset
2023-12-12 20:53:57,585:INFO:Defining folds
2023-12-12 20:53:57,585:INFO:Declaring metric variables
2023-12-12 20:53:57,587:INFO:Importing untrained model
2023-12-12 20:53:57,590:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-12 20:53:57,597:INFO:Starting cross validation
2023-12-12 20:53:57,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:57,668:INFO:Calculating mean and std
2023-12-12 20:53:57,668:INFO:Creating metrics dataframe
2023-12-12 20:53:57,670:INFO:Uploading results into container
2023-12-12 20:53:57,671:INFO:Uploading model into container now
2023-12-12 20:53:57,671:INFO:_master_model_container: 7
2023-12-12 20:53:57,671:INFO:_display_container: 2
2023-12-12 20:53:57,671:INFO:OrthogonalMatchingPursuit()
2023-12-12 20:53:57,671:INFO:create_model() successfully completed......................................
2023-12-12 20:53:57,798:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:57,799:INFO:Creating metrics dataframe
2023-12-12 20:53:57,806:INFO:Initializing Bayesian Ridge
2023-12-12 20:53:57,806:INFO:Total runtime is 0.26656426588694254 minutes
2023-12-12 20:53:57,809:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:57,809:INFO:Initializing create_model()
2023-12-12 20:53:57,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:57,810:INFO:Checking exceptions
2023-12-12 20:53:57,810:INFO:Importing libraries
2023-12-12 20:53:57,810:INFO:Copying training dataset
2023-12-12 20:53:57,814:INFO:Defining folds
2023-12-12 20:53:57,814:INFO:Declaring metric variables
2023-12-12 20:53:57,817:INFO:Importing untrained model
2023-12-12 20:53:57,820:INFO:Bayesian Ridge Imported successfully
2023-12-12 20:53:57,825:INFO:Starting cross validation
2023-12-12 20:53:57,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:57,890:INFO:Calculating mean and std
2023-12-12 20:53:57,891:INFO:Creating metrics dataframe
2023-12-12 20:53:57,893:INFO:Uploading results into container
2023-12-12 20:53:57,894:INFO:Uploading model into container now
2023-12-12 20:53:57,894:INFO:_master_model_container: 8
2023-12-12 20:53:57,894:INFO:_display_container: 2
2023-12-12 20:53:57,894:INFO:BayesianRidge()
2023-12-12 20:53:57,894:INFO:create_model() successfully completed......................................
2023-12-12 20:53:58,014:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:58,014:INFO:Creating metrics dataframe
2023-12-12 20:53:58,021:INFO:Initializing Passive Aggressive Regressor
2023-12-12 20:53:58,022:INFO:Total runtime is 0.2701592445373535 minutes
2023-12-12 20:53:58,024:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:58,024:INFO:Initializing create_model()
2023-12-12 20:53:58,024:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:58,024:INFO:Checking exceptions
2023-12-12 20:53:58,024:INFO:Importing libraries
2023-12-12 20:53:58,024:INFO:Copying training dataset
2023-12-12 20:53:58,027:INFO:Defining folds
2023-12-12 20:53:58,028:INFO:Declaring metric variables
2023-12-12 20:53:58,031:INFO:Importing untrained model
2023-12-12 20:53:58,035:INFO:Passive Aggressive Regressor Imported successfully
2023-12-12 20:53:58,040:INFO:Starting cross validation
2023-12-12 20:53:58,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:58,112:INFO:Calculating mean and std
2023-12-12 20:53:58,112:INFO:Creating metrics dataframe
2023-12-12 20:53:58,115:INFO:Uploading results into container
2023-12-12 20:53:58,116:INFO:Uploading model into container now
2023-12-12 20:53:58,116:INFO:_master_model_container: 9
2023-12-12 20:53:58,116:INFO:_display_container: 2
2023-12-12 20:53:58,116:INFO:PassiveAggressiveRegressor(random_state=4812)
2023-12-12 20:53:58,116:INFO:create_model() successfully completed......................................
2023-12-12 20:53:58,243:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:58,243:INFO:Creating metrics dataframe
2023-12-12 20:53:58,252:INFO:Initializing Huber Regressor
2023-12-12 20:53:58,252:INFO:Total runtime is 0.2739922046661377 minutes
2023-12-12 20:53:58,254:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:58,254:INFO:Initializing create_model()
2023-12-12 20:53:58,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:58,255:INFO:Checking exceptions
2023-12-12 20:53:58,255:INFO:Importing libraries
2023-12-12 20:53:58,255:INFO:Copying training dataset
2023-12-12 20:53:58,258:INFO:Defining folds
2023-12-12 20:53:58,258:INFO:Declaring metric variables
2023-12-12 20:53:58,260:INFO:Importing untrained model
2023-12-12 20:53:58,263:INFO:Huber Regressor Imported successfully
2023-12-12 20:53:58,268:INFO:Starting cross validation
2023-12-12 20:53:58,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:58,358:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:53:58,372:INFO:Calculating mean and std
2023-12-12 20:53:58,373:INFO:Creating metrics dataframe
2023-12-12 20:53:58,375:INFO:Uploading results into container
2023-12-12 20:53:58,376:INFO:Uploading model into container now
2023-12-12 20:53:58,376:INFO:_master_model_container: 10
2023-12-12 20:53:58,376:INFO:_display_container: 2
2023-12-12 20:53:58,377:INFO:HuberRegressor()
2023-12-12 20:53:58,377:INFO:create_model() successfully completed......................................
2023-12-12 20:53:58,503:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:58,503:INFO:Creating metrics dataframe
2023-12-12 20:53:58,511:INFO:Initializing K Neighbors Regressor
2023-12-12 20:53:58,511:INFO:Total runtime is 0.2783128658930461 minutes
2023-12-12 20:53:58,514:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:58,514:INFO:Initializing create_model()
2023-12-12 20:53:58,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:58,514:INFO:Checking exceptions
2023-12-12 20:53:58,514:INFO:Importing libraries
2023-12-12 20:53:58,514:INFO:Copying training dataset
2023-12-12 20:53:58,517:INFO:Defining folds
2023-12-12 20:53:58,517:INFO:Declaring metric variables
2023-12-12 20:53:58,520:INFO:Importing untrained model
2023-12-12 20:53:58,525:INFO:K Neighbors Regressor Imported successfully
2023-12-12 20:53:58,535:INFO:Starting cross validation
2023-12-12 20:53:58,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:58,765:INFO:Calculating mean and std
2023-12-12 20:53:58,766:INFO:Creating metrics dataframe
2023-12-12 20:53:58,769:INFO:Uploading results into container
2023-12-12 20:53:58,769:INFO:Uploading model into container now
2023-12-12 20:53:58,769:INFO:_master_model_container: 11
2023-12-12 20:53:58,770:INFO:_display_container: 2
2023-12-12 20:53:58,770:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-12 20:53:58,770:INFO:create_model() successfully completed......................................
2023-12-12 20:53:58,899:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:58,899:INFO:Creating metrics dataframe
2023-12-12 20:53:58,908:INFO:Initializing Decision Tree Regressor
2023-12-12 20:53:58,908:INFO:Total runtime is 0.2849265058835348 minutes
2023-12-12 20:53:58,911:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:58,911:INFO:Initializing create_model()
2023-12-12 20:53:58,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:58,911:INFO:Checking exceptions
2023-12-12 20:53:58,911:INFO:Importing libraries
2023-12-12 20:53:58,911:INFO:Copying training dataset
2023-12-12 20:53:58,914:INFO:Defining folds
2023-12-12 20:53:58,914:INFO:Declaring metric variables
2023-12-12 20:53:58,917:INFO:Importing untrained model
2023-12-12 20:53:58,920:INFO:Decision Tree Regressor Imported successfully
2023-12-12 20:53:58,924:INFO:Starting cross validation
2023-12-12 20:53:58,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:53:58,999:INFO:Calculating mean and std
2023-12-12 20:53:58,999:INFO:Creating metrics dataframe
2023-12-12 20:53:59,001:INFO:Uploading results into container
2023-12-12 20:53:59,002:INFO:Uploading model into container now
2023-12-12 20:53:59,002:INFO:_master_model_container: 12
2023-12-12 20:53:59,002:INFO:_display_container: 2
2023-12-12 20:53:59,002:INFO:DecisionTreeRegressor(random_state=4812)
2023-12-12 20:53:59,002:INFO:create_model() successfully completed......................................
2023-12-12 20:53:59,127:INFO:SubProcess create_model() end ==================================
2023-12-12 20:53:59,127:INFO:Creating metrics dataframe
2023-12-12 20:53:59,135:INFO:Initializing Random Forest Regressor
2023-12-12 20:53:59,136:INFO:Total runtime is 0.2887312889099122 minutes
2023-12-12 20:53:59,138:INFO:SubProcess create_model() called ==================================
2023-12-12 20:53:59,139:INFO:Initializing create_model()
2023-12-12 20:53:59,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:53:59,139:INFO:Checking exceptions
2023-12-12 20:53:59,139:INFO:Importing libraries
2023-12-12 20:53:59,139:INFO:Copying training dataset
2023-12-12 20:53:59,142:INFO:Defining folds
2023-12-12 20:53:59,143:INFO:Declaring metric variables
2023-12-12 20:53:59,145:INFO:Importing untrained model
2023-12-12 20:53:59,148:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:53:59,154:INFO:Starting cross validation
2023-12-12 20:53:59,155:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:54:00,067:INFO:Calculating mean and std
2023-12-12 20:54:00,068:INFO:Creating metrics dataframe
2023-12-12 20:54:00,070:INFO:Uploading results into container
2023-12-12 20:54:00,071:INFO:Uploading model into container now
2023-12-12 20:54:00,071:INFO:_master_model_container: 13
2023-12-12 20:54:00,071:INFO:_display_container: 2
2023-12-12 20:54:00,071:INFO:RandomForestRegressor(n_jobs=-1, random_state=4812)
2023-12-12 20:54:00,072:INFO:create_model() successfully completed......................................
2023-12-12 20:54:00,198:INFO:SubProcess create_model() end ==================================
2023-12-12 20:54:00,198:INFO:Creating metrics dataframe
2023-12-12 20:54:00,207:INFO:Initializing Extra Trees Regressor
2023-12-12 20:54:00,207:INFO:Total runtime is 0.30657383600870775 minutes
2023-12-12 20:54:00,210:INFO:SubProcess create_model() called ==================================
2023-12-12 20:54:00,211:INFO:Initializing create_model()
2023-12-12 20:54:00,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:54:00,211:INFO:Checking exceptions
2023-12-12 20:54:00,211:INFO:Importing libraries
2023-12-12 20:54:00,211:INFO:Copying training dataset
2023-12-12 20:54:00,215:INFO:Defining folds
2023-12-12 20:54:00,215:INFO:Declaring metric variables
2023-12-12 20:54:00,219:INFO:Importing untrained model
2023-12-12 20:54:00,222:INFO:Extra Trees Regressor Imported successfully
2023-12-12 20:54:00,235:INFO:Starting cross validation
2023-12-12 20:54:00,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:54:00,850:INFO:Calculating mean and std
2023-12-12 20:54:00,850:INFO:Creating metrics dataframe
2023-12-12 20:54:00,853:INFO:Uploading results into container
2023-12-12 20:54:00,854:INFO:Uploading model into container now
2023-12-12 20:54:00,854:INFO:_master_model_container: 14
2023-12-12 20:54:00,854:INFO:_display_container: 2
2023-12-12 20:54:00,854:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4812)
2023-12-12 20:54:00,855:INFO:create_model() successfully completed......................................
2023-12-12 20:54:00,976:INFO:SubProcess create_model() end ==================================
2023-12-12 20:54:00,976:INFO:Creating metrics dataframe
2023-12-12 20:54:00,985:INFO:Initializing AdaBoost Regressor
2023-12-12 20:54:00,986:INFO:Total runtime is 0.3195574323336284 minutes
2023-12-12 20:54:00,988:INFO:SubProcess create_model() called ==================================
2023-12-12 20:54:00,989:INFO:Initializing create_model()
2023-12-12 20:54:00,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:54:00,989:INFO:Checking exceptions
2023-12-12 20:54:00,989:INFO:Importing libraries
2023-12-12 20:54:00,989:INFO:Copying training dataset
2023-12-12 20:54:00,992:INFO:Defining folds
2023-12-12 20:54:00,992:INFO:Declaring metric variables
2023-12-12 20:54:00,995:INFO:Importing untrained model
2023-12-12 20:54:00,997:INFO:AdaBoost Regressor Imported successfully
2023-12-12 20:54:01,002:INFO:Starting cross validation
2023-12-12 20:54:01,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:54:01,203:INFO:Calculating mean and std
2023-12-12 20:54:01,204:INFO:Creating metrics dataframe
2023-12-12 20:54:01,206:INFO:Uploading results into container
2023-12-12 20:54:01,206:INFO:Uploading model into container now
2023-12-12 20:54:01,207:INFO:_master_model_container: 15
2023-12-12 20:54:01,207:INFO:_display_container: 2
2023-12-12 20:54:01,207:INFO:AdaBoostRegressor(random_state=4812)
2023-12-12 20:54:01,207:INFO:create_model() successfully completed......................................
2023-12-12 20:54:01,335:INFO:SubProcess create_model() end ==================================
2023-12-12 20:54:01,335:INFO:Creating metrics dataframe
2023-12-12 20:54:01,344:INFO:Initializing Gradient Boosting Regressor
2023-12-12 20:54:01,344:INFO:Total runtime is 0.3255299925804139 minutes
2023-12-12 20:54:01,346:INFO:SubProcess create_model() called ==================================
2023-12-12 20:54:01,347:INFO:Initializing create_model()
2023-12-12 20:54:01,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:54:01,347:INFO:Checking exceptions
2023-12-12 20:54:01,347:INFO:Importing libraries
2023-12-12 20:54:01,347:INFO:Copying training dataset
2023-12-12 20:54:01,350:INFO:Defining folds
2023-12-12 20:54:01,350:INFO:Declaring metric variables
2023-12-12 20:54:01,353:INFO:Importing untrained model
2023-12-12 20:54:01,356:INFO:Gradient Boosting Regressor Imported successfully
2023-12-12 20:54:01,360:INFO:Starting cross validation
2023-12-12 20:54:01,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:54:01,675:INFO:Calculating mean and std
2023-12-12 20:54:01,675:INFO:Creating metrics dataframe
2023-12-12 20:54:01,678:INFO:Uploading results into container
2023-12-12 20:54:01,678:INFO:Uploading model into container now
2023-12-12 20:54:01,679:INFO:_master_model_container: 16
2023-12-12 20:54:01,679:INFO:_display_container: 2
2023-12-12 20:54:01,679:INFO:GradientBoostingRegressor(random_state=4812)
2023-12-12 20:54:01,679:INFO:create_model() successfully completed......................................
2023-12-12 20:54:01,812:INFO:SubProcess create_model() end ==================================
2023-12-12 20:54:01,813:INFO:Creating metrics dataframe
2023-12-12 20:54:01,822:INFO:Initializing Light Gradient Boosting Machine
2023-12-12 20:54:01,822:INFO:Total runtime is 0.33349978129069013 minutes
2023-12-12 20:54:01,825:INFO:SubProcess create_model() called ==================================
2023-12-12 20:54:01,825:INFO:Initializing create_model()
2023-12-12 20:54:01,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:54:01,825:INFO:Checking exceptions
2023-12-12 20:54:01,825:INFO:Importing libraries
2023-12-12 20:54:01,825:INFO:Copying training dataset
2023-12-12 20:54:01,829:INFO:Defining folds
2023-12-12 20:54:01,829:INFO:Declaring metric variables
2023-12-12 20:54:01,832:INFO:Importing untrained model
2023-12-12 20:54:01,835:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-12 20:54:01,840:INFO:Starting cross validation
2023-12-12 20:54:01,841:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:54:02,913:INFO:Calculating mean and std
2023-12-12 20:54:02,915:INFO:Creating metrics dataframe
2023-12-12 20:54:02,920:INFO:Uploading results into container
2023-12-12 20:54:02,921:INFO:Uploading model into container now
2023-12-12 20:54:02,922:INFO:_master_model_container: 17
2023-12-12 20:54:02,922:INFO:_display_container: 2
2023-12-12 20:54:02,923:INFO:LGBMRegressor(n_jobs=-1, random_state=4812)
2023-12-12 20:54:02,923:INFO:create_model() successfully completed......................................
2023-12-12 20:54:03,123:INFO:SubProcess create_model() end ==================================
2023-12-12 20:54:03,123:INFO:Creating metrics dataframe
2023-12-12 20:54:03,134:INFO:Initializing Dummy Regressor
2023-12-12 20:54:03,134:INFO:Total runtime is 0.3553600827852885 minutes
2023-12-12 20:54:03,137:INFO:SubProcess create_model() called ==================================
2023-12-12 20:54:03,137:INFO:Initializing create_model()
2023-12-12 20:54:03,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C677F8EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:54:03,137:INFO:Checking exceptions
2023-12-12 20:54:03,137:INFO:Importing libraries
2023-12-12 20:54:03,137:INFO:Copying training dataset
2023-12-12 20:54:03,141:INFO:Defining folds
2023-12-12 20:54:03,141:INFO:Declaring metric variables
2023-12-12 20:54:03,145:INFO:Importing untrained model
2023-12-12 20:54:03,147:INFO:Dummy Regressor Imported successfully
2023-12-12 20:54:03,152:INFO:Starting cross validation
2023-12-12 20:54:03,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:54:03,216:INFO:Calculating mean and std
2023-12-12 20:54:03,216:INFO:Creating metrics dataframe
2023-12-12 20:54:03,218:INFO:Uploading results into container
2023-12-12 20:54:03,219:INFO:Uploading model into container now
2023-12-12 20:54:03,219:INFO:_master_model_container: 18
2023-12-12 20:54:03,219:INFO:_display_container: 2
2023-12-12 20:54:03,219:INFO:DummyRegressor()
2023-12-12 20:54:03,219:INFO:create_model() successfully completed......................................
2023-12-12 20:54:03,346:INFO:SubProcess create_model() end ==================================
2023-12-12 20:54:03,346:INFO:Creating metrics dataframe
2023-12-12 20:54:03,364:INFO:Initializing create_model()
2023-12-12 20:54:03,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C678FB7FD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4812), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:54:03,365:INFO:Checking exceptions
2023-12-12 20:54:03,366:INFO:Importing libraries
2023-12-12 20:54:03,366:INFO:Copying training dataset
2023-12-12 20:54:03,369:INFO:Defining folds
2023-12-12 20:54:03,369:INFO:Declaring metric variables
2023-12-12 20:54:03,370:INFO:Importing untrained model
2023-12-12 20:54:03,370:INFO:Declaring custom model
2023-12-12 20:54:03,370:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:54:03,371:INFO:Cross validation set to False
2023-12-12 20:54:03,371:INFO:Fitting Model
2023-12-12 20:54:03,549:INFO:RandomForestRegressor(n_jobs=-1, random_state=4812)
2023-12-12 20:54:03,549:INFO:create_model() successfully completed......................................
2023-12-12 20:54:03,702:INFO:_master_model_container: 18
2023-12-12 20:54:03,702:INFO:_display_container: 2
2023-12-12 20:54:03,702:INFO:RandomForestRegressor(n_jobs=-1, random_state=4812)
2023-12-12 20:54:03,702:INFO:compare_models() successfully completed......................................
2023-12-12 20:55:15,185:INFO:PyCaret RegressionExperiment
2023-12-12 20:55:15,185:INFO:Logging name: reg-default-name
2023-12-12 20:55:15,186:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-12 20:55:15,186:INFO:version 3.2.0
2023-12-12 20:55:15,186:INFO:Initializing setup()
2023-12-12 20:55:15,186:INFO:self.USI: 31ae
2023-12-12 20:55:15,186:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'X', '_ml_usecase', 'USI', 'fold_shuffle_param', 'y_train', '_available_plots', 'X_train', 'n_jobs_param', 'target_param', 'memory', 'exp_id', 'idx', 'html_param', 'fold_groups_param', 'pipeline', 'X_test', 'seed', 'y_test', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'data', 'log_plots_param', 'gpu_param', 'y'}
2023-12-12 20:55:15,186:INFO:Checking environment
2023-12-12 20:55:15,186:INFO:python_version: 3.11.0
2023-12-12 20:55:15,186:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-12 20:55:15,186:INFO:machine: AMD64
2023-12-12 20:55:15,187:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-12 20:55:15,193:INFO:Memory: svmem(total=14877257728, available=1715945472, percent=88.5, used=13161312256, free=1715945472)
2023-12-12 20:55:15,193:INFO:Physical Core: 8
2023-12-12 20:55:15,193:INFO:Logical Core: 16
2023-12-12 20:55:15,194:INFO:Checking libraries
2023-12-12 20:55:15,194:INFO:System:
2023-12-12 20:55:15,194:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-12 20:55:15,194:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-12 20:55:15,194:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-12 20:55:15,194:INFO:PyCaret required dependencies:
2023-12-12 20:55:15,194:INFO:                 pip: 22.3
2023-12-12 20:55:15,194:INFO:          setuptools: 65.5.0
2023-12-12 20:55:15,194:INFO:             pycaret: 3.2.0
2023-12-12 20:55:15,194:INFO:             IPython: 8.18.1
2023-12-12 20:55:15,194:INFO:          ipywidgets: 8.1.1
2023-12-12 20:55:15,194:INFO:                tqdm: 4.66.1
2023-12-12 20:55:15,194:INFO:               numpy: 1.25.2
2023-12-12 20:55:15,194:INFO:              pandas: 1.5.3
2023-12-12 20:55:15,194:INFO:              jinja2: 3.1.2
2023-12-12 20:55:15,194:INFO:               scipy: 1.10.1
2023-12-12 20:55:15,194:INFO:              joblib: 1.3.2
2023-12-12 20:55:15,194:INFO:             sklearn: 1.2.2
2023-12-12 20:55:15,194:INFO:                pyod: 1.1.2
2023-12-12 20:55:15,194:INFO:            imblearn: 0.11.0
2023-12-12 20:55:15,195:INFO:   category_encoders: 2.6.3
2023-12-12 20:55:15,195:INFO:            lightgbm: 4.1.0
2023-12-12 20:55:15,195:INFO:               numba: 0.58.1
2023-12-12 20:55:15,195:INFO:            requests: 2.31.0
2023-12-12 20:55:15,195:INFO:          matplotlib: 3.6.0
2023-12-12 20:55:15,195:INFO:          scikitplot: 0.3.7
2023-12-12 20:55:15,195:INFO:         yellowbrick: 1.5
2023-12-12 20:55:15,195:INFO:              plotly: 5.18.0
2023-12-12 20:55:15,195:INFO:    plotly-resampler: Not installed
2023-12-12 20:55:15,195:INFO:             kaleido: 0.2.1
2023-12-12 20:55:15,195:INFO:           schemdraw: 0.15
2023-12-12 20:55:15,195:INFO:         statsmodels: 0.14.0
2023-12-12 20:55:15,196:INFO:              sktime: 0.21.1
2023-12-12 20:55:15,196:INFO:               tbats: 1.1.3
2023-12-12 20:55:15,196:INFO:            pmdarima: 2.0.4
2023-12-12 20:55:15,196:INFO:              psutil: 5.9.6
2023-12-12 20:55:15,196:INFO:          markupsafe: 2.1.3
2023-12-12 20:55:15,196:INFO:             pickle5: Not installed
2023-12-12 20:55:15,196:INFO:         cloudpickle: 3.0.0
2023-12-12 20:55:15,196:INFO:         deprecation: 2.1.0
2023-12-12 20:55:15,196:INFO:              xxhash: 3.4.1
2023-12-12 20:55:15,196:INFO:           wurlitzer: Not installed
2023-12-12 20:55:15,196:INFO:PyCaret optional dependencies:
2023-12-12 20:55:15,196:INFO:                shap: Not installed
2023-12-12 20:55:15,196:INFO:           interpret: Not installed
2023-12-12 20:55:15,196:INFO:                umap: Not installed
2023-12-12 20:55:15,196:INFO:     ydata_profiling: Not installed
2023-12-12 20:55:15,196:INFO:  explainerdashboard: Not installed
2023-12-12 20:55:15,196:INFO:             autoviz: Not installed
2023-12-12 20:55:15,196:INFO:           fairlearn: Not installed
2023-12-12 20:55:15,196:INFO:          deepchecks: Not installed
2023-12-12 20:55:15,196:INFO:             xgboost: Not installed
2023-12-12 20:55:15,197:INFO:            catboost: Not installed
2023-12-12 20:55:15,197:INFO:              kmodes: Not installed
2023-12-12 20:55:15,197:INFO:             mlxtend: Not installed
2023-12-12 20:55:15,197:INFO:       statsforecast: Not installed
2023-12-12 20:55:15,197:INFO:        tune_sklearn: Not installed
2023-12-12 20:55:15,197:INFO:                 ray: Not installed
2023-12-12 20:55:15,197:INFO:            hyperopt: Not installed
2023-12-12 20:55:15,197:INFO:              optuna: Not installed
2023-12-12 20:55:15,197:INFO:               skopt: Not installed
2023-12-12 20:55:15,197:INFO:              mlflow: Not installed
2023-12-12 20:55:15,197:INFO:              gradio: Not installed
2023-12-12 20:55:15,197:INFO:             fastapi: Not installed
2023-12-12 20:55:15,197:INFO:             uvicorn: Not installed
2023-12-12 20:55:15,197:INFO:              m2cgen: Not installed
2023-12-12 20:55:15,197:INFO:           evidently: Not installed
2023-12-12 20:55:15,197:INFO:               fugue: Not installed
2023-12-12 20:55:15,197:INFO:           streamlit: Not installed
2023-12-12 20:55:15,197:INFO:             prophet: Not installed
2023-12-12 20:55:15,197:INFO:None
2023-12-12 20:55:15,198:INFO:Set up data.
2023-12-12 20:55:15,205:INFO:Set up folding strategy.
2023-12-12 20:55:15,205:INFO:Set up train/test split.
2023-12-12 20:55:15,207:INFO:Set up index.
2023-12-12 20:55:15,208:INFO:Assigning column types.
2023-12-12 20:55:15,212:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-12 20:55:15,212:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,216:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,221:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,273:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,310:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,313:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,317:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,370:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,417:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-12 20:55:15,423:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,428:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,484:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,534:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,542:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,635:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-12 20:55:15,643:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,737:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,746:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,835:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-12 20:55:15,889:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,925:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:15,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:15,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:16,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-12 20:55:16,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,022:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-12 20:55:16,078:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:16,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,170:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-12 20:55:16,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,207:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-12 20:55:16,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,422:INFO:Preparing preprocessing pipeline...
2023-12-12 20:55:16,422:INFO:Set up simple imputation.
2023-12-12 20:55:16,423:INFO:Set up column name cleaning.
2023-12-12 20:55:16,439:INFO:Finished creating preprocessing pipeline.
2023-12-12 20:55:16,443:INFO:Creating final display dataframe.
2023-12-12 20:55:16,496:INFO:Setup _display_container:                     Description             Value
0                    Session id              6458
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 20)
4        Transformed data shape        (1555, 20)
5   Transformed train set shape        (1088, 20)
6    Transformed test set shape         (467, 20)
7              Numeric features                19
8      Rows with missing values             98.6%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              31ae
2023-12-12 20:55:16,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-12 20:55:16,688:INFO:setup() successfully completed in 1.5s...............
2023-12-12 20:55:22,406:INFO:Initializing compare_models()
2023-12-12 20:55:22,406:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-12 20:55:22,406:INFO:Checking exceptions
2023-12-12 20:55:22,408:INFO:Preparing display monitor
2023-12-12 20:55:22,426:INFO:Initializing Linear Regression
2023-12-12 20:55:22,426:INFO:Total runtime is 0.0 minutes
2023-12-12 20:55:22,429:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:22,429:INFO:Initializing create_model()
2023-12-12 20:55:22,429:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:22,429:INFO:Checking exceptions
2023-12-12 20:55:22,430:INFO:Importing libraries
2023-12-12 20:55:22,430:INFO:Copying training dataset
2023-12-12 20:55:22,433:INFO:Defining folds
2023-12-12 20:55:22,433:INFO:Declaring metric variables
2023-12-12 20:55:22,436:INFO:Importing untrained model
2023-12-12 20:55:22,440:INFO:Linear Regression Imported successfully
2023-12-12 20:55:22,447:INFO:Starting cross validation
2023-12-12 20:55:22,448:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:22,530:INFO:Calculating mean and std
2023-12-12 20:55:22,530:INFO:Creating metrics dataframe
2023-12-12 20:55:22,533:INFO:Uploading results into container
2023-12-12 20:55:22,533:INFO:Uploading model into container now
2023-12-12 20:55:22,533:INFO:_master_model_container: 1
2023-12-12 20:55:22,533:INFO:_display_container: 2
2023-12-12 20:55:22,534:INFO:LinearRegression(n_jobs=-1)
2023-12-12 20:55:22,534:INFO:create_model() successfully completed......................................
2023-12-12 20:55:22,694:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:22,694:INFO:Creating metrics dataframe
2023-12-12 20:55:22,703:INFO:Initializing Lasso Regression
2023-12-12 20:55:22,703:INFO:Total runtime is 0.004612004756927491 minutes
2023-12-12 20:55:22,707:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:22,708:INFO:Initializing create_model()
2023-12-12 20:55:22,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:22,708:INFO:Checking exceptions
2023-12-12 20:55:22,708:INFO:Importing libraries
2023-12-12 20:55:22,708:INFO:Copying training dataset
2023-12-12 20:55:22,711:INFO:Defining folds
2023-12-12 20:55:22,712:INFO:Declaring metric variables
2023-12-12 20:55:22,715:INFO:Importing untrained model
2023-12-12 20:55:22,720:INFO:Lasso Regression Imported successfully
2023-12-12 20:55:22,727:INFO:Starting cross validation
2023-12-12 20:55:22,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:22,791:INFO:Calculating mean and std
2023-12-12 20:55:22,791:INFO:Creating metrics dataframe
2023-12-12 20:55:22,794:INFO:Uploading results into container
2023-12-12 20:55:22,794:INFO:Uploading model into container now
2023-12-12 20:55:22,794:INFO:_master_model_container: 2
2023-12-12 20:55:22,794:INFO:_display_container: 2
2023-12-12 20:55:22,795:INFO:Lasso(random_state=6458)
2023-12-12 20:55:22,795:INFO:create_model() successfully completed......................................
2023-12-12 20:55:22,940:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:22,940:INFO:Creating metrics dataframe
2023-12-12 20:55:22,947:INFO:Initializing Ridge Regression
2023-12-12 20:55:22,947:INFO:Total runtime is 0.008689014116923015 minutes
2023-12-12 20:55:22,950:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:22,950:INFO:Initializing create_model()
2023-12-12 20:55:22,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:22,950:INFO:Checking exceptions
2023-12-12 20:55:22,950:INFO:Importing libraries
2023-12-12 20:55:22,950:INFO:Copying training dataset
2023-12-12 20:55:22,954:INFO:Defining folds
2023-12-12 20:55:22,954:INFO:Declaring metric variables
2023-12-12 20:55:22,957:INFO:Importing untrained model
2023-12-12 20:55:22,959:INFO:Ridge Regression Imported successfully
2023-12-12 20:55:22,966:INFO:Starting cross validation
2023-12-12 20:55:22,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:23,071:INFO:Calculating mean and std
2023-12-12 20:55:23,072:INFO:Creating metrics dataframe
2023-12-12 20:55:23,075:INFO:Uploading results into container
2023-12-12 20:55:23,075:INFO:Uploading model into container now
2023-12-12 20:55:23,076:INFO:_master_model_container: 3
2023-12-12 20:55:23,076:INFO:_display_container: 2
2023-12-12 20:55:23,076:INFO:Ridge(random_state=6458)
2023-12-12 20:55:23,076:INFO:create_model() successfully completed......................................
2023-12-12 20:55:23,217:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:23,217:INFO:Creating metrics dataframe
2023-12-12 20:55:23,224:INFO:Initializing Elastic Net
2023-12-12 20:55:23,225:INFO:Total runtime is 0.01331561803817749 minutes
2023-12-12 20:55:23,229:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:23,229:INFO:Initializing create_model()
2023-12-12 20:55:23,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:23,229:INFO:Checking exceptions
2023-12-12 20:55:23,230:INFO:Importing libraries
2023-12-12 20:55:23,230:INFO:Copying training dataset
2023-12-12 20:55:23,234:INFO:Defining folds
2023-12-12 20:55:23,234:INFO:Declaring metric variables
2023-12-12 20:55:23,237:INFO:Importing untrained model
2023-12-12 20:55:23,239:INFO:Elastic Net Imported successfully
2023-12-12 20:55:23,246:INFO:Starting cross validation
2023-12-12 20:55:23,247:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:23,311:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.080e+12, tolerance: 7.631e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-12 20:55:23,311:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.850e+12, tolerance: 7.519e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-12 20:55:23,311:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.225e+12, tolerance: 7.548e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-12 20:55:23,313:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.963e+12, tolerance: 7.657e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-12 20:55:23,323:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.465e+12, tolerance: 7.674e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-12 20:55:23,323:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.014e+13, tolerance: 7.613e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-12 20:55:23,334:INFO:Calculating mean and std
2023-12-12 20:55:23,334:INFO:Creating metrics dataframe
2023-12-12 20:55:23,337:INFO:Uploading results into container
2023-12-12 20:55:23,337:INFO:Uploading model into container now
2023-12-12 20:55:23,337:INFO:_master_model_container: 4
2023-12-12 20:55:23,337:INFO:_display_container: 2
2023-12-12 20:55:23,337:INFO:ElasticNet(random_state=6458)
2023-12-12 20:55:23,337:INFO:create_model() successfully completed......................................
2023-12-12 20:55:23,469:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:23,470:INFO:Creating metrics dataframe
2023-12-12 20:55:23,478:INFO:Initializing Least Angle Regression
2023-12-12 20:55:23,478:INFO:Total runtime is 0.017529467741648357 minutes
2023-12-12 20:55:23,481:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:23,481:INFO:Initializing create_model()
2023-12-12 20:55:23,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:23,482:INFO:Checking exceptions
2023-12-12 20:55:23,482:INFO:Importing libraries
2023-12-12 20:55:23,482:INFO:Copying training dataset
2023-12-12 20:55:23,487:INFO:Defining folds
2023-12-12 20:55:23,487:INFO:Declaring metric variables
2023-12-12 20:55:23,490:INFO:Importing untrained model
2023-12-12 20:55:23,494:INFO:Least Angle Regression Imported successfully
2023-12-12 20:55:23,502:INFO:Starting cross validation
2023-12-12 20:55:23,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:23,565:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=2.170e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,565:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.251e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,565:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=9.659e+05, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,565:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=4.813e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,565:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.091e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,565:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=1.085e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=6.255e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.207e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=5.041e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.623e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.537e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.203e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,566:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.761e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.533e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=1.764e+03, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=5.308e+02, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=1.240e+03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=7.314e+01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.239e+03, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.021e+02, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,567:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.778e+02, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,568:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=5.984e+02, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,568:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=5.517e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,568:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=2.378e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,568:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.173e+02, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,588:INFO:Calculating mean and std
2023-12-12 20:55:23,589:INFO:Creating metrics dataframe
2023-12-12 20:55:23,592:INFO:Uploading results into container
2023-12-12 20:55:23,592:INFO:Uploading model into container now
2023-12-12 20:55:23,593:INFO:_master_model_container: 5
2023-12-12 20:55:23,593:INFO:_display_container: 2
2023-12-12 20:55:23,593:INFO:Lars(random_state=6458)
2023-12-12 20:55:23,594:INFO:create_model() successfully completed......................................
2023-12-12 20:55:23,724:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:23,724:INFO:Creating metrics dataframe
2023-12-12 20:55:23,733:INFO:Initializing Lasso Least Angle Regression
2023-12-12 20:55:23,733:INFO:Total runtime is 0.02177395025889079 minutes
2023-12-12 20:55:23,735:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:23,736:INFO:Initializing create_model()
2023-12-12 20:55:23,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:23,736:INFO:Checking exceptions
2023-12-12 20:55:23,736:INFO:Importing libraries
2023-12-12 20:55:23,736:INFO:Copying training dataset
2023-12-12 20:55:23,740:INFO:Defining folds
2023-12-12 20:55:23,740:INFO:Declaring metric variables
2023-12-12 20:55:23,743:INFO:Importing untrained model
2023-12-12 20:55:23,746:INFO:Lasso Least Angle Regression Imported successfully
2023-12-12 20:55:23,752:INFO:Starting cross validation
2023-12-12 20:55:23,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:23,780:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.251e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,781:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=6.255e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,781:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.623e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,782:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.761e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,783:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=1.240e+03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,784:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.778e+02, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,784:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=5.517e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,785:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=2.378e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,786:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=9.659e+05, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,787:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=4.813e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,788:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.207e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,788:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.203e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,789:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=1.764e+03, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,791:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.021e+02, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,793:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=2.170e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,794:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=1.085e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,794:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=5.041e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,794:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.537e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,796:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.533e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,797:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=4.446e+04, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,797:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.239e+03, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,797:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=2.091e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,797:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=5.984e+02, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,798:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.173e+02, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-12-12 20:55:23,798:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 8 iterations, alpha=1.685e+04, previous alpha=8.594e+03, with an active set of 7 regressors.
  warnings.warn(

2023-12-12 20:55:23,817:INFO:Calculating mean and std
2023-12-12 20:55:23,818:INFO:Creating metrics dataframe
2023-12-12 20:55:23,821:INFO:Uploading results into container
2023-12-12 20:55:23,821:INFO:Uploading model into container now
2023-12-12 20:55:23,822:INFO:_master_model_container: 6
2023-12-12 20:55:23,822:INFO:_display_container: 2
2023-12-12 20:55:23,822:INFO:LassoLars(random_state=6458)
2023-12-12 20:55:23,822:INFO:create_model() successfully completed......................................
2023-12-12 20:55:23,946:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:23,946:INFO:Creating metrics dataframe
2023-12-12 20:55:23,953:INFO:Initializing Orthogonal Matching Pursuit
2023-12-12 20:55:23,954:INFO:Total runtime is 0.025471905867258712 minutes
2023-12-12 20:55:23,956:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:23,957:INFO:Initializing create_model()
2023-12-12 20:55:23,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:23,957:INFO:Checking exceptions
2023-12-12 20:55:23,957:INFO:Importing libraries
2023-12-12 20:55:23,957:INFO:Copying training dataset
2023-12-12 20:55:23,960:INFO:Defining folds
2023-12-12 20:55:23,960:INFO:Declaring metric variables
2023-12-12 20:55:23,963:INFO:Importing untrained model
2023-12-12 20:55:23,966:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-12 20:55:23,972:INFO:Starting cross validation
2023-12-12 20:55:23,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:24,033:INFO:Calculating mean and std
2023-12-12 20:55:24,034:INFO:Creating metrics dataframe
2023-12-12 20:55:24,036:INFO:Uploading results into container
2023-12-12 20:55:24,036:INFO:Uploading model into container now
2023-12-12 20:55:24,037:INFO:_master_model_container: 7
2023-12-12 20:55:24,037:INFO:_display_container: 2
2023-12-12 20:55:24,037:INFO:OrthogonalMatchingPursuit()
2023-12-12 20:55:24,037:INFO:create_model() successfully completed......................................
2023-12-12 20:55:24,164:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:24,164:INFO:Creating metrics dataframe
2023-12-12 20:55:24,173:INFO:Initializing Bayesian Ridge
2023-12-12 20:55:24,173:INFO:Total runtime is 0.02911700010299683 minutes
2023-12-12 20:55:24,175:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:24,176:INFO:Initializing create_model()
2023-12-12 20:55:24,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:24,176:INFO:Checking exceptions
2023-12-12 20:55:24,176:INFO:Importing libraries
2023-12-12 20:55:24,176:INFO:Copying training dataset
2023-12-12 20:55:24,179:INFO:Defining folds
2023-12-12 20:55:24,180:INFO:Declaring metric variables
2023-12-12 20:55:24,182:INFO:Importing untrained model
2023-12-12 20:55:24,186:INFO:Bayesian Ridge Imported successfully
2023-12-12 20:55:24,191:INFO:Starting cross validation
2023-12-12 20:55:24,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:24,262:INFO:Calculating mean and std
2023-12-12 20:55:24,262:INFO:Creating metrics dataframe
2023-12-12 20:55:24,265:INFO:Uploading results into container
2023-12-12 20:55:24,265:INFO:Uploading model into container now
2023-12-12 20:55:24,265:INFO:_master_model_container: 8
2023-12-12 20:55:24,265:INFO:_display_container: 2
2023-12-12 20:55:24,265:INFO:BayesianRidge()
2023-12-12 20:55:24,265:INFO:create_model() successfully completed......................................
2023-12-12 20:55:24,391:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:24,392:INFO:Creating metrics dataframe
2023-12-12 20:55:24,399:INFO:Initializing Passive Aggressive Regressor
2023-12-12 20:55:24,399:INFO:Total runtime is 0.03288591305414836 minutes
2023-12-12 20:55:24,402:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:24,403:INFO:Initializing create_model()
2023-12-12 20:55:24,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:24,403:INFO:Checking exceptions
2023-12-12 20:55:24,403:INFO:Importing libraries
2023-12-12 20:55:24,403:INFO:Copying training dataset
2023-12-12 20:55:24,406:INFO:Defining folds
2023-12-12 20:55:24,406:INFO:Declaring metric variables
2023-12-12 20:55:24,409:INFO:Importing untrained model
2023-12-12 20:55:24,412:INFO:Passive Aggressive Regressor Imported successfully
2023-12-12 20:55:24,418:INFO:Starting cross validation
2023-12-12 20:55:24,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:24,478:INFO:Calculating mean and std
2023-12-12 20:55:24,478:INFO:Creating metrics dataframe
2023-12-12 20:55:24,480:INFO:Uploading results into container
2023-12-12 20:55:24,481:INFO:Uploading model into container now
2023-12-12 20:55:24,481:INFO:_master_model_container: 9
2023-12-12 20:55:24,481:INFO:_display_container: 2
2023-12-12 20:55:24,481:INFO:PassiveAggressiveRegressor(random_state=6458)
2023-12-12 20:55:24,481:INFO:create_model() successfully completed......................................
2023-12-12 20:55:24,607:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:24,607:INFO:Creating metrics dataframe
2023-12-12 20:55:24,615:INFO:Initializing Huber Regressor
2023-12-12 20:55:24,615:INFO:Total runtime is 0.03647400935490927 minutes
2023-12-12 20:55:24,618:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:24,618:INFO:Initializing create_model()
2023-12-12 20:55:24,618:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:24,618:INFO:Checking exceptions
2023-12-12 20:55:24,618:INFO:Importing libraries
2023-12-12 20:55:24,618:INFO:Copying training dataset
2023-12-12 20:55:24,622:INFO:Defining folds
2023-12-12 20:55:24,622:INFO:Declaring metric variables
2023-12-12 20:55:24,625:INFO:Importing untrained model
2023-12-12 20:55:24,628:INFO:Huber Regressor Imported successfully
2023-12-12 20:55:24,633:INFO:Starting cross validation
2023-12-12 20:55:24,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:24,693:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,704:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,706:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,707:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,713:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,723:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,723:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,726:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,726:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,733:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-12 20:55:24,740:INFO:Calculating mean and std
2023-12-12 20:55:24,741:INFO:Creating metrics dataframe
2023-12-12 20:55:24,744:INFO:Uploading results into container
2023-12-12 20:55:24,744:INFO:Uploading model into container now
2023-12-12 20:55:24,745:INFO:_master_model_container: 10
2023-12-12 20:55:24,745:INFO:_display_container: 2
2023-12-12 20:55:24,745:INFO:HuberRegressor()
2023-12-12 20:55:24,745:INFO:create_model() successfully completed......................................
2023-12-12 20:55:24,875:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:24,875:INFO:Creating metrics dataframe
2023-12-12 20:55:24,883:INFO:Initializing K Neighbors Regressor
2023-12-12 20:55:24,883:INFO:Total runtime is 0.04094469547271729 minutes
2023-12-12 20:55:24,886:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:24,886:INFO:Initializing create_model()
2023-12-12 20:55:24,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:24,886:INFO:Checking exceptions
2023-12-12 20:55:24,886:INFO:Importing libraries
2023-12-12 20:55:24,886:INFO:Copying training dataset
2023-12-12 20:55:24,890:INFO:Defining folds
2023-12-12 20:55:24,890:INFO:Declaring metric variables
2023-12-12 20:55:24,893:INFO:Importing untrained model
2023-12-12 20:55:24,896:INFO:K Neighbors Regressor Imported successfully
2023-12-12 20:55:24,901:INFO:Starting cross validation
2023-12-12 20:55:24,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:25,082:INFO:Calculating mean and std
2023-12-12 20:55:25,083:INFO:Creating metrics dataframe
2023-12-12 20:55:25,086:INFO:Uploading results into container
2023-12-12 20:55:25,087:INFO:Uploading model into container now
2023-12-12 20:55:25,087:INFO:_master_model_container: 11
2023-12-12 20:55:25,088:INFO:_display_container: 2
2023-12-12 20:55:25,088:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-12 20:55:25,088:INFO:create_model() successfully completed......................................
2023-12-12 20:55:25,215:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:25,215:INFO:Creating metrics dataframe
2023-12-12 20:55:25,223:INFO:Initializing Decision Tree Regressor
2023-12-12 20:55:25,223:INFO:Total runtime is 0.04661121368408204 minutes
2023-12-12 20:55:25,226:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:25,226:INFO:Initializing create_model()
2023-12-12 20:55:25,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:25,227:INFO:Checking exceptions
2023-12-12 20:55:25,227:INFO:Importing libraries
2023-12-12 20:55:25,227:INFO:Copying training dataset
2023-12-12 20:55:25,230:INFO:Defining folds
2023-12-12 20:55:25,231:INFO:Declaring metric variables
2023-12-12 20:55:25,233:INFO:Importing untrained model
2023-12-12 20:55:25,236:INFO:Decision Tree Regressor Imported successfully
2023-12-12 20:55:25,241:INFO:Starting cross validation
2023-12-12 20:55:25,242:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:25,315:INFO:Calculating mean and std
2023-12-12 20:55:25,315:INFO:Creating metrics dataframe
2023-12-12 20:55:25,318:INFO:Uploading results into container
2023-12-12 20:55:25,318:INFO:Uploading model into container now
2023-12-12 20:55:25,318:INFO:_master_model_container: 12
2023-12-12 20:55:25,318:INFO:_display_container: 2
2023-12-12 20:55:25,319:INFO:DecisionTreeRegressor(random_state=6458)
2023-12-12 20:55:25,319:INFO:create_model() successfully completed......................................
2023-12-12 20:55:25,444:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:25,444:INFO:Creating metrics dataframe
2023-12-12 20:55:25,452:INFO:Initializing Random Forest Regressor
2023-12-12 20:55:25,452:INFO:Total runtime is 0.05043022632598878 minutes
2023-12-12 20:55:25,456:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:25,456:INFO:Initializing create_model()
2023-12-12 20:55:25,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:25,456:INFO:Checking exceptions
2023-12-12 20:55:25,456:INFO:Importing libraries
2023-12-12 20:55:25,456:INFO:Copying training dataset
2023-12-12 20:55:25,460:INFO:Defining folds
2023-12-12 20:55:25,460:INFO:Declaring metric variables
2023-12-12 20:55:25,463:INFO:Importing untrained model
2023-12-12 20:55:25,466:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:55:25,473:INFO:Starting cross validation
2023-12-12 20:55:25,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:26,381:INFO:Calculating mean and std
2023-12-12 20:55:26,383:INFO:Creating metrics dataframe
2023-12-12 20:55:26,386:INFO:Uploading results into container
2023-12-12 20:55:26,386:INFO:Uploading model into container now
2023-12-12 20:55:26,387:INFO:_master_model_container: 13
2023-12-12 20:55:26,387:INFO:_display_container: 2
2023-12-12 20:55:26,387:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:55:26,387:INFO:create_model() successfully completed......................................
2023-12-12 20:55:26,533:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:26,533:INFO:Creating metrics dataframe
2023-12-12 20:55:26,542:INFO:Initializing Extra Trees Regressor
2023-12-12 20:55:26,543:INFO:Total runtime is 0.06862197319666545 minutes
2023-12-12 20:55:26,546:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:26,546:INFO:Initializing create_model()
2023-12-12 20:55:26,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:26,547:INFO:Checking exceptions
2023-12-12 20:55:26,547:INFO:Importing libraries
2023-12-12 20:55:26,547:INFO:Copying training dataset
2023-12-12 20:55:26,553:INFO:Defining folds
2023-12-12 20:55:26,553:INFO:Declaring metric variables
2023-12-12 20:55:26,558:INFO:Importing untrained model
2023-12-12 20:55:26,564:INFO:Extra Trees Regressor Imported successfully
2023-12-12 20:55:26,572:INFO:Starting cross validation
2023-12-12 20:55:26,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:27,159:INFO:Calculating mean and std
2023-12-12 20:55:27,160:INFO:Creating metrics dataframe
2023-12-12 20:55:27,162:INFO:Uploading results into container
2023-12-12 20:55:27,162:INFO:Uploading model into container now
2023-12-12 20:55:27,163:INFO:_master_model_container: 14
2023-12-12 20:55:27,163:INFO:_display_container: 2
2023-12-12 20:55:27,163:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:55:27,163:INFO:create_model() successfully completed......................................
2023-12-12 20:55:27,285:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:27,285:INFO:Creating metrics dataframe
2023-12-12 20:55:27,294:INFO:Initializing AdaBoost Regressor
2023-12-12 20:55:27,295:INFO:Total runtime is 0.08114696741104127 minutes
2023-12-12 20:55:27,297:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:27,298:INFO:Initializing create_model()
2023-12-12 20:55:27,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:27,298:INFO:Checking exceptions
2023-12-12 20:55:27,298:INFO:Importing libraries
2023-12-12 20:55:27,298:INFO:Copying training dataset
2023-12-12 20:55:27,301:INFO:Defining folds
2023-12-12 20:55:27,301:INFO:Declaring metric variables
2023-12-12 20:55:27,304:INFO:Importing untrained model
2023-12-12 20:55:27,307:INFO:AdaBoost Regressor Imported successfully
2023-12-12 20:55:27,312:INFO:Starting cross validation
2023-12-12 20:55:27,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:27,499:INFO:Calculating mean and std
2023-12-12 20:55:27,500:INFO:Creating metrics dataframe
2023-12-12 20:55:27,503:INFO:Uploading results into container
2023-12-12 20:55:27,504:INFO:Uploading model into container now
2023-12-12 20:55:27,504:INFO:_master_model_container: 15
2023-12-12 20:55:27,504:INFO:_display_container: 2
2023-12-12 20:55:27,505:INFO:AdaBoostRegressor(random_state=6458)
2023-12-12 20:55:27,505:INFO:create_model() successfully completed......................................
2023-12-12 20:55:27,630:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:27,630:INFO:Creating metrics dataframe
2023-12-12 20:55:27,640:INFO:Initializing Gradient Boosting Regressor
2023-12-12 20:55:27,640:INFO:Total runtime is 0.08689878384272258 minutes
2023-12-12 20:55:27,642:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:27,642:INFO:Initializing create_model()
2023-12-12 20:55:27,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:27,643:INFO:Checking exceptions
2023-12-12 20:55:27,643:INFO:Importing libraries
2023-12-12 20:55:27,643:INFO:Copying training dataset
2023-12-12 20:55:27,646:INFO:Defining folds
2023-12-12 20:55:27,646:INFO:Declaring metric variables
2023-12-12 20:55:27,649:INFO:Importing untrained model
2023-12-12 20:55:27,652:INFO:Gradient Boosting Regressor Imported successfully
2023-12-12 20:55:27,656:INFO:Starting cross validation
2023-12-12 20:55:27,657:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:28,015:INFO:Calculating mean and std
2023-12-12 20:55:28,016:INFO:Creating metrics dataframe
2023-12-12 20:55:28,019:INFO:Uploading results into container
2023-12-12 20:55:28,019:INFO:Uploading model into container now
2023-12-12 20:55:28,020:INFO:_master_model_container: 16
2023-12-12 20:55:28,020:INFO:_display_container: 2
2023-12-12 20:55:28,020:INFO:GradientBoostingRegressor(random_state=6458)
2023-12-12 20:55:28,020:INFO:create_model() successfully completed......................................
2023-12-12 20:55:28,147:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:28,147:INFO:Creating metrics dataframe
2023-12-12 20:55:28,157:INFO:Initializing Light Gradient Boosting Machine
2023-12-12 20:55:28,157:INFO:Total runtime is 0.09552108446756999 minutes
2023-12-12 20:55:28,159:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:28,160:INFO:Initializing create_model()
2023-12-12 20:55:28,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:28,160:INFO:Checking exceptions
2023-12-12 20:55:28,160:INFO:Importing libraries
2023-12-12 20:55:28,160:INFO:Copying training dataset
2023-12-12 20:55:28,163:INFO:Defining folds
2023-12-12 20:55:28,163:INFO:Declaring metric variables
2023-12-12 20:55:28,166:INFO:Importing untrained model
2023-12-12 20:55:28,169:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-12 20:55:28,175:INFO:Starting cross validation
2023-12-12 20:55:28,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:29,167:INFO:Calculating mean and std
2023-12-12 20:55:29,169:INFO:Creating metrics dataframe
2023-12-12 20:55:29,174:INFO:Uploading results into container
2023-12-12 20:55:29,175:INFO:Uploading model into container now
2023-12-12 20:55:29,176:INFO:_master_model_container: 17
2023-12-12 20:55:29,176:INFO:_display_container: 2
2023-12-12 20:55:29,176:INFO:LGBMRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:55:29,176:INFO:create_model() successfully completed......................................
2023-12-12 20:55:29,366:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:29,366:INFO:Creating metrics dataframe
2023-12-12 20:55:29,375:INFO:Initializing Dummy Regressor
2023-12-12 20:55:29,375:INFO:Total runtime is 0.11581416527430216 minutes
2023-12-12 20:55:29,378:INFO:SubProcess create_model() called ==================================
2023-12-12 20:55:29,378:INFO:Initializing create_model()
2023-12-12 20:55:29,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C673B72650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:29,378:INFO:Checking exceptions
2023-12-12 20:55:29,378:INFO:Importing libraries
2023-12-12 20:55:29,378:INFO:Copying training dataset
2023-12-12 20:55:29,381:INFO:Defining folds
2023-12-12 20:55:29,381:INFO:Declaring metric variables
2023-12-12 20:55:29,384:INFO:Importing untrained model
2023-12-12 20:55:29,388:INFO:Dummy Regressor Imported successfully
2023-12-12 20:55:29,394:INFO:Starting cross validation
2023-12-12 20:55:29,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:55:29,457:INFO:Calculating mean and std
2023-12-12 20:55:29,457:INFO:Creating metrics dataframe
2023-12-12 20:55:29,460:INFO:Uploading results into container
2023-12-12 20:55:29,460:INFO:Uploading model into container now
2023-12-12 20:55:29,460:INFO:_master_model_container: 18
2023-12-12 20:55:29,460:INFO:_display_container: 2
2023-12-12 20:55:29,461:INFO:DummyRegressor()
2023-12-12 20:55:29,461:INFO:create_model() successfully completed......................................
2023-12-12 20:55:29,589:INFO:SubProcess create_model() end ==================================
2023-12-12 20:55:29,589:INFO:Creating metrics dataframe
2023-12-12 20:55:29,607:INFO:Initializing create_model()
2023-12-12 20:55:29,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:55:29,607:INFO:Checking exceptions
2023-12-12 20:55:29,608:INFO:Importing libraries
2023-12-12 20:55:29,609:INFO:Copying training dataset
2023-12-12 20:55:29,611:INFO:Defining folds
2023-12-12 20:55:29,611:INFO:Declaring metric variables
2023-12-12 20:55:29,613:INFO:Importing untrained model
2023-12-12 20:55:29,613:INFO:Declaring custom model
2023-12-12 20:55:29,613:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:55:29,613:INFO:Cross validation set to False
2023-12-12 20:55:29,613:INFO:Fitting Model
2023-12-12 20:55:29,797:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:55:29,799:INFO:create_model() successfully completed......................................
2023-12-12 20:55:29,953:INFO:_master_model_container: 18
2023-12-12 20:55:29,953:INFO:_display_container: 2
2023-12-12 20:55:29,953:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:55:29,953:INFO:compare_models() successfully completed......................................
2023-12-12 20:57:14,443:INFO:Initializing create_model()
2023-12-12 20:57:14,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:57:14,443:INFO:Checking exceptions
2023-12-12 20:57:14,456:INFO:Importing libraries
2023-12-12 20:57:14,456:INFO:Copying training dataset
2023-12-12 20:57:14,461:INFO:Defining folds
2023-12-12 20:57:14,461:INFO:Declaring metric variables
2023-12-12 20:57:14,464:INFO:Importing untrained model
2023-12-12 20:57:14,467:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:57:14,473:INFO:Starting cross validation
2023-12-12 20:57:14,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:57:15,448:INFO:Calculating mean and std
2023-12-12 20:57:15,448:INFO:Creating metrics dataframe
2023-12-12 20:57:15,453:INFO:Finalizing model
2023-12-12 20:57:15,689:INFO:Uploading results into container
2023-12-12 20:57:15,689:INFO:Uploading model into container now
2023-12-12 20:57:15,698:INFO:_master_model_container: 19
2023-12-12 20:57:15,698:INFO:_display_container: 3
2023-12-12 20:57:15,699:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:57:15,699:INFO:create_model() successfully completed......................................
2023-12-12 20:58:09,526:INFO:Initializing tune_model()
2023-12-12 20:58:09,526:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=rf, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-12 20:58:09,526:INFO:Checking exceptions
2023-12-12 20:58:39,860:INFO:Initializing tune_model()
2023-12-12 20:58:39,860:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-12 20:58:39,860:INFO:Checking exceptions
2023-12-12 20:58:39,879:INFO:Copying training dataset
2023-12-12 20:58:39,884:INFO:Checking base model
2023-12-12 20:58:39,885:INFO:Base model : Random Forest Regressor
2023-12-12 20:58:39,890:INFO:Declaring metric variables
2023-12-12 20:58:39,894:INFO:Defining Hyperparameters
2023-12-12 20:58:40,110:INFO:Tuning with n_jobs=-1
2023-12-12 20:58:40,110:INFO:Initializing RandomizedSearchCV
2023-12-12 20:59:07,127:INFO:best_params: {'actual_estimator__n_estimators': 150, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-12 20:59:07,128:INFO:Hyperparameter search completed
2023-12-12 20:59:07,128:INFO:SubProcess create_model() called ==================================
2023-12-12 20:59:07,129:INFO:Initializing create_model()
2023-12-12 20:59:07,129:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C674A2D090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 150, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 7, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-12 20:59:07,129:INFO:Checking exceptions
2023-12-12 20:59:07,129:INFO:Importing libraries
2023-12-12 20:59:07,129:INFO:Copying training dataset
2023-12-12 20:59:07,134:INFO:Defining folds
2023-12-12 20:59:07,134:INFO:Declaring metric variables
2023-12-12 20:59:07,138:INFO:Importing untrained model
2023-12-12 20:59:07,139:INFO:Declaring custom model
2023-12-12 20:59:07,143:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:59:07,150:INFO:Starting cross validation
2023-12-12 20:59:07,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:59:13,239:INFO:Calculating mean and std
2023-12-12 20:59:13,240:INFO:Creating metrics dataframe
2023-12-12 20:59:13,244:INFO:Finalizing model
2023-12-12 20:59:14,108:INFO:Uploading results into container
2023-12-12 20:59:14,110:INFO:Uploading model into container now
2023-12-12 20:59:14,111:INFO:_master_model_container: 20
2023-12-12 20:59:14,111:INFO:_display_container: 4
2023-12-12 20:59:14,111:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=7,
                      min_impurity_decrease=0.1, min_samples_leaf=3,
                      min_samples_split=7, n_estimators=150, n_jobs=-1,
                      random_state=6458)
2023-12-12 20:59:14,111:INFO:create_model() successfully completed......................................
2023-12-12 20:59:14,283:INFO:SubProcess create_model() end ==================================
2023-12-12 20:59:14,283:INFO:choose_better activated
2023-12-12 20:59:14,286:INFO:SubProcess create_model() called ==================================
2023-12-12 20:59:14,287:INFO:Initializing create_model()
2023-12-12 20:59:14,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 20:59:14,287:INFO:Checking exceptions
2023-12-12 20:59:14,288:INFO:Importing libraries
2023-12-12 20:59:14,288:INFO:Copying training dataset
2023-12-12 20:59:14,291:INFO:Defining folds
2023-12-12 20:59:14,291:INFO:Declaring metric variables
2023-12-12 20:59:14,291:INFO:Importing untrained model
2023-12-12 20:59:14,291:INFO:Declaring custom model
2023-12-12 20:59:14,291:INFO:Random Forest Regressor Imported successfully
2023-12-12 20:59:14,292:INFO:Starting cross validation
2023-12-12 20:59:14,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-12 20:59:15,154:INFO:Calculating mean and std
2023-12-12 20:59:15,154:INFO:Creating metrics dataframe
2023-12-12 20:59:15,156:INFO:Finalizing model
2023-12-12 20:59:15,372:INFO:Uploading results into container
2023-12-12 20:59:15,373:INFO:Uploading model into container now
2023-12-12 20:59:15,374:INFO:_master_model_container: 21
2023-12-12 20:59:15,374:INFO:_display_container: 5
2023-12-12 20:59:15,374:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:59:15,374:INFO:create_model() successfully completed......................................
2023-12-12 20:59:15,519:INFO:SubProcess create_model() end ==================================
2023-12-12 20:59:15,519:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458) result for R2 is 0.7172
2023-12-12 20:59:15,519:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=7,
                      min_impurity_decrease=0.1, min_samples_leaf=3,
                      min_samples_split=7, n_estimators=150, n_jobs=-1,
                      random_state=6458) result for R2 is 0.7032
2023-12-12 20:59:15,520:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458) is best model
2023-12-12 20:59:15,520:INFO:choose_better completed
2023-12-12 20:59:15,520:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-12 20:59:15,528:INFO:_master_model_container: 21
2023-12-12 20:59:15,528:INFO:_display_container: 4
2023-12-12 20:59:15,529:INFO:RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 20:59:15,529:INFO:tune_model() successfully completed......................................
2023-12-12 20:59:58,501:INFO:Initializing plot_model()
2023-12-12 20:59:58,501:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-12 20:59:58,501:INFO:Checking exceptions
2023-12-12 20:59:58,522:INFO:Preloading libraries
2023-12-12 20:59:58,535:INFO:Copying training dataset
2023-12-12 20:59:58,535:INFO:Plot type: residuals
2023-12-12 20:59:58,648:INFO:Fitting Model
2023-12-12 20:59:58,663:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-12 20:59:58,756:INFO:Scoring test/hold-out set
2023-12-12 20:59:59,189:INFO:Visual Rendered Successfully
2023-12-12 20:59:59,342:INFO:plot_model() successfully completed......................................
2023-12-12 21:00:36,915:INFO:Initializing plot_model()
2023-12-12 21:00:36,915:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-12 21:00:36,915:INFO:Checking exceptions
2023-12-12 21:00:36,939:INFO:Preloading libraries
2023-12-12 21:00:36,952:INFO:Copying training dataset
2023-12-12 21:00:36,952:INFO:Plot type: feature
2023-12-12 21:00:36,952:WARNING:No coef_ found. Trying feature_importances_
2023-12-12 21:00:37,118:INFO:Visual Rendered Successfully
2023-12-12 21:00:37,296:INFO:plot_model() successfully completed......................................
2023-12-12 21:04:08,689:INFO:Initializing predict_model()
2023-12-12 21:04:08,689:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C67F060D60>)
2023-12-12 21:04:08,689:INFO:Checking exceptions
2023-12-12 21:04:08,690:INFO:Preloading libraries
2023-12-12 21:09:22,880:INFO:Initializing finalize_model()
2023-12-12 21:09:22,880:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-12 21:09:22,880:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=6458)
2023-12-12 21:09:22,883:INFO:Initializing create_model()
2023-12-12 21:09:22,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C676C21350>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6458), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-12 21:09:22,884:INFO:Checking exceptions
2023-12-12 21:09:22,885:INFO:Importing libraries
2023-12-12 21:09:22,885:INFO:Copying training dataset
2023-12-12 21:09:22,885:INFO:Defining folds
2023-12-12 21:09:22,885:INFO:Declaring metric variables
2023-12-12 21:09:22,886:INFO:Importing untrained model
2023-12-12 21:09:22,886:INFO:Declaring custom model
2023-12-12 21:09:22,886:INFO:Random Forest Regressor Imported successfully
2023-12-12 21:09:22,887:INFO:Cross validation set to False
2023-12-12 21:09:22,887:INFO:Fitting Model
2023-12-12 21:09:23,116:INFO:create_model() successfully completed......................................
2023-12-12 21:09:23,259:INFO:_master_model_container: 21
2023-12-12 21:09:23,259:INFO:_display_container: 5
2023-12-12 21:09:23,265:INFO:finalize_model() successfully completed......................................
2023-12-12 21:10:03,516:INFO:Initializing predict_model()
2023-12-12 21:10:03,517:INFO:Checking exceptions
2023-12-12 21:10:03,517:INFO:Preloading libraries
2023-12-12 21:11:09,907:INFO:Initializing predict_model()
2023-12-12 21:11:09,911:INFO:Checking exceptions
2023-12-12 21:11:09,912:INFO:Preloading libraries
2023-12-12 21:11:09,916:INFO:Set up data.
2023-12-12 21:11:09,926:INFO:Set up index.
2023-12-12 21:11:19,391:INFO:Initializing predict_model()
2023-12-12 21:11:19,393:INFO:Checking exceptions
2023-12-12 21:11:19,393:INFO:Preloading libraries
2023-12-12 21:11:19,395:INFO:Set up data.
2023-12-12 21:11:19,403:INFO:Set up index.
2023-12-12 21:20:00,048:WARNING:C:\Users\xoryt\AppData\Local\Temp\ipykernel_27680\2620449620.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlationMatrix = df.dropna().corr()

2023-12-13 00:36:43,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 00:36:43,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 00:36:43,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 00:36:43,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 00:36:43,541:INFO:PyCaret RegressionExperiment
2023-12-13 00:36:43,541:INFO:Logging name: reg-default-name
2023-12-13 00:36:43,541:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 00:36:43,542:INFO:version 3.2.0
2023-12-13 00:36:43,542:INFO:Initializing setup()
2023-12-13 00:36:43,542:INFO:self.USI: e34a
2023-12-13 00:36:43,543:INFO:self._variable_keys: {'pipeline', 'log_plots_param', 'y_train', 'y_test', 'gpu_param', 'gpu_n_jobs_param', 'X', 'X_train', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'n_jobs_param', 'memory', 'X_test', 'USI', 'fold_generator', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'y', 'data', 'fold_groups_param', 'logging_param', 'idx', 'exp_id', 'seed'}
2023-12-13 00:36:43,543:INFO:Checking environment
2023-12-13 00:36:43,543:INFO:python_version: 3.11.0
2023-12-13 00:36:43,543:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 00:36:43,543:INFO:machine: AMD64
2023-12-13 00:36:43,543:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 00:36:43,549:INFO:Memory: svmem(total=14877257728, available=4787142656, percent=67.8, used=10090115072, free=4787142656)
2023-12-13 00:36:43,549:INFO:Physical Core: 8
2023-12-13 00:36:43,549:INFO:Logical Core: 16
2023-12-13 00:36:43,549:INFO:Checking libraries
2023-12-13 00:36:43,549:INFO:System:
2023-12-13 00:36:43,550:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 00:36:43,550:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 00:36:43,550:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 00:36:43,550:INFO:PyCaret required dependencies:
2023-12-13 00:36:43,605:INFO:                 pip: 23.3.1
2023-12-13 00:36:43,605:INFO:          setuptools: 65.5.0
2023-12-13 00:36:43,605:INFO:             pycaret: 3.2.0
2023-12-13 00:36:43,605:INFO:             IPython: 8.18.1
2023-12-13 00:36:43,605:INFO:          ipywidgets: 8.1.1
2023-12-13 00:36:43,605:INFO:                tqdm: 4.66.1
2023-12-13 00:36:43,605:INFO:               numpy: 1.25.2
2023-12-13 00:36:43,605:INFO:              pandas: 2.1.4
2023-12-13 00:36:43,605:INFO:              jinja2: 3.1.2
2023-12-13 00:36:43,605:INFO:               scipy: 1.10.1
2023-12-13 00:36:43,605:INFO:              joblib: 1.3.2
2023-12-13 00:36:43,605:INFO:             sklearn: 1.2.2
2023-12-13 00:36:43,605:INFO:                pyod: 1.1.2
2023-12-13 00:36:43,605:INFO:            imblearn: 0.11.0
2023-12-13 00:36:43,605:INFO:   category_encoders: 2.6.3
2023-12-13 00:36:43,605:INFO:            lightgbm: 4.1.0
2023-12-13 00:36:43,605:INFO:               numba: 0.58.1
2023-12-13 00:36:43,605:INFO:            requests: 2.31.0
2023-12-13 00:36:43,605:INFO:          matplotlib: 3.6.0
2023-12-13 00:36:43,605:INFO:          scikitplot: 0.3.7
2023-12-13 00:36:43,605:INFO:         yellowbrick: 1.5
2023-12-13 00:36:43,605:INFO:              plotly: 5.18.0
2023-12-13 00:36:43,605:INFO:    plotly-resampler: Not installed
2023-12-13 00:36:43,605:INFO:             kaleido: 0.2.1
2023-12-13 00:36:43,605:INFO:           schemdraw: 0.15
2023-12-13 00:36:43,605:INFO:         statsmodels: 0.14.0
2023-12-13 00:36:43,605:INFO:              sktime: 0.21.1
2023-12-13 00:36:43,607:INFO:               tbats: 1.1.3
2023-12-13 00:36:43,607:INFO:            pmdarima: 2.0.4
2023-12-13 00:36:43,607:INFO:              psutil: 5.9.6
2023-12-13 00:36:43,607:INFO:          markupsafe: 2.1.3
2023-12-13 00:36:43,607:INFO:             pickle5: Not installed
2023-12-13 00:36:43,607:INFO:         cloudpickle: 3.0.0
2023-12-13 00:36:43,607:INFO:         deprecation: 2.1.0
2023-12-13 00:36:43,607:INFO:              xxhash: 3.4.1
2023-12-13 00:36:43,607:INFO:           wurlitzer: Not installed
2023-12-13 00:36:43,607:INFO:PyCaret optional dependencies:
2023-12-13 00:36:43,622:INFO:                shap: Not installed
2023-12-13 00:36:43,622:INFO:           interpret: Not installed
2023-12-13 00:36:43,622:INFO:                umap: Not installed
2023-12-13 00:36:43,622:INFO:     ydata_profiling: Not installed
2023-12-13 00:36:43,622:INFO:  explainerdashboard: Not installed
2023-12-13 00:36:43,622:INFO:             autoviz: Not installed
2023-12-13 00:36:43,622:INFO:           fairlearn: Not installed
2023-12-13 00:36:43,622:INFO:          deepchecks: Not installed
2023-12-13 00:36:43,622:INFO:             xgboost: Not installed
2023-12-13 00:36:43,622:INFO:            catboost: Not installed
2023-12-13 00:36:43,622:INFO:              kmodes: Not installed
2023-12-13 00:36:43,622:INFO:             mlxtend: Not installed
2023-12-13 00:36:43,622:INFO:       statsforecast: Not installed
2023-12-13 00:36:43,623:INFO:        tune_sklearn: Not installed
2023-12-13 00:36:43,623:INFO:                 ray: Not installed
2023-12-13 00:36:43,623:INFO:            hyperopt: Not installed
2023-12-13 00:36:43,623:INFO:              optuna: Not installed
2023-12-13 00:36:43,623:INFO:               skopt: Not installed
2023-12-13 00:36:43,623:INFO:              mlflow: Not installed
2023-12-13 00:36:43,623:INFO:              gradio: Not installed
2023-12-13 00:36:43,623:INFO:             fastapi: Not installed
2023-12-13 00:36:43,623:INFO:             uvicorn: Not installed
2023-12-13 00:36:43,623:INFO:              m2cgen: Not installed
2023-12-13 00:36:43,623:INFO:           evidently: Not installed
2023-12-13 00:36:43,623:INFO:               fugue: Not installed
2023-12-13 00:36:43,623:INFO:           streamlit: Not installed
2023-12-13 00:36:43,623:INFO:             prophet: Not installed
2023-12-13 00:36:43,623:INFO:None
2023-12-13 00:36:43,623:INFO:Set up data.
2023-12-13 00:36:43,632:INFO:Set up folding strategy.
2023-12-13 00:36:43,632:INFO:Set up train/test split.
2023-12-13 00:36:43,636:INFO:Set up index.
2023-12-13 00:36:43,637:INFO:Assigning column types.
2023-12-13 00:36:43,640:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 00:36:43,640:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,644:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,648:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,732:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,736:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,740:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,785:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,820:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 00:36:43,823:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,827:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,871:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,912:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:43,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:43,992:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 00:36:43,999:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,086:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,164:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,165:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 00:36:44,217:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,303:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,338:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,339:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 00:36:44,390:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,476:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 00:36:44,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,512:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 00:36:44,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,686:INFO:Preparing preprocessing pipeline...
2023-12-13 00:36:44,686:INFO:Set up simple imputation.
2023-12-13 00:36:44,687:INFO:Set up column name cleaning.
2023-12-13 00:36:44,722:INFO:Finished creating preprocessing pipeline.
2023-12-13 00:36:44,727:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 00:36:44,727:INFO:Creating final display dataframe.
2023-12-13 00:36:44,802:INFO:Setup _display_container:                     Description             Value
0                    Session id              5893
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 18)
4        Transformed data shape        (1555, 18)
5   Transformed train set shape        (1088, 18)
6    Transformed test set shape         (467, 18)
7              Numeric features                17
8      Rows with missing values             98.6%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              e34a
2023-12-13 00:36:44,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 00:36:44,998:INFO:setup() successfully completed in 1.46s...............
2023-12-13 00:37:48,327:INFO:Initializing compare_models()
2023-12-13 00:37:48,327:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 00:37:48,327:INFO:Checking exceptions
2023-12-13 00:37:48,329:INFO:Preparing display monitor
2023-12-13 00:37:48,350:INFO:Initializing Linear Regression
2023-12-13 00:37:48,350:INFO:Total runtime is 0.0 minutes
2023-12-13 00:37:48,353:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:48,354:INFO:Initializing create_model()
2023-12-13 00:37:48,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:48,354:INFO:Checking exceptions
2023-12-13 00:37:48,355:INFO:Importing libraries
2023-12-13 00:37:48,355:INFO:Copying training dataset
2023-12-13 00:37:48,359:INFO:Defining folds
2023-12-13 00:37:48,359:INFO:Declaring metric variables
2023-12-13 00:37:48,361:INFO:Importing untrained model
2023-12-13 00:37:48,364:INFO:Linear Regression Imported successfully
2023-12-13 00:37:48,369:INFO:Starting cross validation
2023-12-13 00:37:48,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:53,341:INFO:Calculating mean and std
2023-12-13 00:37:53,344:INFO:Creating metrics dataframe
2023-12-13 00:37:53,347:INFO:Uploading results into container
2023-12-13 00:37:53,348:INFO:Uploading model into container now
2023-12-13 00:37:53,350:INFO:_master_model_container: 1
2023-12-13 00:37:53,350:INFO:_display_container: 2
2023-12-13 00:37:53,350:INFO:LinearRegression(n_jobs=-1)
2023-12-13 00:37:53,352:INFO:create_model() successfully completed......................................
2023-12-13 00:37:53,541:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:53,541:INFO:Creating metrics dataframe
2023-12-13 00:37:53,547:INFO:Initializing Lasso Regression
2023-12-13 00:37:53,547:INFO:Total runtime is 0.08661683400472005 minutes
2023-12-13 00:37:53,549:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:53,550:INFO:Initializing create_model()
2023-12-13 00:37:53,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:53,550:INFO:Checking exceptions
2023-12-13 00:37:53,550:INFO:Importing libraries
2023-12-13 00:37:53,550:INFO:Copying training dataset
2023-12-13 00:37:53,554:INFO:Defining folds
2023-12-13 00:37:53,555:INFO:Declaring metric variables
2023-12-13 00:37:53,558:INFO:Importing untrained model
2023-12-13 00:37:53,561:INFO:Lasso Regression Imported successfully
2023-12-13 00:37:53,567:INFO:Starting cross validation
2023-12-13 00:37:53,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:56,599:INFO:Calculating mean and std
2023-12-13 00:37:56,601:INFO:Creating metrics dataframe
2023-12-13 00:37:56,605:INFO:Uploading results into container
2023-12-13 00:37:56,606:INFO:Uploading model into container now
2023-12-13 00:37:56,606:INFO:_master_model_container: 2
2023-12-13 00:37:56,607:INFO:_display_container: 2
2023-12-13 00:37:56,607:INFO:Lasso(random_state=5893)
2023-12-13 00:37:56,607:INFO:create_model() successfully completed......................................
2023-12-13 00:37:56,772:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:56,773:INFO:Creating metrics dataframe
2023-12-13 00:37:56,779:INFO:Initializing Ridge Regression
2023-12-13 00:37:56,779:INFO:Total runtime is 0.14048365354537964 minutes
2023-12-13 00:37:56,782:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:56,782:INFO:Initializing create_model()
2023-12-13 00:37:56,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:56,782:INFO:Checking exceptions
2023-12-13 00:37:56,783:INFO:Importing libraries
2023-12-13 00:37:56,783:INFO:Copying training dataset
2023-12-13 00:37:56,786:INFO:Defining folds
2023-12-13 00:37:56,787:INFO:Declaring metric variables
2023-12-13 00:37:56,789:INFO:Importing untrained model
2023-12-13 00:37:56,792:INFO:Ridge Regression Imported successfully
2023-12-13 00:37:56,798:INFO:Starting cross validation
2023-12-13 00:37:56,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:56,841:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.75784e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,842:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.65719e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,842:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.65958e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,842:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.761e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,848:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.647e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,848:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.68088e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,853:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.7933e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-12-13 00:37:56,864:INFO:Calculating mean and std
2023-12-13 00:37:56,864:INFO:Creating metrics dataframe
2023-12-13 00:37:56,865:INFO:Uploading results into container
2023-12-13 00:37:56,866:INFO:Uploading model into container now
2023-12-13 00:37:56,866:INFO:_master_model_container: 3
2023-12-13 00:37:56,866:INFO:_display_container: 2
2023-12-13 00:37:56,866:INFO:Ridge(random_state=5893)
2023-12-13 00:37:56,866:INFO:create_model() successfully completed......................................
2023-12-13 00:37:56,965:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:56,965:INFO:Creating metrics dataframe
2023-12-13 00:37:56,971:INFO:Initializing Elastic Net
2023-12-13 00:37:56,971:INFO:Total runtime is 0.14368109305699667 minutes
2023-12-13 00:37:56,974:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:56,974:INFO:Initializing create_model()
2023-12-13 00:37:56,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:56,974:INFO:Checking exceptions
2023-12-13 00:37:56,974:INFO:Importing libraries
2023-12-13 00:37:56,974:INFO:Copying training dataset
2023-12-13 00:37:56,979:INFO:Defining folds
2023-12-13 00:37:56,979:INFO:Declaring metric variables
2023-12-13 00:37:56,982:INFO:Importing untrained model
2023-12-13 00:37:56,986:INFO:Elastic Net Imported successfully
2023-12-13 00:37:56,992:INFO:Starting cross validation
2023-12-13 00:37:56,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:57,046:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.336e+12, tolerance: 7.894e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 00:37:57,055:INFO:Calculating mean and std
2023-12-13 00:37:57,056:INFO:Creating metrics dataframe
2023-12-13 00:37:57,057:INFO:Uploading results into container
2023-12-13 00:37:57,058:INFO:Uploading model into container now
2023-12-13 00:37:57,058:INFO:_master_model_container: 4
2023-12-13 00:37:57,058:INFO:_display_container: 2
2023-12-13 00:37:57,058:INFO:ElasticNet(random_state=5893)
2023-12-13 00:37:57,058:INFO:create_model() successfully completed......................................
2023-12-13 00:37:57,157:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:57,157:INFO:Creating metrics dataframe
2023-12-13 00:37:57,165:INFO:Initializing Least Angle Regression
2023-12-13 00:37:57,165:INFO:Total runtime is 0.14692121346791587 minutes
2023-12-13 00:37:57,168:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:57,169:INFO:Initializing create_model()
2023-12-13 00:37:57,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:57,169:INFO:Checking exceptions
2023-12-13 00:37:57,169:INFO:Importing libraries
2023-12-13 00:37:57,169:INFO:Copying training dataset
2023-12-13 00:37:57,174:INFO:Defining folds
2023-12-13 00:37:57,174:INFO:Declaring metric variables
2023-12-13 00:37:57,177:INFO:Importing untrained model
2023-12-13 00:37:57,181:INFO:Least Angle Regression Imported successfully
2023-12-13 00:37:57,188:INFO:Starting cross validation
2023-12-13 00:37:57,189:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:57,260:INFO:Calculating mean and std
2023-12-13 00:37:57,260:INFO:Creating metrics dataframe
2023-12-13 00:37:57,262:INFO:Uploading results into container
2023-12-13 00:37:57,262:INFO:Uploading model into container now
2023-12-13 00:37:57,263:INFO:_master_model_container: 5
2023-12-13 00:37:57,263:INFO:_display_container: 2
2023-12-13 00:37:57,263:INFO:Lars(random_state=5893)
2023-12-13 00:37:57,263:INFO:create_model() successfully completed......................................
2023-12-13 00:37:57,368:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:57,369:INFO:Creating metrics dataframe
2023-12-13 00:37:57,375:INFO:Initializing Lasso Least Angle Regression
2023-12-13 00:37:57,375:INFO:Total runtime is 0.15042151212692262 minutes
2023-12-13 00:37:57,378:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:57,378:INFO:Initializing create_model()
2023-12-13 00:37:57,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:57,378:INFO:Checking exceptions
2023-12-13 00:37:57,378:INFO:Importing libraries
2023-12-13 00:37:57,379:INFO:Copying training dataset
2023-12-13 00:37:57,383:INFO:Defining folds
2023-12-13 00:37:57,383:INFO:Declaring metric variables
2023-12-13 00:37:57,386:INFO:Importing untrained model
2023-12-13 00:37:57,390:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 00:37:57,395:INFO:Starting cross validation
2023-12-13 00:37:57,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:57,463:INFO:Calculating mean and std
2023-12-13 00:37:57,463:INFO:Creating metrics dataframe
2023-12-13 00:37:57,465:INFO:Uploading results into container
2023-12-13 00:37:57,465:INFO:Uploading model into container now
2023-12-13 00:37:57,465:INFO:_master_model_container: 6
2023-12-13 00:37:57,465:INFO:_display_container: 2
2023-12-13 00:37:57,466:INFO:LassoLars(random_state=5893)
2023-12-13 00:37:57,466:INFO:create_model() successfully completed......................................
2023-12-13 00:37:57,567:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:57,567:INFO:Creating metrics dataframe
2023-12-13 00:37:57,573:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 00:37:57,573:INFO:Total runtime is 0.15372559626897178 minutes
2023-12-13 00:37:57,576:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:57,576:INFO:Initializing create_model()
2023-12-13 00:37:57,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:57,576:INFO:Checking exceptions
2023-12-13 00:37:57,577:INFO:Importing libraries
2023-12-13 00:37:57,577:INFO:Copying training dataset
2023-12-13 00:37:57,581:INFO:Defining folds
2023-12-13 00:37:57,581:INFO:Declaring metric variables
2023-12-13 00:37:57,583:INFO:Importing untrained model
2023-12-13 00:37:57,587:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 00:37:57,592:INFO:Starting cross validation
2023-12-13 00:37:57,593:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:57,655:INFO:Calculating mean and std
2023-12-13 00:37:57,655:INFO:Creating metrics dataframe
2023-12-13 00:37:57,657:INFO:Uploading results into container
2023-12-13 00:37:57,657:INFO:Uploading model into container now
2023-12-13 00:37:57,657:INFO:_master_model_container: 7
2023-12-13 00:37:57,657:INFO:_display_container: 2
2023-12-13 00:37:57,658:INFO:OrthogonalMatchingPursuit()
2023-12-13 00:37:57,658:INFO:create_model() successfully completed......................................
2023-12-13 00:37:57,756:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:57,756:INFO:Creating metrics dataframe
2023-12-13 00:37:57,763:INFO:Initializing Bayesian Ridge
2023-12-13 00:37:57,763:INFO:Total runtime is 0.15688208341598514 minutes
2023-12-13 00:37:57,766:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:57,766:INFO:Initializing create_model()
2023-12-13 00:37:57,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:57,767:INFO:Checking exceptions
2023-12-13 00:37:57,767:INFO:Importing libraries
2023-12-13 00:37:57,767:INFO:Copying training dataset
2023-12-13 00:37:57,771:INFO:Defining folds
2023-12-13 00:37:57,772:INFO:Declaring metric variables
2023-12-13 00:37:57,774:INFO:Importing untrained model
2023-12-13 00:37:57,777:INFO:Bayesian Ridge Imported successfully
2023-12-13 00:37:57,783:INFO:Starting cross validation
2023-12-13 00:37:57,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:57,855:INFO:Calculating mean and std
2023-12-13 00:37:57,855:INFO:Creating metrics dataframe
2023-12-13 00:37:57,857:INFO:Uploading results into container
2023-12-13 00:37:57,858:INFO:Uploading model into container now
2023-12-13 00:37:57,858:INFO:_master_model_container: 8
2023-12-13 00:37:57,858:INFO:_display_container: 2
2023-12-13 00:37:57,858:INFO:BayesianRidge()
2023-12-13 00:37:57,858:INFO:create_model() successfully completed......................................
2023-12-13 00:37:57,955:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:57,955:INFO:Creating metrics dataframe
2023-12-13 00:37:57,961:INFO:Initializing Passive Aggressive Regressor
2023-12-13 00:37:57,961:INFO:Total runtime is 0.16018997033437096 minutes
2023-12-13 00:37:57,963:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:57,963:INFO:Initializing create_model()
2023-12-13 00:37:57,964:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:57,964:INFO:Checking exceptions
2023-12-13 00:37:57,964:INFO:Importing libraries
2023-12-13 00:37:57,964:INFO:Copying training dataset
2023-12-13 00:37:57,968:INFO:Defining folds
2023-12-13 00:37:57,968:INFO:Declaring metric variables
2023-12-13 00:37:57,971:INFO:Importing untrained model
2023-12-13 00:37:57,974:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 00:37:57,979:INFO:Starting cross validation
2023-12-13 00:37:57,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:58,044:INFO:Calculating mean and std
2023-12-13 00:37:58,044:INFO:Creating metrics dataframe
2023-12-13 00:37:58,046:INFO:Uploading results into container
2023-12-13 00:37:58,046:INFO:Uploading model into container now
2023-12-13 00:37:58,047:INFO:_master_model_container: 9
2023-12-13 00:37:58,047:INFO:_display_container: 2
2023-12-13 00:37:58,047:INFO:PassiveAggressiveRegressor(random_state=5893)
2023-12-13 00:37:58,047:INFO:create_model() successfully completed......................................
2023-12-13 00:37:58,142:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:58,142:INFO:Creating metrics dataframe
2023-12-13 00:37:58,148:INFO:Initializing Huber Regressor
2023-12-13 00:37:58,149:INFO:Total runtime is 0.1633219401041667 minutes
2023-12-13 00:37:58,152:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:58,152:INFO:Initializing create_model()
2023-12-13 00:37:58,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:58,152:INFO:Checking exceptions
2023-12-13 00:37:58,152:INFO:Importing libraries
2023-12-13 00:37:58,152:INFO:Copying training dataset
2023-12-13 00:37:58,157:INFO:Defining folds
2023-12-13 00:37:58,157:INFO:Declaring metric variables
2023-12-13 00:37:58,160:INFO:Importing untrained model
2023-12-13 00:37:58,163:INFO:Huber Regressor Imported successfully
2023-12-13 00:37:58,168:INFO:Starting cross validation
2023-12-13 00:37:58,169:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:58,249:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,249:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,249:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,249:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,251:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,253:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,265:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,268:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 00:37:58,281:INFO:Calculating mean and std
2023-12-13 00:37:58,281:INFO:Creating metrics dataframe
2023-12-13 00:37:58,283:INFO:Uploading results into container
2023-12-13 00:37:58,284:INFO:Uploading model into container now
2023-12-13 00:37:58,284:INFO:_master_model_container: 10
2023-12-13 00:37:58,284:INFO:_display_container: 2
2023-12-13 00:37:58,284:INFO:HuberRegressor()
2023-12-13 00:37:58,285:INFO:create_model() successfully completed......................................
2023-12-13 00:37:58,396:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:58,396:INFO:Creating metrics dataframe
2023-12-13 00:37:58,407:INFO:Initializing K Neighbors Regressor
2023-12-13 00:37:58,407:INFO:Total runtime is 0.1676194787025452 minutes
2023-12-13 00:37:58,410:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:58,410:INFO:Initializing create_model()
2023-12-13 00:37:58,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:58,410:INFO:Checking exceptions
2023-12-13 00:37:58,411:INFO:Importing libraries
2023-12-13 00:37:58,411:INFO:Copying training dataset
2023-12-13 00:37:58,415:INFO:Defining folds
2023-12-13 00:37:58,415:INFO:Declaring metric variables
2023-12-13 00:37:58,418:INFO:Importing untrained model
2023-12-13 00:37:58,422:INFO:K Neighbors Regressor Imported successfully
2023-12-13 00:37:58,427:INFO:Starting cross validation
2023-12-13 00:37:58,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:58,625:INFO:Calculating mean and std
2023-12-13 00:37:58,626:INFO:Creating metrics dataframe
2023-12-13 00:37:58,627:INFO:Uploading results into container
2023-12-13 00:37:58,628:INFO:Uploading model into container now
2023-12-13 00:37:58,629:INFO:_master_model_container: 11
2023-12-13 00:37:58,629:INFO:_display_container: 2
2023-12-13 00:37:58,629:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 00:37:58,629:INFO:create_model() successfully completed......................................
2023-12-13 00:37:58,727:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:58,727:INFO:Creating metrics dataframe
2023-12-13 00:37:58,734:INFO:Initializing Decision Tree Regressor
2023-12-13 00:37:58,735:INFO:Total runtime is 0.17309063673019412 minutes
2023-12-13 00:37:58,737:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:58,737:INFO:Initializing create_model()
2023-12-13 00:37:58,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:58,737:INFO:Checking exceptions
2023-12-13 00:37:58,737:INFO:Importing libraries
2023-12-13 00:37:58,738:INFO:Copying training dataset
2023-12-13 00:37:58,742:INFO:Defining folds
2023-12-13 00:37:58,742:INFO:Declaring metric variables
2023-12-13 00:37:58,745:INFO:Importing untrained model
2023-12-13 00:37:58,748:INFO:Decision Tree Regressor Imported successfully
2023-12-13 00:37:58,753:INFO:Starting cross validation
2023-12-13 00:37:58,754:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:58,830:INFO:Calculating mean and std
2023-12-13 00:37:58,830:INFO:Creating metrics dataframe
2023-12-13 00:37:58,832:INFO:Uploading results into container
2023-12-13 00:37:58,832:INFO:Uploading model into container now
2023-12-13 00:37:58,832:INFO:_master_model_container: 12
2023-12-13 00:37:58,832:INFO:_display_container: 2
2023-12-13 00:37:58,833:INFO:DecisionTreeRegressor(random_state=5893)
2023-12-13 00:37:58,833:INFO:create_model() successfully completed......................................
2023-12-13 00:37:58,928:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:58,928:INFO:Creating metrics dataframe
2023-12-13 00:37:58,934:INFO:Initializing Random Forest Regressor
2023-12-13 00:37:58,934:INFO:Total runtime is 0.17641036113103234 minutes
2023-12-13 00:37:58,937:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:58,937:INFO:Initializing create_model()
2023-12-13 00:37:58,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:58,938:INFO:Checking exceptions
2023-12-13 00:37:58,938:INFO:Importing libraries
2023-12-13 00:37:58,938:INFO:Copying training dataset
2023-12-13 00:37:58,942:INFO:Defining folds
2023-12-13 00:37:58,942:INFO:Declaring metric variables
2023-12-13 00:37:58,945:INFO:Importing untrained model
2023-12-13 00:37:58,948:INFO:Random Forest Regressor Imported successfully
2023-12-13 00:37:58,953:INFO:Starting cross validation
2023-12-13 00:37:58,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:37:59,600:INFO:Calculating mean and std
2023-12-13 00:37:59,601:INFO:Creating metrics dataframe
2023-12-13 00:37:59,602:INFO:Uploading results into container
2023-12-13 00:37:59,603:INFO:Uploading model into container now
2023-12-13 00:37:59,603:INFO:_master_model_container: 13
2023-12-13 00:37:59,603:INFO:_display_container: 2
2023-12-13 00:37:59,604:INFO:RandomForestRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:37:59,604:INFO:create_model() successfully completed......................................
2023-12-13 00:37:59,690:INFO:SubProcess create_model() end ==================================
2023-12-13 00:37:59,690:INFO:Creating metrics dataframe
2023-12-13 00:37:59,697:INFO:Initializing Extra Trees Regressor
2023-12-13 00:37:59,697:INFO:Total runtime is 0.18912528355916344 minutes
2023-12-13 00:37:59,699:INFO:SubProcess create_model() called ==================================
2023-12-13 00:37:59,699:INFO:Initializing create_model()
2023-12-13 00:37:59,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:37:59,700:INFO:Checking exceptions
2023-12-13 00:37:59,700:INFO:Importing libraries
2023-12-13 00:37:59,700:INFO:Copying training dataset
2023-12-13 00:37:59,704:INFO:Defining folds
2023-12-13 00:37:59,704:INFO:Declaring metric variables
2023-12-13 00:37:59,707:INFO:Importing untrained model
2023-12-13 00:37:59,709:INFO:Extra Trees Regressor Imported successfully
2023-12-13 00:37:59,714:INFO:Starting cross validation
2023-12-13 00:37:59,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:00,184:INFO:Calculating mean and std
2023-12-13 00:38:00,185:INFO:Creating metrics dataframe
2023-12-13 00:38:00,186:INFO:Uploading results into container
2023-12-13 00:38:00,187:INFO:Uploading model into container now
2023-12-13 00:38:00,187:INFO:_master_model_container: 14
2023-12-13 00:38:00,187:INFO:_display_container: 2
2023-12-13 00:38:00,188:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:38:00,188:INFO:create_model() successfully completed......................................
2023-12-13 00:38:00,273:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:00,273:INFO:Creating metrics dataframe
2023-12-13 00:38:00,281:INFO:Initializing AdaBoost Regressor
2023-12-13 00:38:00,281:INFO:Total runtime is 0.19885847965876263 minutes
2023-12-13 00:38:00,283:INFO:SubProcess create_model() called ==================================
2023-12-13 00:38:00,284:INFO:Initializing create_model()
2023-12-13 00:38:00,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:00,284:INFO:Checking exceptions
2023-12-13 00:38:00,284:INFO:Importing libraries
2023-12-13 00:38:00,284:INFO:Copying training dataset
2023-12-13 00:38:00,288:INFO:Defining folds
2023-12-13 00:38:00,288:INFO:Declaring metric variables
2023-12-13 00:38:00,290:INFO:Importing untrained model
2023-12-13 00:38:00,293:INFO:AdaBoost Regressor Imported successfully
2023-12-13 00:38:00,298:INFO:Starting cross validation
2023-12-13 00:38:00,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:00,465:INFO:Calculating mean and std
2023-12-13 00:38:00,466:INFO:Creating metrics dataframe
2023-12-13 00:38:00,467:INFO:Uploading results into container
2023-12-13 00:38:00,468:INFO:Uploading model into container now
2023-12-13 00:38:00,468:INFO:_master_model_container: 15
2023-12-13 00:38:00,468:INFO:_display_container: 2
2023-12-13 00:38:00,469:INFO:AdaBoostRegressor(random_state=5893)
2023-12-13 00:38:00,469:INFO:create_model() successfully completed......................................
2023-12-13 00:38:00,557:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:00,557:INFO:Creating metrics dataframe
2023-12-13 00:38:00,564:INFO:Initializing Gradient Boosting Regressor
2023-12-13 00:38:00,565:INFO:Total runtime is 0.20357928673426312 minutes
2023-12-13 00:38:00,567:INFO:SubProcess create_model() called ==================================
2023-12-13 00:38:00,567:INFO:Initializing create_model()
2023-12-13 00:38:00,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:00,567:INFO:Checking exceptions
2023-12-13 00:38:00,567:INFO:Importing libraries
2023-12-13 00:38:00,568:INFO:Copying training dataset
2023-12-13 00:38:00,571:INFO:Defining folds
2023-12-13 00:38:00,572:INFO:Declaring metric variables
2023-12-13 00:38:00,575:INFO:Importing untrained model
2023-12-13 00:38:00,577:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 00:38:00,583:INFO:Starting cross validation
2023-12-13 00:38:00,583:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:00,810:INFO:Calculating mean and std
2023-12-13 00:38:00,812:INFO:Creating metrics dataframe
2023-12-13 00:38:00,813:INFO:Uploading results into container
2023-12-13 00:38:00,813:INFO:Uploading model into container now
2023-12-13 00:38:00,814:INFO:_master_model_container: 16
2023-12-13 00:38:00,814:INFO:_display_container: 2
2023-12-13 00:38:00,814:INFO:GradientBoostingRegressor(random_state=5893)
2023-12-13 00:38:00,814:INFO:create_model() successfully completed......................................
2023-12-13 00:38:00,902:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:00,903:INFO:Creating metrics dataframe
2023-12-13 00:38:00,910:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 00:38:00,910:INFO:Total runtime is 0.20932871103286746 minutes
2023-12-13 00:38:00,913:INFO:SubProcess create_model() called ==================================
2023-12-13 00:38:00,913:INFO:Initializing create_model()
2023-12-13 00:38:00,913:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:00,913:INFO:Checking exceptions
2023-12-13 00:38:00,913:INFO:Importing libraries
2023-12-13 00:38:00,913:INFO:Copying training dataset
2023-12-13 00:38:00,918:INFO:Defining folds
2023-12-13 00:38:00,918:INFO:Declaring metric variables
2023-12-13 00:38:00,921:INFO:Importing untrained model
2023-12-13 00:38:00,923:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 00:38:00,928:INFO:Starting cross validation
2023-12-13 00:38:00,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:01,823:INFO:Calculating mean and std
2023-12-13 00:38:01,824:INFO:Creating metrics dataframe
2023-12-13 00:38:01,827:INFO:Uploading results into container
2023-12-13 00:38:01,828:INFO:Uploading model into container now
2023-12-13 00:38:01,829:INFO:_master_model_container: 17
2023-12-13 00:38:01,830:INFO:_display_container: 2
2023-12-13 00:38:01,830:INFO:LGBMRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:38:01,830:INFO:create_model() successfully completed......................................
2023-12-13 00:38:01,933:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:01,933:INFO:Creating metrics dataframe
2023-12-13 00:38:01,941:INFO:Initializing Dummy Regressor
2023-12-13 00:38:01,941:INFO:Total runtime is 0.22651461760203045 minutes
2023-12-13 00:38:01,943:INFO:SubProcess create_model() called ==================================
2023-12-13 00:38:01,943:INFO:Initializing create_model()
2023-12-13 00:38:01,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD85388BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:01,943:INFO:Checking exceptions
2023-12-13 00:38:01,944:INFO:Importing libraries
2023-12-13 00:38:01,944:INFO:Copying training dataset
2023-12-13 00:38:01,948:INFO:Defining folds
2023-12-13 00:38:01,948:INFO:Declaring metric variables
2023-12-13 00:38:01,950:INFO:Importing untrained model
2023-12-13 00:38:01,952:INFO:Dummy Regressor Imported successfully
2023-12-13 00:38:01,958:INFO:Starting cross validation
2023-12-13 00:38:01,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:02,018:INFO:Calculating mean and std
2023-12-13 00:38:02,018:INFO:Creating metrics dataframe
2023-12-13 00:38:02,020:INFO:Uploading results into container
2023-12-13 00:38:02,020:INFO:Uploading model into container now
2023-12-13 00:38:02,020:INFO:_master_model_container: 18
2023-12-13 00:38:02,020:INFO:_display_container: 2
2023-12-13 00:38:02,020:INFO:DummyRegressor()
2023-12-13 00:38:02,020:INFO:create_model() successfully completed......................................
2023-12-13 00:38:02,105:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:02,105:INFO:Creating metrics dataframe
2023-12-13 00:38:02,115:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 00:38:02,121:INFO:Initializing create_model()
2023-12-13 00:38:02,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5893), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:02,122:INFO:Checking exceptions
2023-12-13 00:38:02,123:INFO:Importing libraries
2023-12-13 00:38:02,123:INFO:Copying training dataset
2023-12-13 00:38:02,126:INFO:Defining folds
2023-12-13 00:38:02,127:INFO:Declaring metric variables
2023-12-13 00:38:02,127:INFO:Importing untrained model
2023-12-13 00:38:02,127:INFO:Declaring custom model
2023-12-13 00:38:02,127:INFO:Random Forest Regressor Imported successfully
2023-12-13 00:38:02,128:INFO:Cross validation set to False
2023-12-13 00:38:02,128:INFO:Fitting Model
2023-12-13 00:38:02,282:INFO:RandomForestRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:38:02,282:INFO:create_model() successfully completed......................................
2023-12-13 00:38:02,396:INFO:_master_model_container: 18
2023-12-13 00:38:02,396:INFO:_display_container: 2
2023-12-13 00:38:02,396:INFO:RandomForestRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:38:02,396:INFO:compare_models() successfully completed......................................
2023-12-13 00:38:09,913:INFO:Initializing create_model()
2023-12-13 00:38:09,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:09,914:INFO:Checking exceptions
2023-12-13 00:38:09,924:INFO:Importing libraries
2023-12-13 00:38:09,924:INFO:Copying training dataset
2023-12-13 00:38:09,929:INFO:Defining folds
2023-12-13 00:38:09,929:INFO:Declaring metric variables
2023-12-13 00:38:09,931:INFO:Importing untrained model
2023-12-13 00:38:09,934:INFO:Random Forest Regressor Imported successfully
2023-12-13 00:38:09,939:INFO:Starting cross validation
2023-12-13 00:38:09,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:10,590:INFO:Calculating mean and std
2023-12-13 00:38:10,591:INFO:Creating metrics dataframe
2023-12-13 00:38:10,596:INFO:Finalizing model
2023-12-13 00:38:10,791:INFO:Uploading results into container
2023-12-13 00:38:10,792:INFO:Uploading model into container now
2023-12-13 00:38:10,802:INFO:_master_model_container: 19
2023-12-13 00:38:10,802:INFO:_display_container: 3
2023-12-13 00:38:10,803:INFO:RandomForestRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:38:10,803:INFO:create_model() successfully completed......................................
2023-12-13 00:38:24,157:INFO:Initializing tune_model()
2023-12-13 00:38:24,157:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5893), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 00:38:24,157:INFO:Checking exceptions
2023-12-13 00:38:24,169:INFO:Copying training dataset
2023-12-13 00:38:24,173:INFO:Checking base model
2023-12-13 00:38:24,173:INFO:Base model : Random Forest Regressor
2023-12-13 00:38:24,176:INFO:Declaring metric variables
2023-12-13 00:38:24,178:INFO:Defining Hyperparameters
2023-12-13 00:38:24,283:INFO:Tuning with n_jobs=-1
2023-12-13 00:38:24,283:INFO:Initializing RandomizedSearchCV
2023-12-13 00:38:39,849:INFO:best_params: {'actual_estimator__n_estimators': 210, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-13 00:38:39,850:INFO:Hyperparameter search completed
2023-12-13 00:38:39,850:INFO:SubProcess create_model() called ==================================
2023-12-13 00:38:39,851:INFO:Initializing create_model()
2023-12-13 00:38:39,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5893), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD829C4210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 210, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'log2', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-13 00:38:39,851:INFO:Checking exceptions
2023-12-13 00:38:39,851:INFO:Importing libraries
2023-12-13 00:38:39,851:INFO:Copying training dataset
2023-12-13 00:38:39,855:INFO:Defining folds
2023-12-13 00:38:39,855:INFO:Declaring metric variables
2023-12-13 00:38:39,858:INFO:Importing untrained model
2023-12-13 00:38:39,859:INFO:Declaring custom model
2023-12-13 00:38:39,862:INFO:Random Forest Regressor Imported successfully
2023-12-13 00:38:39,866:INFO:Starting cross validation
2023-12-13 00:38:39,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:40,359:INFO:Calculating mean and std
2023-12-13 00:38:40,360:INFO:Creating metrics dataframe
2023-12-13 00:38:40,364:INFO:Finalizing model
2023-12-13 00:38:40,535:INFO:Uploading results into container
2023-12-13 00:38:40,536:INFO:Uploading model into container now
2023-12-13 00:38:40,536:INFO:_master_model_container: 20
2023-12-13 00:38:40,536:INFO:_display_container: 4
2023-12-13 00:38:40,537:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893)
2023-12-13 00:38:40,537:INFO:create_model() successfully completed......................................
2023-12-13 00:38:40,640:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:40,641:INFO:choose_better activated
2023-12-13 00:38:40,643:INFO:SubProcess create_model() called ==================================
2023-12-13 00:38:40,644:INFO:Initializing create_model()
2023-12-13 00:38:40,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5893), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:38:40,644:INFO:Checking exceptions
2023-12-13 00:38:40,645:INFO:Importing libraries
2023-12-13 00:38:40,645:INFO:Copying training dataset
2023-12-13 00:38:40,649:INFO:Defining folds
2023-12-13 00:38:40,649:INFO:Declaring metric variables
2023-12-13 00:38:40,649:INFO:Importing untrained model
2023-12-13 00:38:40,649:INFO:Declaring custom model
2023-12-13 00:38:40,649:INFO:Random Forest Regressor Imported successfully
2023-12-13 00:38:40,649:INFO:Starting cross validation
2023-12-13 00:38:40,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 00:38:41,287:INFO:Calculating mean and std
2023-12-13 00:38:41,287:INFO:Creating metrics dataframe
2023-12-13 00:38:41,289:INFO:Finalizing model
2023-12-13 00:38:41,435:INFO:Uploading results into container
2023-12-13 00:38:41,435:INFO:Uploading model into container now
2023-12-13 00:38:41,436:INFO:_master_model_container: 21
2023-12-13 00:38:41,436:INFO:_display_container: 5
2023-12-13 00:38:41,436:INFO:RandomForestRegressor(n_jobs=-1, random_state=5893)
2023-12-13 00:38:41,436:INFO:create_model() successfully completed......................................
2023-12-13 00:38:41,535:INFO:SubProcess create_model() end ==================================
2023-12-13 00:38:41,535:INFO:RandomForestRegressor(n_jobs=-1, random_state=5893) result for R2 is 0.7253
2023-12-13 00:38:41,536:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893) result for R2 is 0.7285
2023-12-13 00:38:41,536:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893) is best model
2023-12-13 00:38:41,536:INFO:choose_better completed
2023-12-13 00:38:41,544:INFO:_master_model_container: 21
2023-12-13 00:38:41,544:INFO:_display_container: 4
2023-12-13 00:38:41,545:INFO:RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893)
2023-12-13 00:38:41,545:INFO:tune_model() successfully completed......................................
2023-12-13 00:38:51,374:INFO:Initializing plot_model()
2023-12-13 00:38:51,374:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 00:38:51,374:INFO:Checking exceptions
2023-12-13 00:38:51,395:INFO:Preloading libraries
2023-12-13 00:38:51,406:INFO:Copying training dataset
2023-12-13 00:38:51,406:INFO:Plot type: residuals
2023-12-13 00:38:51,529:INFO:Fitting Model
2023-12-13 00:38:51,538:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 00:38:51,647:INFO:Scoring test/hold-out set
2023-12-13 00:38:52,104:INFO:Visual Rendered Successfully
2023-12-13 00:38:52,250:INFO:plot_model() successfully completed......................................
2023-12-13 00:39:37,606:INFO:Initializing plot_model()
2023-12-13 00:39:37,606:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 00:39:37,606:INFO:Checking exceptions
2023-12-13 00:39:37,639:INFO:Preloading libraries
2023-12-13 00:39:37,652:INFO:Copying training dataset
2023-12-13 00:39:37,652:INFO:Plot type: feature
2023-12-13 00:39:37,652:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 00:39:37,831:INFO:Visual Rendered Successfully
2023-12-13 00:39:37,976:INFO:plot_model() successfully completed......................................
2023-12-13 00:39:45,023:INFO:Initializing predict_model()
2023-12-13 00:39:45,024:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ADC0A6BBA0>)
2023-12-13 00:39:45,024:INFO:Checking exceptions
2023-12-13 00:39:45,024:INFO:Preloading libraries
2023-12-13 00:39:51,207:INFO:Initializing finalize_model()
2023-12-13 00:39:51,207:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 00:39:51,207:INFO:Finalizing RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893)
2023-12-13 00:39:51,211:INFO:Initializing create_model()
2023-12-13 00:39:51,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=RandomForestRegressor(bootstrap=False, max_depth=8, max_features='log2',
                      min_impurity_decrease=0.0001, min_samples_leaf=2,
                      min_samples_split=9, n_estimators=210, n_jobs=-1,
                      random_state=5893), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 00:39:51,211:INFO:Checking exceptions
2023-12-13 00:39:51,212:INFO:Importing libraries
2023-12-13 00:39:51,212:INFO:Copying training dataset
2023-12-13 00:39:51,213:INFO:Defining folds
2023-12-13 00:39:51,213:INFO:Declaring metric variables
2023-12-13 00:39:51,213:INFO:Importing untrained model
2023-12-13 00:39:51,213:INFO:Declaring custom model
2023-12-13 00:39:51,213:INFO:Random Forest Regressor Imported successfully
2023-12-13 00:39:51,214:INFO:Cross validation set to False
2023-12-13 00:39:51,214:INFO:Fitting Model
2023-12-13 00:39:51,396:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer condition...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=8,
                                       max_features='log2',
                                       min_impurity_decrease=0.0001,
                                       min_samples_leaf=2, min_samples_split=9,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=5893))])
2023-12-13 00:39:51,396:INFO:create_model() successfully completed......................................
2023-12-13 00:39:51,492:INFO:_master_model_container: 21
2023-12-13 00:39:51,492:INFO:_display_container: 5
2023-12-13 00:39:51,497:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer condition...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=8,
                                       max_features='log2',
                                       min_impurity_decrease=0.0001,
                                       min_samples_leaf=2, min_samples_split=9,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=5893))])
2023-12-13 00:39:51,497:INFO:finalize_model() successfully completed......................................
2023-12-13 00:39:54,177:INFO:Initializing predict_model()
2023-12-13 00:39:54,178:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer condition...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=8,
                                       max_features='log2',
                                       min_impurity_decrease=0.0001,
                                       min_samples_leaf=2, min_samples_split=9,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=5893))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD84ACDA80>)
2023-12-13 00:39:54,178:INFO:Checking exceptions
2023-12-13 00:39:54,178:INFO:Preloading libraries
2023-12-13 00:39:59,765:INFO:Initializing predict_model()
2023-12-13 00:39:59,766:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer condition...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=8,
                                       max_features='log2',
                                       min_impurity_decrease=0.0001,
                                       min_samples_leaf=2, min_samples_split=9,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=5893))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ADC0A6A020>)
2023-12-13 00:39:59,766:INFO:Checking exceptions
2023-12-13 00:39:59,766:INFO:Preloading libraries
2023-12-13 00:39:59,768:INFO:Set up data.
2023-12-13 00:39:59,773:INFO:Set up index.
2023-12-13 00:40:46,403:INFO:Initializing predict_model()
2023-12-13 00:40:46,403:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer condition...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=8,
                                       max_features='log2',
                                       min_impurity_decrease=0.0001,
                                       min_samples_leaf=2, min_samples_split=9,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=5893))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD84ACDA80>)
2023-12-13 00:40:46,403:INFO:Checking exceptions
2023-12-13 00:40:46,403:INFO:Preloading libraries
2023-12-13 00:40:51,036:INFO:Initializing predict_model()
2023-12-13 00:40:51,036:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001ADDFF93010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer condition...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=8,
                                       max_features='log2',
                                       min_impurity_decrease=0.0001,
                                       min_samples_leaf=2, min_samples_split=9,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=5893))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD84F25800>)
2023-12-13 00:40:51,037:INFO:Checking exceptions
2023-12-13 00:40:51,037:INFO:Preloading libraries
2023-12-13 00:40:51,038:INFO:Set up data.
2023-12-13 00:40:51,043:INFO:Set up index.
2023-12-13 14:21:19,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 14:21:19,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 14:21:19,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 14:21:19,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-13 14:21:19,453:INFO:PyCaret RegressionExperiment
2023-12-13 14:21:19,453:INFO:Logging name: reg-default-name
2023-12-13 14:21:19,454:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:21:19,454:INFO:version 3.2.0
2023-12-13 14:21:19,454:INFO:Initializing setup()
2023-12-13 14:21:19,454:INFO:self.USI: 9213
2023-12-13 14:21:19,454:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:21:19,455:INFO:Checking environment
2023-12-13 14:21:19,455:INFO:python_version: 3.11.0
2023-12-13 14:21:19,455:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:21:19,455:INFO:machine: AMD64
2023-12-13 14:21:19,455:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:21:19,461:INFO:Memory: svmem(total=14877257728, available=4067115008, percent=72.7, used=10810142720, free=4067115008)
2023-12-13 14:21:19,462:INFO:Physical Core: 8
2023-12-13 14:21:19,462:INFO:Logical Core: 16
2023-12-13 14:21:19,462:INFO:Checking libraries
2023-12-13 14:21:19,462:INFO:System:
2023-12-13 14:21:19,462:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:21:19,462:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:21:19,462:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:21:19,462:INFO:PyCaret required dependencies:
2023-12-13 14:21:19,509:INFO:                 pip: 23.3.1
2023-12-13 14:21:19,509:INFO:          setuptools: 65.5.0
2023-12-13 14:21:19,509:INFO:             pycaret: 3.2.0
2023-12-13 14:21:19,509:INFO:             IPython: 8.18.1
2023-12-13 14:21:19,509:INFO:          ipywidgets: 8.1.1
2023-12-13 14:21:19,509:INFO:                tqdm: 4.66.1
2023-12-13 14:21:19,509:INFO:               numpy: 1.25.2
2023-12-13 14:21:19,509:INFO:              pandas: 2.1.4
2023-12-13 14:21:19,509:INFO:              jinja2: 3.1.2
2023-12-13 14:21:19,509:INFO:               scipy: 1.10.1
2023-12-13 14:21:19,509:INFO:              joblib: 1.3.2
2023-12-13 14:21:19,509:INFO:             sklearn: 1.2.2
2023-12-13 14:21:19,509:INFO:                pyod: 1.1.2
2023-12-13 14:21:19,509:INFO:            imblearn: 0.11.0
2023-12-13 14:21:19,509:INFO:   category_encoders: 2.6.3
2023-12-13 14:21:19,509:INFO:            lightgbm: 4.1.0
2023-12-13 14:21:19,509:INFO:               numba: 0.58.1
2023-12-13 14:21:19,509:INFO:            requests: 2.31.0
2023-12-13 14:21:19,509:INFO:          matplotlib: 3.6.0
2023-12-13 14:21:19,509:INFO:          scikitplot: 0.3.7
2023-12-13 14:21:19,509:INFO:         yellowbrick: 1.5
2023-12-13 14:21:19,509:INFO:              plotly: 5.18.0
2023-12-13 14:21:19,509:INFO:    plotly-resampler: Not installed
2023-12-13 14:21:19,509:INFO:             kaleido: 0.2.1
2023-12-13 14:21:19,509:INFO:           schemdraw: 0.15
2023-12-13 14:21:19,509:INFO:         statsmodels: 0.14.0
2023-12-13 14:21:19,509:INFO:              sktime: 0.21.1
2023-12-13 14:21:19,509:INFO:               tbats: 1.1.3
2023-12-13 14:21:19,509:INFO:            pmdarima: 2.0.4
2023-12-13 14:21:19,509:INFO:              psutil: 5.9.6
2023-12-13 14:21:19,509:INFO:          markupsafe: 2.1.3
2023-12-13 14:21:19,509:INFO:             pickle5: Not installed
2023-12-13 14:21:19,509:INFO:         cloudpickle: 3.0.0
2023-12-13 14:21:19,509:INFO:         deprecation: 2.1.0
2023-12-13 14:21:19,509:INFO:              xxhash: 3.4.1
2023-12-13 14:21:19,509:INFO:           wurlitzer: Not installed
2023-12-13 14:21:19,509:INFO:PyCaret optional dependencies:
2023-12-13 14:21:19,524:INFO:                shap: Not installed
2023-12-13 14:21:19,524:INFO:           interpret: Not installed
2023-12-13 14:21:19,524:INFO:                umap: Not installed
2023-12-13 14:21:19,524:INFO:     ydata_profiling: Not installed
2023-12-13 14:21:19,524:INFO:  explainerdashboard: Not installed
2023-12-13 14:21:19,524:INFO:             autoviz: Not installed
2023-12-13 14:21:19,524:INFO:           fairlearn: Not installed
2023-12-13 14:21:19,524:INFO:          deepchecks: Not installed
2023-12-13 14:21:19,524:INFO:             xgboost: Not installed
2023-12-13 14:21:19,524:INFO:            catboost: Not installed
2023-12-13 14:21:19,524:INFO:              kmodes: Not installed
2023-12-13 14:21:19,524:INFO:             mlxtend: Not installed
2023-12-13 14:21:19,524:INFO:       statsforecast: Not installed
2023-12-13 14:21:19,524:INFO:        tune_sklearn: Not installed
2023-12-13 14:21:19,524:INFO:                 ray: Not installed
2023-12-13 14:21:19,524:INFO:            hyperopt: Not installed
2023-12-13 14:21:19,524:INFO:              optuna: Not installed
2023-12-13 14:21:19,524:INFO:               skopt: Not installed
2023-12-13 14:21:19,524:INFO:              mlflow: Not installed
2023-12-13 14:21:19,524:INFO:              gradio: Not installed
2023-12-13 14:21:19,524:INFO:             fastapi: Not installed
2023-12-13 14:21:19,524:INFO:             uvicorn: Not installed
2023-12-13 14:21:19,524:INFO:              m2cgen: Not installed
2023-12-13 14:21:19,524:INFO:           evidently: Not installed
2023-12-13 14:21:19,524:INFO:               fugue: Not installed
2023-12-13 14:21:19,524:INFO:           streamlit: Not installed
2023-12-13 14:21:19,524:INFO:             prophet: Not installed
2023-12-13 14:21:19,524:INFO:None
2023-12-13 14:21:19,524:INFO:Set up data.
2023-12-13 14:21:19,524:INFO:Set up folding strategy.
2023-12-13 14:21:19,524:INFO:Set up train/test split.
2023-12-13 14:21:19,540:INFO:Set up index.
2023-12-13 14:21:19,540:INFO:Assigning column types.
2023-12-13 14:21:19,540:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:21:19,540:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,547:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,547:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,593:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,632:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,635:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,639:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,708:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:21:19,708:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,724:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,756:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,807:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,886:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:21:19,899:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:19,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:19,980:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,016:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,063:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:21:20,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,206:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,239:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:21:20,287:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:21:20,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,415:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:21:20,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,572:INFO:Preparing preprocessing pipeline...
2023-12-13 14:21:20,572:INFO:Set up simple imputation.
2023-12-13 14:21:20,588:INFO:Set up column name cleaning.
2023-12-13 14:21:20,619:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:21:20,624:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:21:20,624:INFO:Creating final display dataframe.
2023-12-13 14:21:20,687:INFO:Setup _display_container:                     Description             Value
0                    Session id              3131
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 19)
4        Transformed data shape        (1555, 19)
5   Transformed train set shape        (1088, 19)
6    Transformed test set shape         (467, 19)
7              Numeric features                18
8      Rows with missing values             98.6%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              9213
2023-12-13 14:21:20,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:21:20,873:INFO:setup() successfully completed in 1.42s...............
2023-12-13 14:21:20,882:INFO:Initializing compare_models()
2023-12-13 14:21:20,882:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:21:20,882:INFO:Checking exceptions
2023-12-13 14:21:20,889:INFO:Preparing display monitor
2023-12-13 14:21:20,909:INFO:Initializing Linear Regression
2023-12-13 14:21:20,909:INFO:Total runtime is 0.0 minutes
2023-12-13 14:21:20,912:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:20,912:INFO:Initializing create_model()
2023-12-13 14:21:20,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:20,912:INFO:Checking exceptions
2023-12-13 14:21:20,912:INFO:Importing libraries
2023-12-13 14:21:20,912:INFO:Copying training dataset
2023-12-13 14:21:20,917:INFO:Defining folds
2023-12-13 14:21:20,917:INFO:Declaring metric variables
2023-12-13 14:21:20,918:INFO:Importing untrained model
2023-12-13 14:21:20,922:INFO:Linear Regression Imported successfully
2023-12-13 14:21:20,928:INFO:Starting cross validation
2023-12-13 14:21:20,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:25,090:INFO:Calculating mean and std
2023-12-13 14:21:25,093:INFO:Creating metrics dataframe
2023-12-13 14:21:25,098:INFO:Uploading results into container
2023-12-13 14:21:25,099:INFO:Uploading model into container now
2023-12-13 14:21:25,100:INFO:_master_model_container: 1
2023-12-13 14:21:25,100:INFO:_display_container: 2
2023-12-13 14:21:25,100:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:21:25,101:INFO:create_model() successfully completed......................................
2023-12-13 14:21:25,250:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:25,250:INFO:Creating metrics dataframe
2023-12-13 14:21:25,250:INFO:Initializing Lasso Regression
2023-12-13 14:21:25,250:INFO:Total runtime is 0.07235939105351766 minutes
2023-12-13 14:21:25,250:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:25,250:INFO:Initializing create_model()
2023-12-13 14:21:25,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:25,250:INFO:Checking exceptions
2023-12-13 14:21:25,250:INFO:Importing libraries
2023-12-13 14:21:25,250:INFO:Copying training dataset
2023-12-13 14:21:25,264:INFO:Defining folds
2023-12-13 14:21:25,264:INFO:Declaring metric variables
2023-12-13 14:21:25,267:INFO:Importing untrained model
2023-12-13 14:21:25,267:INFO:Lasso Regression Imported successfully
2023-12-13 14:21:25,273:INFO:Starting cross validation
2023-12-13 14:21:25,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:27,822:INFO:Calculating mean and std
2023-12-13 14:21:27,822:INFO:Creating metrics dataframe
2023-12-13 14:21:27,822:INFO:Uploading results into container
2023-12-13 14:21:27,827:INFO:Uploading model into container now
2023-12-13 14:21:27,828:INFO:_master_model_container: 2
2023-12-13 14:21:27,828:INFO:_display_container: 2
2023-12-13 14:21:27,829:INFO:Lasso(random_state=3131)
2023-12-13 14:21:27,829:INFO:create_model() successfully completed......................................
2023-12-13 14:21:27,951:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:27,951:INFO:Creating metrics dataframe
2023-12-13 14:21:27,962:INFO:Initializing Ridge Regression
2023-12-13 14:21:27,962:INFO:Total runtime is 0.11756108204523721 minutes
2023-12-13 14:21:27,962:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:27,962:INFO:Initializing create_model()
2023-12-13 14:21:27,962:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:27,962:INFO:Checking exceptions
2023-12-13 14:21:27,962:INFO:Importing libraries
2023-12-13 14:21:27,962:INFO:Copying training dataset
2023-12-13 14:21:27,962:INFO:Defining folds
2023-12-13 14:21:27,962:INFO:Declaring metric variables
2023-12-13 14:21:27,972:INFO:Importing untrained model
2023-12-13 14:21:27,975:INFO:Ridge Regression Imported successfully
2023-12-13 14:21:27,976:INFO:Starting cross validation
2023-12-13 14:21:27,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,033:INFO:Calculating mean and std
2023-12-13 14:21:28,033:INFO:Creating metrics dataframe
2023-12-13 14:21:28,033:INFO:Uploading results into container
2023-12-13 14:21:28,033:INFO:Uploading model into container now
2023-12-13 14:21:28,033:INFO:_master_model_container: 3
2023-12-13 14:21:28,033:INFO:_display_container: 2
2023-12-13 14:21:28,033:INFO:Ridge(random_state=3131)
2023-12-13 14:21:28,033:INFO:create_model() successfully completed......................................
2023-12-13 14:21:28,104:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:28,104:INFO:Creating metrics dataframe
2023-12-13 14:21:28,120:INFO:Initializing Elastic Net
2023-12-13 14:21:28,120:INFO:Total runtime is 0.12018090486526488 minutes
2023-12-13 14:21:28,120:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:28,120:INFO:Initializing create_model()
2023-12-13 14:21:28,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:28,120:INFO:Checking exceptions
2023-12-13 14:21:28,120:INFO:Importing libraries
2023-12-13 14:21:28,120:INFO:Copying training dataset
2023-12-13 14:21:28,120:INFO:Defining folds
2023-12-13 14:21:28,120:INFO:Declaring metric variables
2023-12-13 14:21:28,130:INFO:Importing untrained model
2023-12-13 14:21:28,133:INFO:Elastic Net Imported successfully
2023-12-13 14:21:28,134:INFO:Starting cross validation
2023-12-13 14:21:28,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,187:INFO:Calculating mean and std
2023-12-13 14:21:28,187:INFO:Creating metrics dataframe
2023-12-13 14:21:28,187:INFO:Uploading results into container
2023-12-13 14:21:28,187:INFO:Uploading model into container now
2023-12-13 14:21:28,187:INFO:_master_model_container: 4
2023-12-13 14:21:28,187:INFO:_display_container: 2
2023-12-13 14:21:28,187:INFO:ElasticNet(random_state=3131)
2023-12-13 14:21:28,187:INFO:create_model() successfully completed......................................
2023-12-13 14:21:28,261:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:28,261:INFO:Creating metrics dataframe
2023-12-13 14:21:28,261:INFO:Initializing Least Angle Regression
2023-12-13 14:21:28,261:INFO:Total runtime is 0.1225313901901245 minutes
2023-12-13 14:21:28,276:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:28,276:INFO:Initializing create_model()
2023-12-13 14:21:28,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:28,276:INFO:Checking exceptions
2023-12-13 14:21:28,276:INFO:Importing libraries
2023-12-13 14:21:28,276:INFO:Copying training dataset
2023-12-13 14:21:28,276:INFO:Defining folds
2023-12-13 14:21:28,276:INFO:Declaring metric variables
2023-12-13 14:21:28,285:INFO:Importing untrained model
2023-12-13 14:21:28,285:INFO:Least Angle Regression Imported successfully
2023-12-13 14:21:28,292:INFO:Starting cross validation
2023-12-13 14:21:28,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,356:INFO:Calculating mean and std
2023-12-13 14:21:28,357:INFO:Creating metrics dataframe
2023-12-13 14:21:28,357:INFO:Uploading results into container
2023-12-13 14:21:28,357:INFO:Uploading model into container now
2023-12-13 14:21:28,357:INFO:_master_model_container: 5
2023-12-13 14:21:28,357:INFO:_display_container: 2
2023-12-13 14:21:28,357:INFO:Lars(random_state=3131)
2023-12-13 14:21:28,357:INFO:create_model() successfully completed......................................
2023-12-13 14:21:28,434:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:28,434:INFO:Creating metrics dataframe
2023-12-13 14:21:28,434:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:21:28,434:INFO:Total runtime is 0.12542001008987425 minutes
2023-12-13 14:21:28,434:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:28,434:INFO:Initializing create_model()
2023-12-13 14:21:28,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:28,434:INFO:Checking exceptions
2023-12-13 14:21:28,434:INFO:Importing libraries
2023-12-13 14:21:28,434:INFO:Copying training dataset
2023-12-13 14:21:28,452:INFO:Defining folds
2023-12-13 14:21:28,452:INFO:Declaring metric variables
2023-12-13 14:21:28,456:INFO:Importing untrained model
2023-12-13 14:21:28,458:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:21:28,458:INFO:Starting cross validation
2023-12-13 14:21:28,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,524:INFO:Calculating mean and std
2023-12-13 14:21:28,524:INFO:Creating metrics dataframe
2023-12-13 14:21:28,524:INFO:Uploading results into container
2023-12-13 14:21:28,524:INFO:Uploading model into container now
2023-12-13 14:21:28,524:INFO:_master_model_container: 6
2023-12-13 14:21:28,524:INFO:_display_container: 2
2023-12-13 14:21:28,524:INFO:LassoLars(random_state=3131)
2023-12-13 14:21:28,524:INFO:create_model() successfully completed......................................
2023-12-13 14:21:28,594:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:28,594:INFO:Creating metrics dataframe
2023-12-13 14:21:28,610:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:21:28,610:INFO:Total runtime is 0.12834653059641518 minutes
2023-12-13 14:21:28,610:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:28,610:INFO:Initializing create_model()
2023-12-13 14:21:28,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:28,610:INFO:Checking exceptions
2023-12-13 14:21:28,610:INFO:Importing libraries
2023-12-13 14:21:28,610:INFO:Copying training dataset
2023-12-13 14:21:28,610:INFO:Defining folds
2023-12-13 14:21:28,610:INFO:Declaring metric variables
2023-12-13 14:21:28,622:INFO:Importing untrained model
2023-12-13 14:21:28,625:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:21:28,625:INFO:Starting cross validation
2023-12-13 14:21:28,625:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,679:INFO:Calculating mean and std
2023-12-13 14:21:28,679:INFO:Creating metrics dataframe
2023-12-13 14:21:28,679:INFO:Uploading results into container
2023-12-13 14:21:28,679:INFO:Uploading model into container now
2023-12-13 14:21:28,679:INFO:_master_model_container: 7
2023-12-13 14:21:28,679:INFO:_display_container: 2
2023-12-13 14:21:28,679:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:21:28,679:INFO:create_model() successfully completed......................................
2023-12-13 14:21:28,752:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:28,752:INFO:Creating metrics dataframe
2023-12-13 14:21:28,752:INFO:Initializing Bayesian Ridge
2023-12-13 14:21:28,752:INFO:Total runtime is 0.13072801431020098 minutes
2023-12-13 14:21:28,768:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:28,768:INFO:Initializing create_model()
2023-12-13 14:21:28,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:28,768:INFO:Checking exceptions
2023-12-13 14:21:28,768:INFO:Importing libraries
2023-12-13 14:21:28,768:INFO:Copying training dataset
2023-12-13 14:21:28,768:INFO:Defining folds
2023-12-13 14:21:28,768:INFO:Declaring metric variables
2023-12-13 14:21:28,776:INFO:Importing untrained model
2023-12-13 14:21:28,776:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:21:28,784:INFO:Starting cross validation
2023-12-13 14:21:28,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,835:INFO:Calculating mean and std
2023-12-13 14:21:28,835:INFO:Creating metrics dataframe
2023-12-13 14:21:28,835:INFO:Uploading results into container
2023-12-13 14:21:28,835:INFO:Uploading model into container now
2023-12-13 14:21:28,835:INFO:_master_model_container: 8
2023-12-13 14:21:28,835:INFO:_display_container: 2
2023-12-13 14:21:28,835:INFO:BayesianRidge()
2023-12-13 14:21:28,835:INFO:create_model() successfully completed......................................
2023-12-13 14:21:28,911:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:28,911:INFO:Creating metrics dataframe
2023-12-13 14:21:28,911:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:21:28,911:INFO:Total runtime is 0.13336271444956457 minutes
2023-12-13 14:21:28,911:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:28,911:INFO:Initializing create_model()
2023-12-13 14:21:28,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:28,911:INFO:Checking exceptions
2023-12-13 14:21:28,911:INFO:Importing libraries
2023-12-13 14:21:28,911:INFO:Copying training dataset
2023-12-13 14:21:28,926:INFO:Defining folds
2023-12-13 14:21:28,926:INFO:Declaring metric variables
2023-12-13 14:21:28,932:INFO:Importing untrained model
2023-12-13 14:21:28,933:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:21:28,933:INFO:Starting cross validation
2023-12-13 14:21:28,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:28,989:INFO:Calculating mean and std
2023-12-13 14:21:28,989:INFO:Creating metrics dataframe
2023-12-13 14:21:28,989:INFO:Uploading results into container
2023-12-13 14:21:28,989:INFO:Uploading model into container now
2023-12-13 14:21:28,989:INFO:_master_model_container: 9
2023-12-13 14:21:28,989:INFO:_display_container: 2
2023-12-13 14:21:28,989:INFO:PassiveAggressiveRegressor(random_state=3131)
2023-12-13 14:21:28,989:INFO:create_model() successfully completed......................................
2023-12-13 14:21:29,061:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:29,061:INFO:Creating metrics dataframe
2023-12-13 14:21:29,077:INFO:Initializing Huber Regressor
2023-12-13 14:21:29,077:INFO:Total runtime is 0.13613247076670323 minutes
2023-12-13 14:21:29,077:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:29,077:INFO:Initializing create_model()
2023-12-13 14:21:29,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:29,077:INFO:Checking exceptions
2023-12-13 14:21:29,077:INFO:Importing libraries
2023-12-13 14:21:29,077:INFO:Copying training dataset
2023-12-13 14:21:29,077:INFO:Defining folds
2023-12-13 14:21:29,077:INFO:Declaring metric variables
2023-12-13 14:21:29,088:INFO:Importing untrained model
2023-12-13 14:21:29,091:INFO:Huber Regressor Imported successfully
2023-12-13 14:21:29,091:INFO:Starting cross validation
2023-12-13 14:21:29,091:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:29,166:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:29,166:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:29,166:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:29,166:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:29,166:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:29,171:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:29,186:INFO:Calculating mean and std
2023-12-13 14:21:29,186:INFO:Creating metrics dataframe
2023-12-13 14:21:29,187:INFO:Uploading results into container
2023-12-13 14:21:29,187:INFO:Uploading model into container now
2023-12-13 14:21:29,187:INFO:_master_model_container: 10
2023-12-13 14:21:29,187:INFO:_display_container: 2
2023-12-13 14:21:29,187:INFO:HuberRegressor()
2023-12-13 14:21:29,187:INFO:create_model() successfully completed......................................
2023-12-13 14:21:29,263:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:29,263:INFO:Creating metrics dataframe
2023-12-13 14:21:29,275:INFO:Initializing K Neighbors Regressor
2023-12-13 14:21:29,275:INFO:Total runtime is 0.13944241205851232 minutes
2023-12-13 14:21:29,278:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:29,278:INFO:Initializing create_model()
2023-12-13 14:21:29,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:29,278:INFO:Checking exceptions
2023-12-13 14:21:29,278:INFO:Importing libraries
2023-12-13 14:21:29,278:INFO:Copying training dataset
2023-12-13 14:21:29,281:INFO:Defining folds
2023-12-13 14:21:29,281:INFO:Declaring metric variables
2023-12-13 14:21:29,281:INFO:Importing untrained model
2023-12-13 14:21:29,281:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:21:29,281:INFO:Starting cross validation
2023-12-13 14:21:29,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:29,470:INFO:Calculating mean and std
2023-12-13 14:21:29,472:INFO:Creating metrics dataframe
2023-12-13 14:21:29,473:INFO:Uploading results into container
2023-12-13 14:21:29,473:INFO:Uploading model into container now
2023-12-13 14:21:29,473:INFO:_master_model_container: 11
2023-12-13 14:21:29,473:INFO:_display_container: 2
2023-12-13 14:21:29,475:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:21:29,475:INFO:create_model() successfully completed......................................
2023-12-13 14:21:29,553:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:29,553:INFO:Creating metrics dataframe
2023-12-13 14:21:29,553:INFO:Initializing Decision Tree Regressor
2023-12-13 14:21:29,553:INFO:Total runtime is 0.14406905571619666 minutes
2023-12-13 14:21:29,562:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:29,562:INFO:Initializing create_model()
2023-12-13 14:21:29,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:29,562:INFO:Checking exceptions
2023-12-13 14:21:29,562:INFO:Importing libraries
2023-12-13 14:21:29,562:INFO:Copying training dataset
2023-12-13 14:21:29,562:INFO:Defining folds
2023-12-13 14:21:29,562:INFO:Declaring metric variables
2023-12-13 14:21:29,562:INFO:Importing untrained model
2023-12-13 14:21:29,562:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:21:29,578:INFO:Starting cross validation
2023-12-13 14:21:29,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:29,652:INFO:Calculating mean and std
2023-12-13 14:21:29,653:INFO:Creating metrics dataframe
2023-12-13 14:21:29,653:INFO:Uploading results into container
2023-12-13 14:21:29,653:INFO:Uploading model into container now
2023-12-13 14:21:29,653:INFO:_master_model_container: 12
2023-12-13 14:21:29,653:INFO:_display_container: 2
2023-12-13 14:21:29,653:INFO:DecisionTreeRegressor(random_state=3131)
2023-12-13 14:21:29,653:INFO:create_model() successfully completed......................................
2023-12-13 14:21:29,728:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:29,728:INFO:Creating metrics dataframe
2023-12-13 14:21:29,728:INFO:Initializing Random Forest Regressor
2023-12-13 14:21:29,728:INFO:Total runtime is 0.1469901323318481 minutes
2023-12-13 14:21:29,744:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:29,744:INFO:Initializing create_model()
2023-12-13 14:21:29,744:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:29,744:INFO:Checking exceptions
2023-12-13 14:21:29,744:INFO:Importing libraries
2023-12-13 14:21:29,744:INFO:Copying training dataset
2023-12-13 14:21:29,744:INFO:Defining folds
2023-12-13 14:21:29,744:INFO:Declaring metric variables
2023-12-13 14:21:29,744:INFO:Importing untrained model
2023-12-13 14:21:29,753:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:21:29,757:INFO:Starting cross validation
2023-12-13 14:21:29,757:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:30,517:INFO:Calculating mean and std
2023-12-13 14:21:30,517:INFO:Creating metrics dataframe
2023-12-13 14:21:30,517:INFO:Uploading results into container
2023-12-13 14:21:30,517:INFO:Uploading model into container now
2023-12-13 14:21:30,517:INFO:_master_model_container: 13
2023-12-13 14:21:30,517:INFO:_display_container: 2
2023-12-13 14:21:30,517:INFO:RandomForestRegressor(n_jobs=-1, random_state=3131)
2023-12-13 14:21:30,517:INFO:create_model() successfully completed......................................
2023-12-13 14:21:30,593:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:30,593:INFO:Creating metrics dataframe
2023-12-13 14:21:30,593:INFO:Initializing Extra Trees Regressor
2023-12-13 14:21:30,593:INFO:Total runtime is 0.1614028930664062 minutes
2023-12-13 14:21:30,609:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:30,609:INFO:Initializing create_model()
2023-12-13 14:21:30,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:30,609:INFO:Checking exceptions
2023-12-13 14:21:30,609:INFO:Importing libraries
2023-12-13 14:21:30,609:INFO:Copying training dataset
2023-12-13 14:21:30,609:INFO:Defining folds
2023-12-13 14:21:30,609:INFO:Declaring metric variables
2023-12-13 14:21:30,616:INFO:Importing untrained model
2023-12-13 14:21:30,617:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:21:30,622:INFO:Starting cross validation
2023-12-13 14:21:30,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:31,110:INFO:Calculating mean and std
2023-12-13 14:21:31,111:INFO:Creating metrics dataframe
2023-12-13 14:21:31,111:INFO:Uploading results into container
2023-12-13 14:21:31,111:INFO:Uploading model into container now
2023-12-13 14:21:31,111:INFO:_master_model_container: 14
2023-12-13 14:21:31,111:INFO:_display_container: 2
2023-12-13 14:21:31,111:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3131)
2023-12-13 14:21:31,111:INFO:create_model() successfully completed......................................
2023-12-13 14:21:31,184:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:31,184:INFO:Creating metrics dataframe
2023-12-13 14:21:31,199:INFO:Initializing AdaBoost Regressor
2023-12-13 14:21:31,199:INFO:Total runtime is 0.17150799830754593 minutes
2023-12-13 14:21:31,199:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:31,199:INFO:Initializing create_model()
2023-12-13 14:21:31,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:31,199:INFO:Checking exceptions
2023-12-13 14:21:31,199:INFO:Importing libraries
2023-12-13 14:21:31,199:INFO:Copying training dataset
2023-12-13 14:21:31,199:INFO:Defining folds
2023-12-13 14:21:31,199:INFO:Declaring metric variables
2023-12-13 14:21:31,199:INFO:Importing untrained model
2023-12-13 14:21:31,199:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:21:31,215:INFO:Starting cross validation
2023-12-13 14:21:31,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:31,397:INFO:Calculating mean and std
2023-12-13 14:21:31,397:INFO:Creating metrics dataframe
2023-12-13 14:21:31,397:INFO:Uploading results into container
2023-12-13 14:21:31,400:INFO:Uploading model into container now
2023-12-13 14:21:31,400:INFO:_master_model_container: 15
2023-12-13 14:21:31,400:INFO:_display_container: 2
2023-12-13 14:21:31,402:INFO:AdaBoostRegressor(random_state=3131)
2023-12-13 14:21:31,402:INFO:create_model() successfully completed......................................
2023-12-13 14:21:31,475:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:31,475:INFO:Creating metrics dataframe
2023-12-13 14:21:31,475:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:21:31,475:INFO:Total runtime is 0.17610837221145625 minutes
2023-12-13 14:21:31,491:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:31,491:INFO:Initializing create_model()
2023-12-13 14:21:31,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:31,491:INFO:Checking exceptions
2023-12-13 14:21:31,491:INFO:Importing libraries
2023-12-13 14:21:31,491:INFO:Copying training dataset
2023-12-13 14:21:31,491:INFO:Defining folds
2023-12-13 14:21:31,491:INFO:Declaring metric variables
2023-12-13 14:21:31,491:INFO:Importing untrained model
2023-12-13 14:21:31,491:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:21:31,491:INFO:Starting cross validation
2023-12-13 14:21:31,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:31,776:INFO:Calculating mean and std
2023-12-13 14:21:31,776:INFO:Creating metrics dataframe
2023-12-13 14:21:31,776:INFO:Uploading results into container
2023-12-13 14:21:31,776:INFO:Uploading model into container now
2023-12-13 14:21:31,776:INFO:_master_model_container: 16
2023-12-13 14:21:31,776:INFO:_display_container: 2
2023-12-13 14:21:31,776:INFO:GradientBoostingRegressor(random_state=3131)
2023-12-13 14:21:31,776:INFO:create_model() successfully completed......................................
2023-12-13 14:21:31,855:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:31,855:INFO:Creating metrics dataframe
2023-12-13 14:21:31,865:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:21:31,865:INFO:Total runtime is 0.18260722955067948 minutes
2023-12-13 14:21:31,865:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:31,865:INFO:Initializing create_model()
2023-12-13 14:21:31,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:31,865:INFO:Checking exceptions
2023-12-13 14:21:31,865:INFO:Importing libraries
2023-12-13 14:21:31,865:INFO:Copying training dataset
2023-12-13 14:21:31,865:INFO:Defining folds
2023-12-13 14:21:31,865:INFO:Declaring metric variables
2023-12-13 14:21:31,865:INFO:Importing untrained model
2023-12-13 14:21:31,865:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:21:31,881:INFO:Starting cross validation
2023-12-13 14:21:31,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:32,765:INFO:Calculating mean and std
2023-12-13 14:21:32,765:INFO:Creating metrics dataframe
2023-12-13 14:21:32,770:INFO:Uploading results into container
2023-12-13 14:21:32,771:INFO:Uploading model into container now
2023-12-13 14:21:32,771:INFO:_master_model_container: 17
2023-12-13 14:21:32,771:INFO:_display_container: 2
2023-12-13 14:21:32,771:INFO:LGBMRegressor(n_jobs=-1, random_state=3131)
2023-12-13 14:21:32,771:INFO:create_model() successfully completed......................................
2023-12-13 14:21:32,871:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:32,871:INFO:Creating metrics dataframe
2023-12-13 14:21:32,871:INFO:Initializing Dummy Regressor
2023-12-13 14:21:32,871:INFO:Total runtime is 0.19936515887578324 minutes
2023-12-13 14:21:32,871:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:32,871:INFO:Initializing create_model()
2023-12-13 14:21:32,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B41B150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:32,871:INFO:Checking exceptions
2023-12-13 14:21:32,871:INFO:Importing libraries
2023-12-13 14:21:32,871:INFO:Copying training dataset
2023-12-13 14:21:32,886:INFO:Defining folds
2023-12-13 14:21:32,886:INFO:Declaring metric variables
2023-12-13 14:21:32,892:INFO:Importing untrained model
2023-12-13 14:21:32,893:INFO:Dummy Regressor Imported successfully
2023-12-13 14:21:32,900:INFO:Starting cross validation
2023-12-13 14:21:32,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:32,964:INFO:Calculating mean and std
2023-12-13 14:21:32,964:INFO:Creating metrics dataframe
2023-12-13 14:21:32,964:INFO:Uploading results into container
2023-12-13 14:21:32,964:INFO:Uploading model into container now
2023-12-13 14:21:32,964:INFO:_master_model_container: 18
2023-12-13 14:21:32,964:INFO:_display_container: 2
2023-12-13 14:21:32,964:INFO:DummyRegressor()
2023-12-13 14:21:32,964:INFO:create_model() successfully completed......................................
2023-12-13 14:21:33,050:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:33,050:INFO:Creating metrics dataframe
2023-12-13 14:21:33,056:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:21:33,067:INFO:Initializing create_model()
2023-12-13 14:21:33,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:33,067:INFO:Checking exceptions
2023-12-13 14:21:33,067:INFO:Importing libraries
2023-12-13 14:21:33,067:INFO:Copying training dataset
2023-12-13 14:21:33,067:INFO:Defining folds
2023-12-13 14:21:33,067:INFO:Declaring metric variables
2023-12-13 14:21:33,067:INFO:Importing untrained model
2023-12-13 14:21:33,067:INFO:Declaring custom model
2023-12-13 14:21:33,067:INFO:Huber Regressor Imported successfully
2023-12-13 14:21:33,067:INFO:Cross validation set to False
2023-12-13 14:21:33,067:INFO:Fitting Model
2023-12-13 14:21:33,156:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:21:33,156:INFO:HuberRegressor()
2023-12-13 14:21:33,156:INFO:create_model() successfully completed......................................
2023-12-13 14:21:33,272:INFO:_master_model_container: 18
2023-12-13 14:21:33,272:INFO:_display_container: 2
2023-12-13 14:21:33,272:INFO:HuberRegressor()
2023-12-13 14:21:33,272:INFO:compare_models() successfully completed......................................
2023-12-13 14:21:33,303:INFO:Initializing create_model()
2023-12-13 14:21:33,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:33,303:INFO:Checking exceptions
2023-12-13 14:21:33,307:INFO:Importing libraries
2023-12-13 14:21:33,307:INFO:Copying training dataset
2023-12-13 14:21:33,318:INFO:Defining folds
2023-12-13 14:21:33,318:INFO:Declaring metric variables
2023-12-13 14:21:33,321:INFO:Importing untrained model
2023-12-13 14:21:33,324:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:21:33,329:INFO:Starting cross validation
2023-12-13 14:21:33,329:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:34,115:INFO:Calculating mean and std
2023-12-13 14:21:34,115:INFO:Creating metrics dataframe
2023-12-13 14:21:34,120:INFO:Finalizing model
2023-12-13 14:21:34,284:INFO:Uploading results into container
2023-12-13 14:21:34,285:INFO:Uploading model into container now
2023-12-13 14:21:34,296:INFO:_master_model_container: 19
2023-12-13 14:21:34,296:INFO:_display_container: 3
2023-12-13 14:21:34,297:INFO:RandomForestRegressor(n_jobs=-1, random_state=3131)
2023-12-13 14:21:34,297:INFO:create_model() successfully completed......................................
2023-12-13 14:21:34,404:INFO:Initializing tune_model()
2023-12-13 14:21:34,404:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3131), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:21:34,404:INFO:Checking exceptions
2023-12-13 14:21:34,419:INFO:Copying training dataset
2023-12-13 14:21:34,423:INFO:Checking base model
2023-12-13 14:21:34,424:INFO:Base model : Random Forest Regressor
2023-12-13 14:21:34,426:INFO:Declaring metric variables
2023-12-13 14:21:34,428:INFO:Defining Hyperparameters
2023-12-13 14:21:34,515:INFO:Tuning with n_jobs=-1
2023-12-13 14:21:34,515:INFO:Initializing RandomizedSearchCV
2023-12-13 14:21:48,919:INFO:best_params: {'actual_estimator__n_estimators': 210, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:21:48,919:INFO:Hyperparameter search completed
2023-12-13 14:21:48,921:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:48,921:INFO:Initializing create_model()
2023-12-13 14:21:48,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3131), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2AE3A910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 210, 'min_samples_split': 7, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-13 14:21:48,921:INFO:Checking exceptions
2023-12-13 14:21:48,921:INFO:Importing libraries
2023-12-13 14:21:48,921:INFO:Copying training dataset
2023-12-13 14:21:48,926:INFO:Defining folds
2023-12-13 14:21:48,926:INFO:Declaring metric variables
2023-12-13 14:21:48,926:INFO:Importing untrained model
2023-12-13 14:21:48,926:INFO:Declaring custom model
2023-12-13 14:21:48,931:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:21:48,931:INFO:Starting cross validation
2023-12-13 14:21:48,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:55,469:INFO:Calculating mean and std
2023-12-13 14:21:55,470:INFO:Creating metrics dataframe
2023-12-13 14:21:55,474:INFO:Finalizing model
2023-12-13 14:21:56,346:INFO:Uploading results into container
2023-12-13 14:21:56,346:INFO:Uploading model into container now
2023-12-13 14:21:56,347:INFO:_master_model_container: 20
2023-12-13 14:21:56,347:INFO:_display_container: 4
2023-12-13 14:21:56,347:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131)
2023-12-13 14:21:56,347:INFO:create_model() successfully completed......................................
2023-12-13 14:21:56,425:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:56,425:INFO:choose_better activated
2023-12-13 14:21:56,434:INFO:SubProcess create_model() called ==================================
2023-12-13 14:21:56,434:INFO:Initializing create_model()
2023-12-13 14:21:56,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3131), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:56,434:INFO:Checking exceptions
2023-12-13 14:21:56,434:INFO:Importing libraries
2023-12-13 14:21:56,434:INFO:Copying training dataset
2023-12-13 14:21:56,434:INFO:Defining folds
2023-12-13 14:21:56,434:INFO:Declaring metric variables
2023-12-13 14:21:56,434:INFO:Importing untrained model
2023-12-13 14:21:56,434:INFO:Declaring custom model
2023-12-13 14:21:56,434:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:21:56,434:INFO:Starting cross validation
2023-12-13 14:21:56,434:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:21:57,204:INFO:Calculating mean and std
2023-12-13 14:21:57,204:INFO:Creating metrics dataframe
2023-12-13 14:21:57,204:INFO:Finalizing model
2023-12-13 14:21:57,366:INFO:Uploading results into container
2023-12-13 14:21:57,366:INFO:Uploading model into container now
2023-12-13 14:21:57,366:INFO:_master_model_container: 21
2023-12-13 14:21:57,366:INFO:_display_container: 5
2023-12-13 14:21:57,366:INFO:RandomForestRegressor(n_jobs=-1, random_state=3131)
2023-12-13 14:21:57,366:INFO:create_model() successfully completed......................................
2023-12-13 14:21:57,442:INFO:SubProcess create_model() end ==================================
2023-12-13 14:21:57,442:INFO:RandomForestRegressor(n_jobs=-1, random_state=3131) result for R2 is 0.3513
2023-12-13 14:21:57,442:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131) result for R2 is 0.4942
2023-12-13 14:21:57,442:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131) is best model
2023-12-13 14:21:57,442:INFO:choose_better completed
2023-12-13 14:21:57,458:INFO:_master_model_container: 21
2023-12-13 14:21:57,458:INFO:_display_container: 4
2023-12-13 14:21:57,458:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131)
2023-12-13 14:21:57,458:INFO:tune_model() successfully completed......................................
2023-12-13 14:21:57,564:INFO:Initializing plot_model()
2023-12-13 14:21:57,564:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:21:57,564:INFO:Checking exceptions
2023-12-13 14:21:57,600:INFO:Preloading libraries
2023-12-13 14:21:57,609:INFO:Copying training dataset
2023-12-13 14:21:57,609:INFO:Plot type: residuals
2023-12-13 14:21:57,723:INFO:Fitting Model
2023-12-13 14:21:57,732:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:21:57,814:INFO:Scoring test/hold-out set
2023-12-13 14:21:58,247:INFO:Visual Rendered Successfully
2023-12-13 14:21:58,330:INFO:plot_model() successfully completed......................................
2023-12-13 14:21:58,348:INFO:Initializing plot_model()
2023-12-13 14:21:58,348:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:21:58,349:INFO:Checking exceptions
2023-12-13 14:21:58,371:INFO:Preloading libraries
2023-12-13 14:21:58,383:INFO:Copying training dataset
2023-12-13 14:21:58,383:INFO:Plot type: feature
2023-12-13 14:21:58,384:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:21:58,513:INFO:Visual Rendered Successfully
2023-12-13 14:21:58,602:INFO:plot_model() successfully completed......................................
2023-12-13 14:21:58,622:INFO:Initializing predict_model()
2023-12-13 14:21:58,622:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AFBACA0>)
2023-12-13 14:21:58,622:INFO:Checking exceptions
2023-12-13 14:21:58,622:INFO:Preloading libraries
2023-12-13 14:21:58,829:INFO:Initializing finalize_model()
2023-12-13 14:21:58,829:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:21:58,829:INFO:Finalizing RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131)
2023-12-13 14:21:58,831:INFO:Initializing create_model()
2023-12-13 14:21:58,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:21:58,831:INFO:Checking exceptions
2023-12-13 14:21:58,831:INFO:Importing libraries
2023-12-13 14:21:58,831:INFO:Copying training dataset
2023-12-13 14:21:58,831:INFO:Defining folds
2023-12-13 14:21:58,831:INFO:Declaring metric variables
2023-12-13 14:21:58,831:INFO:Importing untrained model
2023-12-13 14:21:58,831:INFO:Declaring custom model
2023-12-13 14:21:58,831:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:21:58,831:INFO:Cross validation set to False
2023-12-13 14:21:58,831:INFO:Fitting Model
2023-12-13 14:22:00,295:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))])
2023-12-13 14:22:00,295:INFO:create_model() successfully completed......................................
2023-12-13 14:22:00,373:INFO:_master_model_container: 21
2023-12-13 14:22:00,373:INFO:_display_container: 5
2023-12-13 14:22:00,381:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))])
2023-12-13 14:22:00,381:INFO:finalize_model() successfully completed......................................
2023-12-13 14:22:00,481:INFO:Initializing predict_model()
2023-12-13 14:22:00,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2ABB3CE0>)
2023-12-13 14:22:00,481:INFO:Checking exceptions
2023-12-13 14:22:00,481:INFO:Preloading libraries
2023-12-13 14:22:00,678:INFO:Initializing predict_model()
2023-12-13 14:22:00,678:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2ABB3240>)
2023-12-13 14:22:00,678:INFO:Checking exceptions
2023-12-13 14:22:00,678:INFO:Preloading libraries
2023-12-13 14:22:00,680:INFO:Set up data.
2023-12-13 14:22:00,686:INFO:Set up index.
2023-12-13 14:22:21,149:INFO:Initializing plot_model()
2023-12-13 14:22:21,149:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:22:21,149:INFO:Checking exceptions
2023-12-13 14:22:21,176:INFO:Preloading libraries
2023-12-13 14:22:21,185:INFO:Copying training dataset
2023-12-13 14:22:21,185:INFO:Plot type: feature
2023-12-13 14:22:21,186:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:22:21,315:INFO:Visual Rendered Successfully
2023-12-13 14:22:21,398:INFO:plot_model() successfully completed......................................
2023-12-13 14:22:24,060:INFO:Initializing predict_model()
2023-12-13 14:22:24,060:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2817C400>)
2023-12-13 14:22:24,060:INFO:Checking exceptions
2023-12-13 14:22:24,060:INFO:Preloading libraries
2023-12-13 14:22:27,654:INFO:Initializing finalize_model()
2023-12-13 14:22:27,654:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:22:27,654:INFO:Finalizing RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131)
2023-12-13 14:22:27,663:INFO:Initializing create_model()
2023-12-13 14:22:27,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=210, n_jobs=-1,
                      random_state=3131), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:27,663:INFO:Checking exceptions
2023-12-13 14:22:27,663:INFO:Importing libraries
2023-12-13 14:22:27,663:INFO:Copying training dataset
2023-12-13 14:22:27,663:INFO:Defining folds
2023-12-13 14:22:27,663:INFO:Declaring metric variables
2023-12-13 14:22:27,663:INFO:Importing untrained model
2023-12-13 14:22:27,663:INFO:Declaring custom model
2023-12-13 14:22:27,663:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:22:27,663:INFO:Cross validation set to False
2023-12-13 14:22:27,663:INFO:Fitting Model
2023-12-13 14:22:29,144:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))])
2023-12-13 14:22:29,144:INFO:create_model() successfully completed......................................
2023-12-13 14:22:29,219:INFO:_master_model_container: 21
2023-12-13 14:22:29,219:INFO:_display_container: 8
2023-12-13 14:22:29,219:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))])
2023-12-13 14:22:29,219:INFO:finalize_model() successfully completed......................................
2023-12-13 14:22:30,258:INFO:Initializing predict_model()
2023-12-13 14:22:30,258:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B6377FF60>)
2023-12-13 14:22:30,258:INFO:Checking exceptions
2023-12-13 14:22:30,258:INFO:Preloading libraries
2023-12-13 14:22:34,883:INFO:Initializing predict_model()
2023-12-13 14:22:34,883:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B28418C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=9,
                                       min_impurity_decrease=0,
                                       min_samples_leaf=6, min_samples_split=7,
                                       n_estimators=210, n_jobs=-1,
                                       random_state=3131))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AB5DA80>)
2023-12-13 14:22:34,883:INFO:Checking exceptions
2023-12-13 14:22:34,883:INFO:Preloading libraries
2023-12-13 14:22:34,883:INFO:Set up data.
2023-12-13 14:22:34,893:INFO:Set up index.
2023-12-13 14:22:48,570:INFO:PyCaret RegressionExperiment
2023-12-13 14:22:48,570:INFO:Logging name: reg-default-name
2023-12-13 14:22:48,570:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:22:48,570:INFO:version 3.2.0
2023-12-13 14:22:48,570:INFO:Initializing setup()
2023-12-13 14:22:48,570:INFO:self.USI: 0ee9
2023-12-13 14:22:48,570:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:22:48,570:INFO:Checking environment
2023-12-13 14:22:48,570:INFO:python_version: 3.11.0
2023-12-13 14:22:48,570:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:22:48,570:INFO:machine: AMD64
2023-12-13 14:22:48,570:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:22:48,580:INFO:Memory: svmem(total=14877257728, available=1832816640, percent=87.7, used=13044441088, free=1832816640)
2023-12-13 14:22:48,581:INFO:Physical Core: 8
2023-12-13 14:22:48,581:INFO:Logical Core: 16
2023-12-13 14:22:48,581:INFO:Checking libraries
2023-12-13 14:22:48,581:INFO:System:
2023-12-13 14:22:48,581:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:22:48,581:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:22:48,581:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:22:48,581:INFO:PyCaret required dependencies:
2023-12-13 14:22:48,581:INFO:                 pip: 23.3.1
2023-12-13 14:22:48,581:INFO:          setuptools: 65.5.0
2023-12-13 14:22:48,581:INFO:             pycaret: 3.2.0
2023-12-13 14:22:48,581:INFO:             IPython: 8.18.1
2023-12-13 14:22:48,581:INFO:          ipywidgets: 8.1.1
2023-12-13 14:22:48,581:INFO:                tqdm: 4.66.1
2023-12-13 14:22:48,581:INFO:               numpy: 1.25.2
2023-12-13 14:22:48,581:INFO:              pandas: 2.1.4
2023-12-13 14:22:48,581:INFO:              jinja2: 3.1.2
2023-12-13 14:22:48,581:INFO:               scipy: 1.10.1
2023-12-13 14:22:48,581:INFO:              joblib: 1.3.2
2023-12-13 14:22:48,581:INFO:             sklearn: 1.2.2
2023-12-13 14:22:48,581:INFO:                pyod: 1.1.2
2023-12-13 14:22:48,581:INFO:            imblearn: 0.11.0
2023-12-13 14:22:48,581:INFO:   category_encoders: 2.6.3
2023-12-13 14:22:48,581:INFO:            lightgbm: 4.1.0
2023-12-13 14:22:48,581:INFO:               numba: 0.58.1
2023-12-13 14:22:48,581:INFO:            requests: 2.31.0
2023-12-13 14:22:48,581:INFO:          matplotlib: 3.6.0
2023-12-13 14:22:48,581:INFO:          scikitplot: 0.3.7
2023-12-13 14:22:48,581:INFO:         yellowbrick: 1.5
2023-12-13 14:22:48,581:INFO:              plotly: 5.18.0
2023-12-13 14:22:48,581:INFO:    plotly-resampler: Not installed
2023-12-13 14:22:48,582:INFO:             kaleido: 0.2.1
2023-12-13 14:22:48,582:INFO:           schemdraw: 0.15
2023-12-13 14:22:48,582:INFO:         statsmodels: 0.14.0
2023-12-13 14:22:48,582:INFO:              sktime: 0.21.1
2023-12-13 14:22:48,582:INFO:               tbats: 1.1.3
2023-12-13 14:22:48,582:INFO:            pmdarima: 2.0.4
2023-12-13 14:22:48,582:INFO:              psutil: 5.9.6
2023-12-13 14:22:48,582:INFO:          markupsafe: 2.1.3
2023-12-13 14:22:48,582:INFO:             pickle5: Not installed
2023-12-13 14:22:48,582:INFO:         cloudpickle: 3.0.0
2023-12-13 14:22:48,582:INFO:         deprecation: 2.1.0
2023-12-13 14:22:48,582:INFO:              xxhash: 3.4.1
2023-12-13 14:22:48,582:INFO:           wurlitzer: Not installed
2023-12-13 14:22:48,582:INFO:PyCaret optional dependencies:
2023-12-13 14:22:48,582:INFO:                shap: Not installed
2023-12-13 14:22:48,582:INFO:           interpret: Not installed
2023-12-13 14:22:48,582:INFO:                umap: Not installed
2023-12-13 14:22:48,582:INFO:     ydata_profiling: Not installed
2023-12-13 14:22:48,582:INFO:  explainerdashboard: Not installed
2023-12-13 14:22:48,582:INFO:             autoviz: Not installed
2023-12-13 14:22:48,582:INFO:           fairlearn: Not installed
2023-12-13 14:22:48,582:INFO:          deepchecks: Not installed
2023-12-13 14:22:48,582:INFO:             xgboost: Not installed
2023-12-13 14:22:48,582:INFO:            catboost: Not installed
2023-12-13 14:22:48,582:INFO:              kmodes: Not installed
2023-12-13 14:22:48,582:INFO:             mlxtend: Not installed
2023-12-13 14:22:48,582:INFO:       statsforecast: Not installed
2023-12-13 14:22:48,582:INFO:        tune_sklearn: Not installed
2023-12-13 14:22:48,582:INFO:                 ray: Not installed
2023-12-13 14:22:48,582:INFO:            hyperopt: Not installed
2023-12-13 14:22:48,582:INFO:              optuna: Not installed
2023-12-13 14:22:48,582:INFO:               skopt: Not installed
2023-12-13 14:22:48,582:INFO:              mlflow: Not installed
2023-12-13 14:22:48,582:INFO:              gradio: Not installed
2023-12-13 14:22:48,582:INFO:             fastapi: Not installed
2023-12-13 14:22:48,582:INFO:             uvicorn: Not installed
2023-12-13 14:22:48,583:INFO:              m2cgen: Not installed
2023-12-13 14:22:48,583:INFO:           evidently: Not installed
2023-12-13 14:22:48,583:INFO:               fugue: Not installed
2023-12-13 14:22:48,583:INFO:           streamlit: Not installed
2023-12-13 14:22:48,583:INFO:             prophet: Not installed
2023-12-13 14:22:48,583:INFO:None
2023-12-13 14:22:48,583:INFO:Set up data.
2023-12-13 14:22:48,588:INFO:Set up folding strategy.
2023-12-13 14:22:48,588:INFO:Set up train/test split.
2023-12-13 14:22:48,592:INFO:Set up index.
2023-12-13 14:22:48,592:INFO:Assigning column types.
2023-12-13 14:22:48,596:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:22:48,596:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,600:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,604:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,634:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,677:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,677:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,685:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,689:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,734:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,768:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,769:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:22:48,773:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,775:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,856:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,860:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,864:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,910:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,945:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:48,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:48,946:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:22:48,953:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,042:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,094:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,128:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,128:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:22:49,183:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,272:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,309:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:22:49,362:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,453:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:22:49,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,483:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:22:49,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,666:INFO:Preparing preprocessing pipeline...
2023-12-13 14:22:49,666:INFO:Set up simple imputation.
2023-12-13 14:22:49,666:INFO:Set up column name cleaning.
2023-12-13 14:22:49,690:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:22:49,692:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:22:49,692:INFO:Creating final display dataframe.
2023-12-13 14:22:49,759:INFO:Setup _display_container:                     Description             Value
0                    Session id              8407
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 19)
4        Transformed data shape        (1555, 19)
5   Transformed train set shape        (1088, 19)
6    Transformed test set shape         (467, 19)
7              Numeric features                18
8      Rows with missing values             98.7%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              0ee9
2023-12-13 14:22:49,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:22:49,948:INFO:setup() successfully completed in 1.38s...............
2023-12-13 14:22:54,748:INFO:Initializing compare_models()
2023-12-13 14:22:54,748:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:22:54,748:INFO:Checking exceptions
2023-12-13 14:22:54,756:INFO:Preparing display monitor
2023-12-13 14:22:54,772:INFO:Initializing Linear Regression
2023-12-13 14:22:54,772:INFO:Total runtime is 0.0 minutes
2023-12-13 14:22:54,775:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:54,775:INFO:Initializing create_model()
2023-12-13 14:22:54,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:54,775:INFO:Checking exceptions
2023-12-13 14:22:54,775:INFO:Importing libraries
2023-12-13 14:22:54,775:INFO:Copying training dataset
2023-12-13 14:22:54,779:INFO:Defining folds
2023-12-13 14:22:54,779:INFO:Declaring metric variables
2023-12-13 14:22:54,783:INFO:Importing untrained model
2023-12-13 14:22:54,786:INFO:Linear Regression Imported successfully
2023-12-13 14:22:54,791:INFO:Starting cross validation
2023-12-13 14:22:54,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:54,854:INFO:Calculating mean and std
2023-12-13 14:22:54,854:INFO:Creating metrics dataframe
2023-12-13 14:22:54,856:INFO:Uploading results into container
2023-12-13 14:22:54,856:INFO:Uploading model into container now
2023-12-13 14:22:54,856:INFO:_master_model_container: 1
2023-12-13 14:22:54,856:INFO:_display_container: 2
2023-12-13 14:22:54,856:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:22:54,857:INFO:create_model() successfully completed......................................
2023-12-13 14:22:54,931:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:54,931:INFO:Creating metrics dataframe
2023-12-13 14:22:54,942:INFO:Initializing Lasso Regression
2023-12-13 14:22:54,942:INFO:Total runtime is 0.002835694948832194 minutes
2023-12-13 14:22:54,944:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:54,945:INFO:Initializing create_model()
2023-12-13 14:22:54,945:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:54,945:INFO:Checking exceptions
2023-12-13 14:22:54,945:INFO:Importing libraries
2023-12-13 14:22:54,945:INFO:Copying training dataset
2023-12-13 14:22:54,949:INFO:Defining folds
2023-12-13 14:22:54,949:INFO:Declaring metric variables
2023-12-13 14:22:54,951:INFO:Importing untrained model
2023-12-13 14:22:54,951:INFO:Lasso Regression Imported successfully
2023-12-13 14:22:54,959:INFO:Starting cross validation
2023-12-13 14:22:54,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:55,020:INFO:Calculating mean and std
2023-12-13 14:22:55,020:INFO:Creating metrics dataframe
2023-12-13 14:22:55,022:INFO:Uploading results into container
2023-12-13 14:22:55,022:INFO:Uploading model into container now
2023-12-13 14:22:55,022:INFO:_master_model_container: 2
2023-12-13 14:22:55,022:INFO:_display_container: 2
2023-12-13 14:22:55,023:INFO:Lasso(random_state=8407)
2023-12-13 14:22:55,023:INFO:create_model() successfully completed......................................
2023-12-13 14:22:55,102:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:55,102:INFO:Creating metrics dataframe
2023-12-13 14:22:55,105:INFO:Initializing Ridge Regression
2023-12-13 14:22:55,105:INFO:Total runtime is 0.005559082825978597 minutes
2023-12-13 14:22:55,105:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:55,105:INFO:Initializing create_model()
2023-12-13 14:22:55,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:55,105:INFO:Checking exceptions
2023-12-13 14:22:55,105:INFO:Importing libraries
2023-12-13 14:22:55,105:INFO:Copying training dataset
2023-12-13 14:22:55,105:INFO:Defining folds
2023-12-13 14:22:55,114:INFO:Declaring metric variables
2023-12-13 14:22:55,116:INFO:Importing untrained model
2023-12-13 14:22:55,118:INFO:Ridge Regression Imported successfully
2023-12-13 14:22:55,126:INFO:Starting cross validation
2023-12-13 14:22:55,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:55,193:INFO:Calculating mean and std
2023-12-13 14:22:55,193:INFO:Creating metrics dataframe
2023-12-13 14:22:55,195:INFO:Uploading results into container
2023-12-13 14:22:55,195:INFO:Uploading model into container now
2023-12-13 14:22:55,195:INFO:_master_model_container: 3
2023-12-13 14:22:55,195:INFO:_display_container: 2
2023-12-13 14:22:55,196:INFO:Ridge(random_state=8407)
2023-12-13 14:22:55,196:INFO:create_model() successfully completed......................................
2023-12-13 14:22:55,274:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:55,274:INFO:Creating metrics dataframe
2023-12-13 14:22:55,279:INFO:Initializing Elastic Net
2023-12-13 14:22:55,279:INFO:Total runtime is 0.008456857999165852 minutes
2023-12-13 14:22:55,282:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:55,282:INFO:Initializing create_model()
2023-12-13 14:22:55,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:55,282:INFO:Checking exceptions
2023-12-13 14:22:55,282:INFO:Importing libraries
2023-12-13 14:22:55,282:INFO:Copying training dataset
2023-12-13 14:22:55,286:INFO:Defining folds
2023-12-13 14:22:55,286:INFO:Declaring metric variables
2023-12-13 14:22:55,288:INFO:Importing untrained model
2023-12-13 14:22:55,290:INFO:Elastic Net Imported successfully
2023-12-13 14:22:55,295:INFO:Starting cross validation
2023-12-13 14:22:55,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:55,356:INFO:Calculating mean and std
2023-12-13 14:22:55,356:INFO:Creating metrics dataframe
2023-12-13 14:22:55,356:INFO:Uploading results into container
2023-12-13 14:22:55,356:INFO:Uploading model into container now
2023-12-13 14:22:55,356:INFO:_master_model_container: 4
2023-12-13 14:22:55,356:INFO:_display_container: 2
2023-12-13 14:22:55,356:INFO:ElasticNet(random_state=8407)
2023-12-13 14:22:55,356:INFO:create_model() successfully completed......................................
2023-12-13 14:22:55,439:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:55,439:INFO:Creating metrics dataframe
2023-12-13 14:22:55,439:INFO:Initializing Least Angle Regression
2023-12-13 14:22:55,439:INFO:Total runtime is 0.01111458937327067 minutes
2023-12-13 14:22:55,449:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:55,449:INFO:Initializing create_model()
2023-12-13 14:22:55,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:55,449:INFO:Checking exceptions
2023-12-13 14:22:55,449:INFO:Importing libraries
2023-12-13 14:22:55,449:INFO:Copying training dataset
2023-12-13 14:22:55,450:INFO:Defining folds
2023-12-13 14:22:55,450:INFO:Declaring metric variables
2023-12-13 14:22:55,455:INFO:Importing untrained model
2023-12-13 14:22:55,455:INFO:Least Angle Regression Imported successfully
2023-12-13 14:22:55,463:INFO:Starting cross validation
2023-12-13 14:22:55,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:55,524:INFO:Calculating mean and std
2023-12-13 14:22:55,524:INFO:Creating metrics dataframe
2023-12-13 14:22:55,524:INFO:Uploading results into container
2023-12-13 14:22:55,524:INFO:Uploading model into container now
2023-12-13 14:22:55,524:INFO:_master_model_container: 5
2023-12-13 14:22:55,524:INFO:_display_container: 2
2023-12-13 14:22:55,524:INFO:Lars(random_state=8407)
2023-12-13 14:22:55,524:INFO:create_model() successfully completed......................................
2023-12-13 14:22:55,605:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:55,605:INFO:Creating metrics dataframe
2023-12-13 14:22:55,613:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:22:55,613:INFO:Total runtime is 0.014027003447214761 minutes
2023-12-13 14:22:55,613:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:55,613:INFO:Initializing create_model()
2023-12-13 14:22:55,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:55,613:INFO:Checking exceptions
2023-12-13 14:22:55,613:INFO:Importing libraries
2023-12-13 14:22:55,613:INFO:Copying training dataset
2023-12-13 14:22:55,613:INFO:Defining folds
2023-12-13 14:22:55,613:INFO:Declaring metric variables
2023-12-13 14:22:55,622:INFO:Importing untrained model
2023-12-13 14:22:55,622:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:22:55,629:INFO:Starting cross validation
2023-12-13 14:22:55,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:55,689:INFO:Calculating mean and std
2023-12-13 14:22:55,689:INFO:Creating metrics dataframe
2023-12-13 14:22:55,689:INFO:Uploading results into container
2023-12-13 14:22:55,689:INFO:Uploading model into container now
2023-12-13 14:22:55,689:INFO:_master_model_container: 6
2023-12-13 14:22:55,689:INFO:_display_container: 2
2023-12-13 14:22:55,689:INFO:LassoLars(random_state=8407)
2023-12-13 14:22:55,689:INFO:create_model() successfully completed......................................
2023-12-13 14:22:55,774:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:55,774:INFO:Creating metrics dataframe
2023-12-13 14:22:55,780:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:22:55,780:INFO:Total runtime is 0.01680691639582316 minutes
2023-12-13 14:22:55,783:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:55,783:INFO:Initializing create_model()
2023-12-13 14:22:55,783:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:55,783:INFO:Checking exceptions
2023-12-13 14:22:55,783:INFO:Importing libraries
2023-12-13 14:22:55,783:INFO:Copying training dataset
2023-12-13 14:22:55,788:INFO:Defining folds
2023-12-13 14:22:55,788:INFO:Declaring metric variables
2023-12-13 14:22:55,791:INFO:Importing untrained model
2023-12-13 14:22:55,794:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:22:55,800:INFO:Starting cross validation
2023-12-13 14:22:55,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:55,864:INFO:Calculating mean and std
2023-12-13 14:22:55,865:INFO:Creating metrics dataframe
2023-12-13 14:22:55,865:INFO:Uploading results into container
2023-12-13 14:22:55,867:INFO:Uploading model into container now
2023-12-13 14:22:55,867:INFO:_master_model_container: 7
2023-12-13 14:22:55,867:INFO:_display_container: 2
2023-12-13 14:22:55,867:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:22:55,867:INFO:create_model() successfully completed......................................
2023-12-13 14:22:55,955:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:55,955:INFO:Creating metrics dataframe
2023-12-13 14:22:55,963:INFO:Initializing Bayesian Ridge
2023-12-13 14:22:55,963:INFO:Total runtime is 0.019856862227121987 minutes
2023-12-13 14:22:55,964:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:55,964:INFO:Initializing create_model()
2023-12-13 14:22:55,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:55,967:INFO:Checking exceptions
2023-12-13 14:22:55,967:INFO:Importing libraries
2023-12-13 14:22:55,967:INFO:Copying training dataset
2023-12-13 14:22:55,972:INFO:Defining folds
2023-12-13 14:22:55,972:INFO:Declaring metric variables
2023-12-13 14:22:55,972:INFO:Importing untrained model
2023-12-13 14:22:55,972:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:22:55,982:INFO:Starting cross validation
2023-12-13 14:22:55,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:56,046:INFO:Calculating mean and std
2023-12-13 14:22:56,046:INFO:Creating metrics dataframe
2023-12-13 14:22:56,046:INFO:Uploading results into container
2023-12-13 14:22:56,046:INFO:Uploading model into container now
2023-12-13 14:22:56,046:INFO:_master_model_container: 8
2023-12-13 14:22:56,046:INFO:_display_container: 2
2023-12-13 14:22:56,046:INFO:BayesianRidge()
2023-12-13 14:22:56,046:INFO:create_model() successfully completed......................................
2023-12-13 14:22:56,138:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:56,138:INFO:Creating metrics dataframe
2023-12-13 14:22:56,147:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:22:56,147:INFO:Total runtime is 0.02291393280029297 minutes
2023-12-13 14:22:56,147:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:56,147:INFO:Initializing create_model()
2023-12-13 14:22:56,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:56,147:INFO:Checking exceptions
2023-12-13 14:22:56,147:INFO:Importing libraries
2023-12-13 14:22:56,147:INFO:Copying training dataset
2023-12-13 14:22:56,154:INFO:Defining folds
2023-12-13 14:22:56,154:INFO:Declaring metric variables
2023-12-13 14:22:56,154:INFO:Importing untrained model
2023-12-13 14:22:56,162:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:22:56,167:INFO:Starting cross validation
2023-12-13 14:22:56,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:56,232:INFO:Calculating mean and std
2023-12-13 14:22:56,232:INFO:Creating metrics dataframe
2023-12-13 14:22:56,232:INFO:Uploading results into container
2023-12-13 14:22:56,232:INFO:Uploading model into container now
2023-12-13 14:22:56,232:INFO:_master_model_container: 9
2023-12-13 14:22:56,232:INFO:_display_container: 2
2023-12-13 14:22:56,232:INFO:PassiveAggressiveRegressor(random_state=8407)
2023-12-13 14:22:56,232:INFO:create_model() successfully completed......................................
2023-12-13 14:22:56,329:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:56,329:INFO:Creating metrics dataframe
2023-12-13 14:22:56,330:INFO:Initializing Huber Regressor
2023-12-13 14:22:56,330:INFO:Total runtime is 0.025966334342956542 minutes
2023-12-13 14:22:56,339:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:56,339:INFO:Initializing create_model()
2023-12-13 14:22:56,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:56,340:INFO:Checking exceptions
2023-12-13 14:22:56,340:INFO:Importing libraries
2023-12-13 14:22:56,340:INFO:Copying training dataset
2023-12-13 14:22:56,342:INFO:Defining folds
2023-12-13 14:22:56,342:INFO:Declaring metric variables
2023-12-13 14:22:56,347:INFO:Importing untrained model
2023-12-13 14:22:56,347:INFO:Huber Regressor Imported successfully
2023-12-13 14:22:56,355:INFO:Starting cross validation
2023-12-13 14:22:56,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:56,425:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,426:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,434:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,436:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,439:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,457:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,459:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,459:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,462:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:22:56,474:INFO:Calculating mean and std
2023-12-13 14:22:56,474:INFO:Creating metrics dataframe
2023-12-13 14:22:56,476:INFO:Uploading results into container
2023-12-13 14:22:56,476:INFO:Uploading model into container now
2023-12-13 14:22:56,476:INFO:_master_model_container: 10
2023-12-13 14:22:56,476:INFO:_display_container: 2
2023-12-13 14:22:56,478:INFO:HuberRegressor()
2023-12-13 14:22:56,478:INFO:create_model() successfully completed......................................
2023-12-13 14:22:56,567:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:56,567:INFO:Creating metrics dataframe
2023-12-13 14:22:56,574:INFO:Initializing K Neighbors Regressor
2023-12-13 14:22:56,574:INFO:Total runtime is 0.03004410266876221 minutes
2023-12-13 14:22:56,577:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:56,577:INFO:Initializing create_model()
2023-12-13 14:22:56,578:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:56,578:INFO:Checking exceptions
2023-12-13 14:22:56,578:INFO:Importing libraries
2023-12-13 14:22:56,578:INFO:Copying training dataset
2023-12-13 14:22:56,582:INFO:Defining folds
2023-12-13 14:22:56,582:INFO:Declaring metric variables
2023-12-13 14:22:56,585:INFO:Importing untrained model
2023-12-13 14:22:56,587:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:22:56,587:INFO:Starting cross validation
2023-12-13 14:22:56,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:56,824:INFO:Calculating mean and std
2023-12-13 14:22:56,824:INFO:Creating metrics dataframe
2023-12-13 14:22:56,824:INFO:Uploading results into container
2023-12-13 14:22:56,828:INFO:Uploading model into container now
2023-12-13 14:22:56,829:INFO:_master_model_container: 11
2023-12-13 14:22:56,829:INFO:_display_container: 2
2023-12-13 14:22:56,829:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:22:56,829:INFO:create_model() successfully completed......................................
2023-12-13 14:22:56,920:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:56,920:INFO:Creating metrics dataframe
2023-12-13 14:22:56,928:INFO:Initializing Decision Tree Regressor
2023-12-13 14:22:56,928:INFO:Total runtime is 0.03593969742457072 minutes
2023-12-13 14:22:56,931:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:56,931:INFO:Initializing create_model()
2023-12-13 14:22:56,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:56,931:INFO:Checking exceptions
2023-12-13 14:22:56,931:INFO:Importing libraries
2023-12-13 14:22:56,931:INFO:Copying training dataset
2023-12-13 14:22:56,936:INFO:Defining folds
2023-12-13 14:22:56,936:INFO:Declaring metric variables
2023-12-13 14:22:56,938:INFO:Importing untrained model
2023-12-13 14:22:56,938:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:22:56,946:INFO:Starting cross validation
2023-12-13 14:22:56,947:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:57,017:INFO:Calculating mean and std
2023-12-13 14:22:57,017:INFO:Creating metrics dataframe
2023-12-13 14:22:57,019:INFO:Uploading results into container
2023-12-13 14:22:57,019:INFO:Uploading model into container now
2023-12-13 14:22:57,020:INFO:_master_model_container: 12
2023-12-13 14:22:57,020:INFO:_display_container: 2
2023-12-13 14:22:57,020:INFO:DecisionTreeRegressor(random_state=8407)
2023-12-13 14:22:57,020:INFO:create_model() successfully completed......................................
2023-12-13 14:22:57,111:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:57,111:INFO:Creating metrics dataframe
2023-12-13 14:22:57,118:INFO:Initializing Random Forest Regressor
2023-12-13 14:22:57,118:INFO:Total runtime is 0.03911199967066447 minutes
2023-12-13 14:22:57,120:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:57,120:INFO:Initializing create_model()
2023-12-13 14:22:57,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:57,120:INFO:Checking exceptions
2023-12-13 14:22:57,120:INFO:Importing libraries
2023-12-13 14:22:57,120:INFO:Copying training dataset
2023-12-13 14:22:57,127:INFO:Defining folds
2023-12-13 14:22:57,127:INFO:Declaring metric variables
2023-12-13 14:22:57,128:INFO:Importing untrained model
2023-12-13 14:22:57,128:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:22:57,138:INFO:Starting cross validation
2023-12-13 14:22:57,139:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:57,943:INFO:Calculating mean and std
2023-12-13 14:22:57,943:INFO:Creating metrics dataframe
2023-12-13 14:22:57,946:INFO:Uploading results into container
2023-12-13 14:22:57,946:INFO:Uploading model into container now
2023-12-13 14:22:57,946:INFO:_master_model_container: 13
2023-12-13 14:22:57,947:INFO:_display_container: 2
2023-12-13 14:22:57,947:INFO:RandomForestRegressor(n_jobs=-1, random_state=8407)
2023-12-13 14:22:57,947:INFO:create_model() successfully completed......................................
2023-12-13 14:22:58,026:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:58,026:INFO:Creating metrics dataframe
2023-12-13 14:22:58,035:INFO:Initializing Extra Trees Regressor
2023-12-13 14:22:58,035:INFO:Total runtime is 0.054380544026692706 minutes
2023-12-13 14:22:58,035:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:58,035:INFO:Initializing create_model()
2023-12-13 14:22:58,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:58,035:INFO:Checking exceptions
2023-12-13 14:22:58,035:INFO:Importing libraries
2023-12-13 14:22:58,035:INFO:Copying training dataset
2023-12-13 14:22:58,047:INFO:Defining folds
2023-12-13 14:22:58,047:INFO:Declaring metric variables
2023-12-13 14:22:58,050:INFO:Importing untrained model
2023-12-13 14:22:58,052:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:22:58,052:INFO:Starting cross validation
2023-12-13 14:22:58,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:58,606:INFO:Calculating mean and std
2023-12-13 14:22:58,606:INFO:Creating metrics dataframe
2023-12-13 14:22:58,609:INFO:Uploading results into container
2023-12-13 14:22:58,609:INFO:Uploading model into container now
2023-12-13 14:22:58,609:INFO:_master_model_container: 14
2023-12-13 14:22:58,609:INFO:_display_container: 2
2023-12-13 14:22:58,609:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8407)
2023-12-13 14:22:58,609:INFO:create_model() successfully completed......................................
2023-12-13 14:22:58,700:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:58,700:INFO:Creating metrics dataframe
2023-12-13 14:22:58,708:INFO:Initializing AdaBoost Regressor
2023-12-13 14:22:58,708:INFO:Total runtime is 0.06560883919397989 minutes
2023-12-13 14:22:58,708:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:58,708:INFO:Initializing create_model()
2023-12-13 14:22:58,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:58,708:INFO:Checking exceptions
2023-12-13 14:22:58,708:INFO:Importing libraries
2023-12-13 14:22:58,708:INFO:Copying training dataset
2023-12-13 14:22:58,717:INFO:Defining folds
2023-12-13 14:22:58,717:INFO:Declaring metric variables
2023-12-13 14:22:58,717:INFO:Importing untrained model
2023-12-13 14:22:58,717:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:22:58,729:INFO:Starting cross validation
2023-12-13 14:22:58,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:58,927:INFO:Calculating mean and std
2023-12-13 14:22:58,927:INFO:Creating metrics dataframe
2023-12-13 14:22:58,927:INFO:Uploading results into container
2023-12-13 14:22:58,927:INFO:Uploading model into container now
2023-12-13 14:22:58,927:INFO:_master_model_container: 15
2023-12-13 14:22:58,927:INFO:_display_container: 2
2023-12-13 14:22:58,927:INFO:AdaBoostRegressor(random_state=8407)
2023-12-13 14:22:58,927:INFO:create_model() successfully completed......................................
2023-12-13 14:22:59,024:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:59,024:INFO:Creating metrics dataframe
2023-12-13 14:22:59,033:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:22:59,033:INFO:Total runtime is 0.0710137923558553 minutes
2023-12-13 14:22:59,033:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:59,033:INFO:Initializing create_model()
2023-12-13 14:22:59,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:59,033:INFO:Checking exceptions
2023-12-13 14:22:59,033:INFO:Importing libraries
2023-12-13 14:22:59,033:INFO:Copying training dataset
2023-12-13 14:22:59,040:INFO:Defining folds
2023-12-13 14:22:59,040:INFO:Declaring metric variables
2023-12-13 14:22:59,043:INFO:Importing untrained model
2023-12-13 14:22:59,046:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:22:59,051:INFO:Starting cross validation
2023-12-13 14:22:59,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:22:59,341:INFO:Calculating mean and std
2023-12-13 14:22:59,341:INFO:Creating metrics dataframe
2023-12-13 14:22:59,341:INFO:Uploading results into container
2023-12-13 14:22:59,341:INFO:Uploading model into container now
2023-12-13 14:22:59,341:INFO:_master_model_container: 16
2023-12-13 14:22:59,341:INFO:_display_container: 2
2023-12-13 14:22:59,341:INFO:GradientBoostingRegressor(random_state=8407)
2023-12-13 14:22:59,341:INFO:create_model() successfully completed......................................
2023-12-13 14:22:59,432:INFO:SubProcess create_model() end ==================================
2023-12-13 14:22:59,432:INFO:Creating metrics dataframe
2023-12-13 14:22:59,440:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:22:59,440:INFO:Total runtime is 0.07780734697977701 minutes
2023-12-13 14:22:59,440:INFO:SubProcess create_model() called ==================================
2023-12-13 14:22:59,440:INFO:Initializing create_model()
2023-12-13 14:22:59,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:22:59,440:INFO:Checking exceptions
2023-12-13 14:22:59,440:INFO:Importing libraries
2023-12-13 14:22:59,440:INFO:Copying training dataset
2023-12-13 14:22:59,449:INFO:Defining folds
2023-12-13 14:22:59,449:INFO:Declaring metric variables
2023-12-13 14:22:59,453:INFO:Importing untrained model
2023-12-13 14:22:59,453:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:22:59,458:INFO:Starting cross validation
2023-12-13 14:22:59,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:23:00,407:INFO:Calculating mean and std
2023-12-13 14:23:00,407:INFO:Creating metrics dataframe
2023-12-13 14:23:00,413:INFO:Uploading results into container
2023-12-13 14:23:00,413:INFO:Uploading model into container now
2023-12-13 14:23:00,414:INFO:_master_model_container: 17
2023-12-13 14:23:00,414:INFO:_display_container: 2
2023-12-13 14:23:00,414:INFO:LGBMRegressor(n_jobs=-1, random_state=8407)
2023-12-13 14:23:00,414:INFO:create_model() successfully completed......................................
2023-12-13 14:23:00,522:INFO:SubProcess create_model() end ==================================
2023-12-13 14:23:00,522:INFO:Creating metrics dataframe
2023-12-13 14:23:00,530:INFO:Initializing Dummy Regressor
2023-12-13 14:23:00,530:INFO:Total runtime is 0.09596847295761107 minutes
2023-12-13 14:23:00,530:INFO:SubProcess create_model() called ==================================
2023-12-13 14:23:00,530:INFO:Initializing create_model()
2023-12-13 14:23:00,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28418C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:23:00,530:INFO:Checking exceptions
2023-12-13 14:23:00,530:INFO:Importing libraries
2023-12-13 14:23:00,530:INFO:Copying training dataset
2023-12-13 14:23:00,538:INFO:Defining folds
2023-12-13 14:23:00,538:INFO:Declaring metric variables
2023-12-13 14:23:00,541:INFO:Importing untrained model
2023-12-13 14:23:00,541:INFO:Dummy Regressor Imported successfully
2023-12-13 14:23:00,549:INFO:Starting cross validation
2023-12-13 14:23:00,550:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:23:00,610:INFO:Calculating mean and std
2023-12-13 14:23:00,610:INFO:Creating metrics dataframe
2023-12-13 14:23:00,610:INFO:Uploading results into container
2023-12-13 14:23:00,610:INFO:Uploading model into container now
2023-12-13 14:23:00,612:INFO:_master_model_container: 18
2023-12-13 14:23:00,612:INFO:_display_container: 2
2023-12-13 14:23:00,612:INFO:DummyRegressor()
2023-12-13 14:23:00,612:INFO:create_model() successfully completed......................................
2023-12-13 14:23:00,688:INFO:SubProcess create_model() end ==================================
2023-12-13 14:23:00,688:INFO:Creating metrics dataframe
2023-12-13 14:23:00,696:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:23:00,708:INFO:Initializing create_model()
2023-12-13 14:23:00,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:23:00,708:INFO:Checking exceptions
2023-12-13 14:23:00,713:INFO:Importing libraries
2023-12-13 14:23:00,713:INFO:Copying training dataset
2023-12-13 14:23:00,715:INFO:Defining folds
2023-12-13 14:23:00,715:INFO:Declaring metric variables
2023-12-13 14:23:00,721:INFO:Importing untrained model
2023-12-13 14:23:00,721:INFO:Declaring custom model
2023-12-13 14:23:00,721:INFO:Huber Regressor Imported successfully
2023-12-13 14:23:00,722:INFO:Cross validation set to False
2023-12-13 14:23:00,722:INFO:Fitting Model
2023-12-13 14:23:00,796:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:23:00,796:INFO:HuberRegressor()
2023-12-13 14:23:00,796:INFO:create_model() successfully completed......................................
2023-12-13 14:23:00,902:INFO:_master_model_container: 18
2023-12-13 14:23:00,902:INFO:_display_container: 2
2023-12-13 14:23:00,902:INFO:HuberRegressor()
2023-12-13 14:23:00,902:INFO:compare_models() successfully completed......................................
2023-12-13 14:23:10,828:INFO:Initializing create_model()
2023-12-13 14:23:10,828:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:23:10,828:INFO:Checking exceptions
2023-12-13 14:23:10,844:INFO:Importing libraries
2023-12-13 14:23:10,844:INFO:Copying training dataset
2023-12-13 14:23:10,848:INFO:Defining folds
2023-12-13 14:23:10,848:INFO:Declaring metric variables
2023-12-13 14:23:10,851:INFO:Importing untrained model
2023-12-13 14:23:10,854:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:23:10,860:INFO:Starting cross validation
2023-12-13 14:23:10,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:23:11,632:INFO:Calculating mean and std
2023-12-13 14:23:11,632:INFO:Creating metrics dataframe
2023-12-13 14:23:11,636:INFO:Finalizing model
2023-12-13 14:23:11,810:INFO:Uploading results into container
2023-12-13 14:23:11,810:INFO:Uploading model into container now
2023-12-13 14:23:11,819:INFO:_master_model_container: 19
2023-12-13 14:23:11,819:INFO:_display_container: 3
2023-12-13 14:23:11,819:INFO:RandomForestRegressor(n_jobs=-1, random_state=8407)
2023-12-13 14:23:11,819:INFO:create_model() successfully completed......................................
2023-12-13 14:23:21,105:INFO:Initializing tune_model()
2023-12-13 14:23:21,105:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8407), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:23:21,105:INFO:Checking exceptions
2023-12-13 14:23:21,119:INFO:Copying training dataset
2023-12-13 14:23:21,119:INFO:Checking base model
2023-12-13 14:23:21,119:INFO:Base model : Random Forest Regressor
2023-12-13 14:23:21,119:INFO:Declaring metric variables
2023-12-13 14:23:21,128:INFO:Defining Hyperparameters
2023-12-13 14:23:21,220:INFO:Tuning with n_jobs=-1
2023-12-13 14:23:21,220:INFO:Initializing RandomizedSearchCV
2023-12-13 14:23:38,865:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:23:38,865:INFO:Hyperparameter search completed
2023-12-13 14:23:38,865:INFO:SubProcess create_model() called ==================================
2023-12-13 14:23:38,865:INFO:Initializing create_model()
2023-12-13 14:23:38,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8407), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B29187F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 190, 'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.2, 'max_features': 1.0, 'max_depth': 4, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-13 14:23:38,865:INFO:Checking exceptions
2023-12-13 14:23:38,865:INFO:Importing libraries
2023-12-13 14:23:38,865:INFO:Copying training dataset
2023-12-13 14:23:38,872:INFO:Defining folds
2023-12-13 14:23:38,872:INFO:Declaring metric variables
2023-12-13 14:23:38,872:INFO:Importing untrained model
2023-12-13 14:23:38,872:INFO:Declaring custom model
2023-12-13 14:23:38,872:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:23:38,882:INFO:Starting cross validation
2023-12-13 14:23:38,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:23:43,349:INFO:Calculating mean and std
2023-12-13 14:23:43,349:INFO:Creating metrics dataframe
2023-12-13 14:23:43,355:INFO:Finalizing model
2023-12-13 14:23:44,021:INFO:Uploading results into container
2023-12-13 14:23:44,021:INFO:Uploading model into container now
2023-12-13 14:23:44,022:INFO:_master_model_container: 20
2023-12-13 14:23:44,022:INFO:_display_container: 4
2023-12-13 14:23:44,023:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407)
2023-12-13 14:23:44,023:INFO:create_model() successfully completed......................................
2023-12-13 14:23:44,113:INFO:SubProcess create_model() end ==================================
2023-12-13 14:23:44,113:INFO:choose_better activated
2023-12-13 14:23:44,113:INFO:SubProcess create_model() called ==================================
2023-12-13 14:23:44,113:INFO:Initializing create_model()
2023-12-13 14:23:44,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8407), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:23:44,113:INFO:Checking exceptions
2023-12-13 14:23:44,113:INFO:Importing libraries
2023-12-13 14:23:44,113:INFO:Copying training dataset
2023-12-13 14:23:44,125:INFO:Defining folds
2023-12-13 14:23:44,125:INFO:Declaring metric variables
2023-12-13 14:23:44,125:INFO:Importing untrained model
2023-12-13 14:23:44,125:INFO:Declaring custom model
2023-12-13 14:23:44,125:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:23:44,125:INFO:Starting cross validation
2023-12-13 14:23:44,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:23:44,887:INFO:Calculating mean and std
2023-12-13 14:23:44,887:INFO:Creating metrics dataframe
2023-12-13 14:23:44,887:INFO:Finalizing model
2023-12-13 14:23:45,047:INFO:Uploading results into container
2023-12-13 14:23:45,047:INFO:Uploading model into container now
2023-12-13 14:23:45,047:INFO:_master_model_container: 21
2023-12-13 14:23:45,047:INFO:_display_container: 5
2023-12-13 14:23:45,047:INFO:RandomForestRegressor(n_jobs=-1, random_state=8407)
2023-12-13 14:23:45,047:INFO:create_model() successfully completed......................................
2023-12-13 14:23:45,120:INFO:SubProcess create_model() end ==================================
2023-12-13 14:23:45,120:INFO:RandomForestRegressor(n_jobs=-1, random_state=8407) result for R2 is 0.0507
2023-12-13 14:23:45,120:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407) result for R2 is 0.5387
2023-12-13 14:23:45,120:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407) is best model
2023-12-13 14:23:45,120:INFO:choose_better completed
2023-12-13 14:23:45,136:INFO:_master_model_container: 21
2023-12-13 14:23:45,136:INFO:_display_container: 4
2023-12-13 14:23:45,136:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407)
2023-12-13 14:23:45,136:INFO:tune_model() successfully completed......................................
2023-12-13 14:23:55,900:INFO:Initializing plot_model()
2023-12-13 14:23:55,900:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:23:55,900:INFO:Checking exceptions
2023-12-13 14:23:55,925:INFO:Preloading libraries
2023-12-13 14:23:55,935:INFO:Copying training dataset
2023-12-13 14:23:55,935:INFO:Plot type: residuals
2023-12-13 14:23:56,019:INFO:Fitting Model
2023-12-13 14:23:56,019:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:23:56,101:INFO:Scoring test/hold-out set
2023-12-13 14:23:56,421:INFO:Visual Rendered Successfully
2023-12-13 14:23:56,516:INFO:plot_model() successfully completed......................................
2023-12-13 14:23:59,618:INFO:Initializing plot_model()
2023-12-13 14:23:59,619:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:23:59,619:INFO:Checking exceptions
2023-12-13 14:23:59,654:INFO:Preloading libraries
2023-12-13 14:23:59,662:INFO:Copying training dataset
2023-12-13 14:23:59,662:INFO:Plot type: feature
2023-12-13 14:23:59,662:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:23:59,790:INFO:Visual Rendered Successfully
2023-12-13 14:23:59,872:INFO:plot_model() successfully completed......................................
2023-12-13 14:24:06,348:INFO:Initializing predict_model()
2023-12-13 14:24:06,348:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B46DDA0>)
2023-12-13 14:24:06,348:INFO:Checking exceptions
2023-12-13 14:24:06,348:INFO:Preloading libraries
2023-12-13 14:24:09,393:INFO:Initializing finalize_model()
2023-12-13 14:24:09,393:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:24:09,393:INFO:Finalizing RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407)
2023-12-13 14:24:09,401:INFO:Initializing create_model()
2023-12-13 14:24:09,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=RandomForestRegressor(criterion='absolute_error', max_depth=4,
                      min_impurity_decrease=0.2, min_samples_leaf=6,
                      min_samples_split=5, n_estimators=190, n_jobs=-1,
                      random_state=8407), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:24:09,401:INFO:Checking exceptions
2023-12-13 14:24:09,401:INFO:Importing libraries
2023-12-13 14:24:09,401:INFO:Copying training dataset
2023-12-13 14:24:09,401:INFO:Defining folds
2023-12-13 14:24:09,401:INFO:Declaring metric variables
2023-12-13 14:24:09,401:INFO:Importing untrained model
2023-12-13 14:24:09,401:INFO:Declaring custom model
2023-12-13 14:24:09,401:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:24:09,401:INFO:Cross validation set to False
2023-12-13 14:24:09,401:INFO:Fitting Model
2023-12-13 14:24:10,446:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=4,
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=6, min_samples_split=5,
                                       n_estimators=190, n_jobs=-1,
                                       random_state=8407))])
2023-12-13 14:24:10,446:INFO:create_model() successfully completed......................................
2023-12-13 14:24:10,534:INFO:_master_model_container: 21
2023-12-13 14:24:10,534:INFO:_display_container: 5
2023-12-13 14:24:10,534:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=4,
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=6, min_samples_split=5,
                                       n_estimators=190, n_jobs=-1,
                                       random_state=8407))])
2023-12-13 14:24:10,534:INFO:finalize_model() successfully completed......................................
2023-12-13 14:24:11,639:INFO:Initializing predict_model()
2023-12-13 14:24:11,639:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=4,
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=6, min_samples_split=5,
                                       n_estimators=190, n_jobs=-1,
                                       random_state=8407))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B7F9C8B80>)
2023-12-13 14:24:11,639:INFO:Checking exceptions
2023-12-13 14:24:11,639:INFO:Preloading libraries
2023-12-13 14:24:16,411:INFO:Initializing predict_model()
2023-12-13 14:24:16,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=4,
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=6, min_samples_split=5,
                                       n_estimators=190, n_jobs=-1,
                                       random_state=8407))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B7F9C8B80>)
2023-12-13 14:24:16,411:INFO:Checking exceptions
2023-12-13 14:24:16,411:INFO:Preloading libraries
2023-12-13 14:24:21,352:INFO:Initializing predict_model()
2023-12-13 14:24:21,352:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=4,
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=6, min_samples_split=5,
                                       n_estimators=190, n_jobs=-1,
                                       random_state=8407))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B7F9C8B80>)
2023-12-13 14:24:21,352:INFO:Checking exceptions
2023-12-13 14:24:21,352:INFO:Preloading libraries
2023-12-13 14:24:21,355:INFO:Set up data.
2023-12-13 14:24:21,359:INFO:Set up index.
2023-12-13 14:24:22,582:INFO:Initializing predict_model()
2023-12-13 14:24:22,582:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B1C4BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(criterion='absolute_error', max_depth=4,
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=6, min_samples_split=5,
                                       n_estimators=190, n_jobs=-1,
                                       random_state=8407))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AB5DB20>)
2023-12-13 14:24:22,582:INFO:Checking exceptions
2023-12-13 14:24:22,582:INFO:Preloading libraries
2023-12-13 14:24:22,584:INFO:Set up data.
2023-12-13 14:24:22,589:INFO:Set up index.
2023-12-13 14:26:22,145:INFO:PyCaret RegressionExperiment
2023-12-13 14:26:22,145:INFO:Logging name: reg-default-name
2023-12-13 14:26:22,145:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:26:22,145:INFO:version 3.2.0
2023-12-13 14:26:22,145:INFO:Initializing setup()
2023-12-13 14:26:22,145:INFO:self.USI: 8348
2023-12-13 14:26:22,145:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:26:22,145:INFO:Checking environment
2023-12-13 14:26:22,145:INFO:python_version: 3.11.0
2023-12-13 14:26:22,145:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:26:22,145:INFO:machine: AMD64
2023-12-13 14:26:22,145:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:26:22,154:INFO:Memory: svmem(total=14877257728, available=1885777920, percent=87.3, used=12991479808, free=1885777920)
2023-12-13 14:26:22,155:INFO:Physical Core: 8
2023-12-13 14:26:22,155:INFO:Logical Core: 16
2023-12-13 14:26:22,155:INFO:Checking libraries
2023-12-13 14:26:22,155:INFO:System:
2023-12-13 14:26:22,155:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:26:22,155:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:26:22,155:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:26:22,156:INFO:PyCaret required dependencies:
2023-12-13 14:26:22,156:INFO:                 pip: 23.3.1
2023-12-13 14:26:22,156:INFO:          setuptools: 65.5.0
2023-12-13 14:26:22,156:INFO:             pycaret: 3.2.0
2023-12-13 14:26:22,156:INFO:             IPython: 8.18.1
2023-12-13 14:26:22,156:INFO:          ipywidgets: 8.1.1
2023-12-13 14:26:22,156:INFO:                tqdm: 4.66.1
2023-12-13 14:26:22,156:INFO:               numpy: 1.25.2
2023-12-13 14:26:22,157:INFO:              pandas: 2.1.4
2023-12-13 14:26:22,157:INFO:              jinja2: 3.1.2
2023-12-13 14:26:22,157:INFO:               scipy: 1.10.1
2023-12-13 14:26:22,157:INFO:              joblib: 1.3.2
2023-12-13 14:26:22,157:INFO:             sklearn: 1.2.2
2023-12-13 14:26:22,157:INFO:                pyod: 1.1.2
2023-12-13 14:26:22,157:INFO:            imblearn: 0.11.0
2023-12-13 14:26:22,158:INFO:   category_encoders: 2.6.3
2023-12-13 14:26:22,158:INFO:            lightgbm: 4.1.0
2023-12-13 14:26:22,158:INFO:               numba: 0.58.1
2023-12-13 14:26:22,158:INFO:            requests: 2.31.0
2023-12-13 14:26:22,159:INFO:          matplotlib: 3.6.0
2023-12-13 14:26:22,159:INFO:          scikitplot: 0.3.7
2023-12-13 14:26:22,159:INFO:         yellowbrick: 1.5
2023-12-13 14:26:22,159:INFO:              plotly: 5.18.0
2023-12-13 14:26:22,159:INFO:    plotly-resampler: Not installed
2023-12-13 14:26:22,159:INFO:             kaleido: 0.2.1
2023-12-13 14:26:22,159:INFO:           schemdraw: 0.15
2023-12-13 14:26:22,159:INFO:         statsmodels: 0.14.0
2023-12-13 14:26:22,159:INFO:              sktime: 0.21.1
2023-12-13 14:26:22,159:INFO:               tbats: 1.1.3
2023-12-13 14:26:22,159:INFO:            pmdarima: 2.0.4
2023-12-13 14:26:22,159:INFO:              psutil: 5.9.6
2023-12-13 14:26:22,159:INFO:          markupsafe: 2.1.3
2023-12-13 14:26:22,159:INFO:             pickle5: Not installed
2023-12-13 14:26:22,159:INFO:         cloudpickle: 3.0.0
2023-12-13 14:26:22,159:INFO:         deprecation: 2.1.0
2023-12-13 14:26:22,159:INFO:              xxhash: 3.4.1
2023-12-13 14:26:22,159:INFO:           wurlitzer: Not installed
2023-12-13 14:26:22,159:INFO:PyCaret optional dependencies:
2023-12-13 14:26:22,159:INFO:                shap: Not installed
2023-12-13 14:26:22,159:INFO:           interpret: Not installed
2023-12-13 14:26:22,159:INFO:                umap: Not installed
2023-12-13 14:26:22,159:INFO:     ydata_profiling: Not installed
2023-12-13 14:26:22,159:INFO:  explainerdashboard: Not installed
2023-12-13 14:26:22,159:INFO:             autoviz: Not installed
2023-12-13 14:26:22,159:INFO:           fairlearn: Not installed
2023-12-13 14:26:22,159:INFO:          deepchecks: Not installed
2023-12-13 14:26:22,160:INFO:             xgboost: Not installed
2023-12-13 14:26:22,160:INFO:            catboost: Not installed
2023-12-13 14:26:22,160:INFO:              kmodes: Not installed
2023-12-13 14:26:22,160:INFO:             mlxtend: Not installed
2023-12-13 14:26:22,160:INFO:       statsforecast: Not installed
2023-12-13 14:26:22,160:INFO:        tune_sklearn: Not installed
2023-12-13 14:26:22,160:INFO:                 ray: Not installed
2023-12-13 14:26:22,160:INFO:            hyperopt: Not installed
2023-12-13 14:26:22,160:INFO:              optuna: Not installed
2023-12-13 14:26:22,160:INFO:               skopt: Not installed
2023-12-13 14:26:22,160:INFO:              mlflow: Not installed
2023-12-13 14:26:22,160:INFO:              gradio: Not installed
2023-12-13 14:26:22,160:INFO:             fastapi: Not installed
2023-12-13 14:26:22,160:INFO:             uvicorn: Not installed
2023-12-13 14:26:22,160:INFO:              m2cgen: Not installed
2023-12-13 14:26:22,160:INFO:           evidently: Not installed
2023-12-13 14:26:22,160:INFO:               fugue: Not installed
2023-12-13 14:26:22,160:INFO:           streamlit: Not installed
2023-12-13 14:26:22,160:INFO:             prophet: Not installed
2023-12-13 14:26:22,160:INFO:None
2023-12-13 14:26:22,160:INFO:Set up data.
2023-12-13 14:26:22,166:INFO:Set up folding strategy.
2023-12-13 14:26:22,166:INFO:Set up train/test split.
2023-12-13 14:26:22,172:INFO:Set up index.
2023-12-13 14:26:22,172:INFO:Assigning column types.
2023-12-13 14:26:22,176:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:26:22,176:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,179:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,183:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,263:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,267:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,270:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,343:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:26:22,351:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,351:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,401:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,434:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,443:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,484:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,518:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:26:22,526:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,568:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,609:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,660:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,696:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:26:22,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,784:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,873:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:26:22,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:22,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:22,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,009:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:26:23,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,042:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:26:23,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,224:INFO:Preparing preprocessing pipeline...
2023-12-13 14:26:23,224:INFO:Set up simple imputation.
2023-12-13 14:26:23,225:INFO:Set up column name cleaning.
2023-12-13 14:26:23,244:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:26:23,247:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:26:23,247:INFO:Creating final display dataframe.
2023-12-13 14:26:23,308:INFO:Setup _display_container:                     Description             Value
0                    Session id              7123
1                        Target              Pret
2                   Target type        Regression
3           Original data shape        (1555, 19)
4        Transformed data shape        (1555, 19)
5   Transformed train set shape        (1088, 19)
6    Transformed test set shape         (467, 19)
7              Numeric features                18
8      Rows with missing values             98.8%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              8348
2023-12-13 14:26:23,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:26:23,491:INFO:setup() successfully completed in 1.35s...............
2023-12-13 14:26:23,511:INFO:Initializing compare_models()
2023-12-13 14:26:23,511:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:26:23,511:INFO:Checking exceptions
2023-12-13 14:26:23,515:INFO:Preparing display monitor
2023-12-13 14:26:23,532:INFO:Initializing Linear Regression
2023-12-13 14:26:23,532:INFO:Total runtime is 0.0 minutes
2023-12-13 14:26:23,535:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:23,535:INFO:Initializing create_model()
2023-12-13 14:26:23,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:23,536:INFO:Checking exceptions
2023-12-13 14:26:23,536:INFO:Importing libraries
2023-12-13 14:26:23,536:INFO:Copying training dataset
2023-12-13 14:26:23,540:INFO:Defining folds
2023-12-13 14:26:23,541:INFO:Declaring metric variables
2023-12-13 14:26:23,543:INFO:Importing untrained model
2023-12-13 14:26:23,546:INFO:Linear Regression Imported successfully
2023-12-13 14:26:23,552:INFO:Starting cross validation
2023-12-13 14:26:23,552:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:23,617:INFO:Calculating mean and std
2023-12-13 14:26:23,617:INFO:Creating metrics dataframe
2023-12-13 14:26:23,617:INFO:Uploading results into container
2023-12-13 14:26:23,617:INFO:Uploading model into container now
2023-12-13 14:26:23,617:INFO:_master_model_container: 1
2023-12-13 14:26:23,617:INFO:_display_container: 2
2023-12-13 14:26:23,617:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:26:23,617:INFO:create_model() successfully completed......................................
2023-12-13 14:26:23,740:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:23,740:INFO:Creating metrics dataframe
2023-12-13 14:26:23,741:INFO:Initializing Lasso Regression
2023-12-13 14:26:23,741:INFO:Total runtime is 0.0034942825635274253 minutes
2023-12-13 14:26:23,748:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:23,748:INFO:Initializing create_model()
2023-12-13 14:26:23,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:23,749:INFO:Checking exceptions
2023-12-13 14:26:23,749:INFO:Importing libraries
2023-12-13 14:26:23,749:INFO:Copying training dataset
2023-12-13 14:26:23,750:INFO:Defining folds
2023-12-13 14:26:23,750:INFO:Declaring metric variables
2023-12-13 14:26:23,750:INFO:Importing untrained model
2023-12-13 14:26:23,758:INFO:Lasso Regression Imported successfully
2023-12-13 14:26:23,763:INFO:Starting cross validation
2023-12-13 14:26:23,764:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:23,827:INFO:Calculating mean and std
2023-12-13 14:26:23,827:INFO:Creating metrics dataframe
2023-12-13 14:26:23,827:INFO:Uploading results into container
2023-12-13 14:26:23,827:INFO:Uploading model into container now
2023-12-13 14:26:23,827:INFO:_master_model_container: 2
2023-12-13 14:26:23,827:INFO:_display_container: 2
2023-12-13 14:26:23,827:INFO:Lasso(random_state=7123)
2023-12-13 14:26:23,827:INFO:create_model() successfully completed......................................
2023-12-13 14:26:23,916:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:23,916:INFO:Creating metrics dataframe
2023-12-13 14:26:23,924:INFO:Initializing Ridge Regression
2023-12-13 14:26:23,924:INFO:Total runtime is 0.006541530291239421 minutes
2023-12-13 14:26:23,924:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:23,924:INFO:Initializing create_model()
2023-12-13 14:26:23,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:23,924:INFO:Checking exceptions
2023-12-13 14:26:23,924:INFO:Importing libraries
2023-12-13 14:26:23,924:INFO:Copying training dataset
2023-12-13 14:26:23,931:INFO:Defining folds
2023-12-13 14:26:23,931:INFO:Declaring metric variables
2023-12-13 14:26:23,934:INFO:Importing untrained model
2023-12-13 14:26:23,937:INFO:Ridge Regression Imported successfully
2023-12-13 14:26:23,941:INFO:Starting cross validation
2023-12-13 14:26:23,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:24,001:INFO:Calculating mean and std
2023-12-13 14:26:24,001:INFO:Creating metrics dataframe
2023-12-13 14:26:24,001:INFO:Uploading results into container
2023-12-13 14:26:24,001:INFO:Uploading model into container now
2023-12-13 14:26:24,001:INFO:_master_model_container: 3
2023-12-13 14:26:24,001:INFO:_display_container: 2
2023-12-13 14:26:24,001:INFO:Ridge(random_state=7123)
2023-12-13 14:26:24,001:INFO:create_model() successfully completed......................................
2023-12-13 14:26:24,094:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:24,094:INFO:Creating metrics dataframe
2023-12-13 14:26:24,099:INFO:Initializing Elastic Net
2023-12-13 14:26:24,099:INFO:Total runtime is 0.009461299578348795 minutes
2023-12-13 14:26:24,102:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:24,102:INFO:Initializing create_model()
2023-12-13 14:26:24,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:24,102:INFO:Checking exceptions
2023-12-13 14:26:24,102:INFO:Importing libraries
2023-12-13 14:26:24,103:INFO:Copying training dataset
2023-12-13 14:26:24,107:INFO:Defining folds
2023-12-13 14:26:24,107:INFO:Declaring metric variables
2023-12-13 14:26:24,107:INFO:Importing untrained model
2023-12-13 14:26:24,107:INFO:Elastic Net Imported successfully
2023-12-13 14:26:24,116:INFO:Starting cross validation
2023-12-13 14:26:24,116:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:24,182:INFO:Calculating mean and std
2023-12-13 14:26:24,182:INFO:Creating metrics dataframe
2023-12-13 14:26:24,182:INFO:Uploading results into container
2023-12-13 14:26:24,182:INFO:Uploading model into container now
2023-12-13 14:26:24,182:INFO:_master_model_container: 4
2023-12-13 14:26:24,182:INFO:_display_container: 2
2023-12-13 14:26:24,182:INFO:ElasticNet(random_state=7123)
2023-12-13 14:26:24,182:INFO:create_model() successfully completed......................................
2023-12-13 14:26:24,273:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:24,273:INFO:Creating metrics dataframe
2023-12-13 14:26:24,283:INFO:Initializing Least Angle Regression
2023-12-13 14:26:24,283:INFO:Total runtime is 0.012517066796620686 minutes
2023-12-13 14:26:24,285:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:24,285:INFO:Initializing create_model()
2023-12-13 14:26:24,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:24,286:INFO:Checking exceptions
2023-12-13 14:26:24,286:INFO:Importing libraries
2023-12-13 14:26:24,286:INFO:Copying training dataset
2023-12-13 14:26:24,290:INFO:Defining folds
2023-12-13 14:26:24,290:INFO:Declaring metric variables
2023-12-13 14:26:24,292:INFO:Importing untrained model
2023-12-13 14:26:24,295:INFO:Least Angle Regression Imported successfully
2023-12-13 14:26:24,300:INFO:Starting cross validation
2023-12-13 14:26:24,300:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:24,361:INFO:Calculating mean and std
2023-12-13 14:26:24,361:INFO:Creating metrics dataframe
2023-12-13 14:26:24,361:INFO:Uploading results into container
2023-12-13 14:26:24,363:INFO:Uploading model into container now
2023-12-13 14:26:24,363:INFO:_master_model_container: 5
2023-12-13 14:26:24,363:INFO:_display_container: 2
2023-12-13 14:26:24,364:INFO:Lars(random_state=7123)
2023-12-13 14:26:24,364:INFO:create_model() successfully completed......................................
2023-12-13 14:26:24,453:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:24,453:INFO:Creating metrics dataframe
2023-12-13 14:26:24,459:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:26:24,460:INFO:Total runtime is 0.015472765763600667 minutes
2023-12-13 14:26:24,460:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:24,460:INFO:Initializing create_model()
2023-12-13 14:26:24,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:24,460:INFO:Checking exceptions
2023-12-13 14:26:24,460:INFO:Importing libraries
2023-12-13 14:26:24,460:INFO:Copying training dataset
2023-12-13 14:26:24,466:INFO:Defining folds
2023-12-13 14:26:24,466:INFO:Declaring metric variables
2023-12-13 14:26:24,469:INFO:Importing untrained model
2023-12-13 14:26:24,471:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:26:24,473:INFO:Starting cross validation
2023-12-13 14:26:24,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:24,537:INFO:Calculating mean and std
2023-12-13 14:26:24,537:INFO:Creating metrics dataframe
2023-12-13 14:26:24,539:INFO:Uploading results into container
2023-12-13 14:26:24,539:INFO:Uploading model into container now
2023-12-13 14:26:24,539:INFO:_master_model_container: 6
2023-12-13 14:26:24,539:INFO:_display_container: 2
2023-12-13 14:26:24,539:INFO:LassoLars(random_state=7123)
2023-12-13 14:26:24,539:INFO:create_model() successfully completed......................................
2023-12-13 14:26:24,612:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:24,612:INFO:Creating metrics dataframe
2023-12-13 14:26:24,628:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:26:24,628:INFO:Total runtime is 0.01827531655629476 minutes
2023-12-13 14:26:24,628:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:24,628:INFO:Initializing create_model()
2023-12-13 14:26:24,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:24,628:INFO:Checking exceptions
2023-12-13 14:26:24,628:INFO:Importing libraries
2023-12-13 14:26:24,628:INFO:Copying training dataset
2023-12-13 14:26:24,628:INFO:Defining folds
2023-12-13 14:26:24,628:INFO:Declaring metric variables
2023-12-13 14:26:24,628:INFO:Importing untrained model
2023-12-13 14:26:24,628:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:26:24,643:INFO:Starting cross validation
2023-12-13 14:26:24,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:24,696:INFO:Calculating mean and std
2023-12-13 14:26:24,696:INFO:Creating metrics dataframe
2023-12-13 14:26:24,696:INFO:Uploading results into container
2023-12-13 14:26:24,696:INFO:Uploading model into container now
2023-12-13 14:26:24,696:INFO:_master_model_container: 7
2023-12-13 14:26:24,696:INFO:_display_container: 2
2023-12-13 14:26:24,696:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:26:24,696:INFO:create_model() successfully completed......................................
2023-12-13 14:26:24,785:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:24,785:INFO:Creating metrics dataframe
2023-12-13 14:26:24,785:INFO:Initializing Bayesian Ridge
2023-12-13 14:26:24,785:INFO:Total runtime is 0.020892155170440675 minutes
2023-12-13 14:26:24,785:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:24,785:INFO:Initializing create_model()
2023-12-13 14:26:24,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:24,785:INFO:Checking exceptions
2023-12-13 14:26:24,785:INFO:Importing libraries
2023-12-13 14:26:24,785:INFO:Copying training dataset
2023-12-13 14:26:24,785:INFO:Defining folds
2023-12-13 14:26:24,785:INFO:Declaring metric variables
2023-12-13 14:26:24,785:INFO:Importing untrained model
2023-12-13 14:26:24,801:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:26:24,801:INFO:Starting cross validation
2023-12-13 14:26:24,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:24,859:INFO:Calculating mean and std
2023-12-13 14:26:24,859:INFO:Creating metrics dataframe
2023-12-13 14:26:24,861:INFO:Uploading results into container
2023-12-13 14:26:24,861:INFO:Uploading model into container now
2023-12-13 14:26:24,861:INFO:_master_model_container: 8
2023-12-13 14:26:24,861:INFO:_display_container: 2
2023-12-13 14:26:24,861:INFO:BayesianRidge()
2023-12-13 14:26:24,861:INFO:create_model() successfully completed......................................
2023-12-13 14:26:24,931:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:24,931:INFO:Creating metrics dataframe
2023-12-13 14:26:24,946:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:26:24,946:INFO:Total runtime is 0.023578349749247232 minutes
2023-12-13 14:26:24,946:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:24,946:INFO:Initializing create_model()
2023-12-13 14:26:24,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:24,946:INFO:Checking exceptions
2023-12-13 14:26:24,946:INFO:Importing libraries
2023-12-13 14:26:24,946:INFO:Copying training dataset
2023-12-13 14:26:24,946:INFO:Defining folds
2023-12-13 14:26:24,946:INFO:Declaring metric variables
2023-12-13 14:26:24,946:INFO:Importing untrained model
2023-12-13 14:26:24,961:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:26:24,962:INFO:Starting cross validation
2023-12-13 14:26:24,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:25,017:INFO:Calculating mean and std
2023-12-13 14:26:25,017:INFO:Creating metrics dataframe
2023-12-13 14:26:25,017:INFO:Uploading results into container
2023-12-13 14:26:25,017:INFO:Uploading model into container now
2023-12-13 14:26:25,017:INFO:_master_model_container: 9
2023-12-13 14:26:25,017:INFO:_display_container: 2
2023-12-13 14:26:25,017:INFO:PassiveAggressiveRegressor(random_state=7123)
2023-12-13 14:26:25,017:INFO:create_model() successfully completed......................................
2023-12-13 14:26:25,089:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:25,089:INFO:Creating metrics dataframe
2023-12-13 14:26:25,105:INFO:Initializing Huber Regressor
2023-12-13 14:26:25,105:INFO:Total runtime is 0.02621976534525553 minutes
2023-12-13 14:26:25,105:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:25,105:INFO:Initializing create_model()
2023-12-13 14:26:25,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:25,105:INFO:Checking exceptions
2023-12-13 14:26:25,105:INFO:Importing libraries
2023-12-13 14:26:25,105:INFO:Copying training dataset
2023-12-13 14:26:25,105:INFO:Defining folds
2023-12-13 14:26:25,105:INFO:Declaring metric variables
2023-12-13 14:26:25,105:INFO:Importing untrained model
2023-12-13 14:26:25,105:INFO:Huber Regressor Imported successfully
2023-12-13 14:26:25,120:INFO:Starting cross validation
2023-12-13 14:26:25,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:25,172:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,176:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,187:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,187:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,187:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,187:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,196:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,203:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,205:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:26:25,217:INFO:Calculating mean and std
2023-12-13 14:26:25,217:INFO:Creating metrics dataframe
2023-12-13 14:26:25,219:INFO:Uploading results into container
2023-12-13 14:26:25,220:INFO:Uploading model into container now
2023-12-13 14:26:25,220:INFO:_master_model_container: 10
2023-12-13 14:26:25,220:INFO:_display_container: 2
2023-12-13 14:26:25,220:INFO:HuberRegressor()
2023-12-13 14:26:25,220:INFO:create_model() successfully completed......................................
2023-12-13 14:26:25,299:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:25,299:INFO:Creating metrics dataframe
2023-12-13 14:26:25,299:INFO:Initializing K Neighbors Regressor
2023-12-13 14:26:25,299:INFO:Total runtime is 0.02945215304692586 minutes
2023-12-13 14:26:25,299:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:25,299:INFO:Initializing create_model()
2023-12-13 14:26:25,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:25,299:INFO:Checking exceptions
2023-12-13 14:26:25,299:INFO:Importing libraries
2023-12-13 14:26:25,299:INFO:Copying training dataset
2023-12-13 14:26:25,314:INFO:Defining folds
2023-12-13 14:26:25,314:INFO:Declaring metric variables
2023-12-13 14:26:25,314:INFO:Importing untrained model
2023-12-13 14:26:25,314:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:26:25,314:INFO:Starting cross validation
2023-12-13 14:26:25,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:25,498:INFO:Calculating mean and std
2023-12-13 14:26:25,498:INFO:Creating metrics dataframe
2023-12-13 14:26:25,498:INFO:Uploading results into container
2023-12-13 14:26:25,498:INFO:Uploading model into container now
2023-12-13 14:26:25,498:INFO:_master_model_container: 11
2023-12-13 14:26:25,498:INFO:_display_container: 2
2023-12-13 14:26:25,498:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:26:25,498:INFO:create_model() successfully completed......................................
2023-12-13 14:26:25,584:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:25,584:INFO:Creating metrics dataframe
2023-12-13 14:26:25,584:INFO:Initializing Decision Tree Regressor
2023-12-13 14:26:25,584:INFO:Total runtime is 0.03420542478561401 minutes
2023-12-13 14:26:25,584:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:25,584:INFO:Initializing create_model()
2023-12-13 14:26:25,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:25,584:INFO:Checking exceptions
2023-12-13 14:26:25,584:INFO:Importing libraries
2023-12-13 14:26:25,584:INFO:Copying training dataset
2023-12-13 14:26:25,600:INFO:Defining folds
2023-12-13 14:26:25,600:INFO:Declaring metric variables
2023-12-13 14:26:25,600:INFO:Importing untrained model
2023-12-13 14:26:25,600:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:26:25,600:INFO:Starting cross validation
2023-12-13 14:26:25,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:25,672:INFO:Calculating mean and std
2023-12-13 14:26:25,672:INFO:Creating metrics dataframe
2023-12-13 14:26:25,672:INFO:Uploading results into container
2023-12-13 14:26:25,672:INFO:Uploading model into container now
2023-12-13 14:26:25,672:INFO:_master_model_container: 12
2023-12-13 14:26:25,672:INFO:_display_container: 2
2023-12-13 14:26:25,672:INFO:DecisionTreeRegressor(random_state=7123)
2023-12-13 14:26:25,672:INFO:create_model() successfully completed......................................
2023-12-13 14:26:25,757:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:25,757:INFO:Creating metrics dataframe
2023-12-13 14:26:25,761:INFO:Initializing Random Forest Regressor
2023-12-13 14:26:25,761:INFO:Total runtime is 0.037152171134948724 minutes
2023-12-13 14:26:25,761:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:25,761:INFO:Initializing create_model()
2023-12-13 14:26:25,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:25,761:INFO:Checking exceptions
2023-12-13 14:26:25,761:INFO:Importing libraries
2023-12-13 14:26:25,761:INFO:Copying training dataset
2023-12-13 14:26:25,773:INFO:Defining folds
2023-12-13 14:26:25,773:INFO:Declaring metric variables
2023-12-13 14:26:25,773:INFO:Importing untrained model
2023-12-13 14:26:25,773:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:26:25,788:INFO:Starting cross validation
2023-12-13 14:26:25,788:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:26,532:INFO:Calculating mean and std
2023-12-13 14:26:26,532:INFO:Creating metrics dataframe
2023-12-13 14:26:26,532:INFO:Uploading results into container
2023-12-13 14:26:26,532:INFO:Uploading model into container now
2023-12-13 14:26:26,532:INFO:_master_model_container: 13
2023-12-13 14:26:26,532:INFO:_display_container: 2
2023-12-13 14:26:26,532:INFO:RandomForestRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:26,532:INFO:create_model() successfully completed......................................
2023-12-13 14:26:26,611:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:26,611:INFO:Creating metrics dataframe
2023-12-13 14:26:26,626:INFO:Initializing Extra Trees Regressor
2023-12-13 14:26:26,626:INFO:Total runtime is 0.051578422387440995 minutes
2023-12-13 14:26:26,626:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:26,626:INFO:Initializing create_model()
2023-12-13 14:26:26,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:26,626:INFO:Checking exceptions
2023-12-13 14:26:26,626:INFO:Importing libraries
2023-12-13 14:26:26,626:INFO:Copying training dataset
2023-12-13 14:26:26,626:INFO:Defining folds
2023-12-13 14:26:26,626:INFO:Declaring metric variables
2023-12-13 14:26:26,626:INFO:Importing untrained model
2023-12-13 14:26:26,626:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:26:26,642:INFO:Starting cross validation
2023-12-13 14:26:26,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:27,123:INFO:Calculating mean and std
2023-12-13 14:26:27,123:INFO:Creating metrics dataframe
2023-12-13 14:26:27,123:INFO:Uploading results into container
2023-12-13 14:26:27,123:INFO:Uploading model into container now
2023-12-13 14:26:27,123:INFO:_master_model_container: 14
2023-12-13 14:26:27,123:INFO:_display_container: 2
2023-12-13 14:26:27,123:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:27,123:INFO:create_model() successfully completed......................................
2023-12-13 14:26:27,209:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:27,209:INFO:Creating metrics dataframe
2023-12-13 14:26:27,209:INFO:Initializing AdaBoost Regressor
2023-12-13 14:26:27,209:INFO:Total runtime is 0.06129599809646606 minutes
2023-12-13 14:26:27,209:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:27,209:INFO:Initializing create_model()
2023-12-13 14:26:27,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:27,209:INFO:Checking exceptions
2023-12-13 14:26:27,209:INFO:Importing libraries
2023-12-13 14:26:27,209:INFO:Copying training dataset
2023-12-13 14:26:27,209:INFO:Defining folds
2023-12-13 14:26:27,225:INFO:Declaring metric variables
2023-12-13 14:26:27,225:INFO:Importing untrained model
2023-12-13 14:26:27,225:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:26:27,225:INFO:Starting cross validation
2023-12-13 14:26:27,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:27,425:INFO:Calculating mean and std
2023-12-13 14:26:27,425:INFO:Creating metrics dataframe
2023-12-13 14:26:27,425:INFO:Uploading results into container
2023-12-13 14:26:27,425:INFO:Uploading model into container now
2023-12-13 14:26:27,425:INFO:_master_model_container: 15
2023-12-13 14:26:27,425:INFO:_display_container: 2
2023-12-13 14:26:27,425:INFO:AdaBoostRegressor(random_state=7123)
2023-12-13 14:26:27,425:INFO:create_model() successfully completed......................................
2023-12-13 14:26:27,509:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:27,509:INFO:Creating metrics dataframe
2023-12-13 14:26:27,509:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:26:27,509:INFO:Total runtime is 0.06628905137379965 minutes
2023-12-13 14:26:27,509:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:27,509:INFO:Initializing create_model()
2023-12-13 14:26:27,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:27,509:INFO:Checking exceptions
2023-12-13 14:26:27,509:INFO:Importing libraries
2023-12-13 14:26:27,509:INFO:Copying training dataset
2023-12-13 14:26:27,525:INFO:Defining folds
2023-12-13 14:26:27,525:INFO:Declaring metric variables
2023-12-13 14:26:27,525:INFO:Importing untrained model
2023-12-13 14:26:27,525:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:26:27,525:INFO:Starting cross validation
2023-12-13 14:26:27,525:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:27,819:INFO:Calculating mean and std
2023-12-13 14:26:27,819:INFO:Creating metrics dataframe
2023-12-13 14:26:27,819:INFO:Uploading results into container
2023-12-13 14:26:27,819:INFO:Uploading model into container now
2023-12-13 14:26:27,819:INFO:_master_model_container: 16
2023-12-13 14:26:27,819:INFO:_display_container: 2
2023-12-13 14:26:27,819:INFO:GradientBoostingRegressor(random_state=7123)
2023-12-13 14:26:27,819:INFO:create_model() successfully completed......................................
2023-12-13 14:26:27,907:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:27,907:INFO:Creating metrics dataframe
2023-12-13 14:26:27,907:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:26:27,907:INFO:Total runtime is 0.0729179859161377 minutes
2023-12-13 14:26:27,907:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:27,907:INFO:Initializing create_model()
2023-12-13 14:26:27,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:27,907:INFO:Checking exceptions
2023-12-13 14:26:27,907:INFO:Importing libraries
2023-12-13 14:26:27,907:INFO:Copying training dataset
2023-12-13 14:26:27,922:INFO:Defining folds
2023-12-13 14:26:27,922:INFO:Declaring metric variables
2023-12-13 14:26:27,922:INFO:Importing untrained model
2023-12-13 14:26:27,922:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:26:27,922:INFO:Starting cross validation
2023-12-13 14:26:27,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:28,801:INFO:Calculating mean and std
2023-12-13 14:26:28,801:INFO:Creating metrics dataframe
2023-12-13 14:26:28,804:INFO:Uploading results into container
2023-12-13 14:26:28,804:INFO:Uploading model into container now
2023-12-13 14:26:28,804:INFO:_master_model_container: 17
2023-12-13 14:26:28,804:INFO:_display_container: 2
2023-12-13 14:26:28,804:INFO:LGBMRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:28,804:INFO:create_model() successfully completed......................................
2023-12-13 14:26:28,898:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:28,898:INFO:Creating metrics dataframe
2023-12-13 14:26:28,914:INFO:Initializing Dummy Regressor
2023-12-13 14:26:28,914:INFO:Total runtime is 0.08969819943110148 minutes
2023-12-13 14:26:28,914:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:28,914:INFO:Initializing create_model()
2023-12-13 14:26:28,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28109C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:28,914:INFO:Checking exceptions
2023-12-13 14:26:28,914:INFO:Importing libraries
2023-12-13 14:26:28,914:INFO:Copying training dataset
2023-12-13 14:26:28,914:INFO:Defining folds
2023-12-13 14:26:28,914:INFO:Declaring metric variables
2023-12-13 14:26:28,929:INFO:Importing untrained model
2023-12-13 14:26:28,929:INFO:Dummy Regressor Imported successfully
2023-12-13 14:26:28,929:INFO:Starting cross validation
2023-12-13 14:26:28,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:28,989:INFO:Calculating mean and std
2023-12-13 14:26:28,989:INFO:Creating metrics dataframe
2023-12-13 14:26:28,989:INFO:Uploading results into container
2023-12-13 14:26:28,989:INFO:Uploading model into container now
2023-12-13 14:26:28,989:INFO:_master_model_container: 18
2023-12-13 14:26:28,989:INFO:_display_container: 2
2023-12-13 14:26:28,989:INFO:DummyRegressor()
2023-12-13 14:26:28,989:INFO:create_model() successfully completed......................................
2023-12-13 14:26:29,071:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:29,071:INFO:Creating metrics dataframe
2023-12-13 14:26:29,071:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:26:29,087:INFO:Initializing create_model()
2023-12-13 14:26:29,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=LGBMRegressor(n_jobs=-1, random_state=7123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:29,087:INFO:Checking exceptions
2023-12-13 14:26:29,087:INFO:Importing libraries
2023-12-13 14:26:29,087:INFO:Copying training dataset
2023-12-13 14:26:29,087:INFO:Defining folds
2023-12-13 14:26:29,087:INFO:Declaring metric variables
2023-12-13 14:26:29,087:INFO:Importing untrained model
2023-12-13 14:26:29,087:INFO:Declaring custom model
2023-12-13 14:26:29,087:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:26:29,087:INFO:Cross validation set to False
2023-12-13 14:26:29,087:INFO:Fitting Model
2023-12-13 14:26:29,103:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-12-13 14:26:29,103:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000351 seconds.
2023-12-13 14:26:29,103:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-13 14:26:29,103:INFO:[LightGBM] [Info] Total Bins 902
2023-12-13 14:26:29,103:INFO:[LightGBM] [Info] Number of data points in the train set: 1088, number of used features: 17
2023-12-13 14:26:29,103:INFO:[LightGBM] [Info] Start training from score 452798.114890
2023-12-13 14:26:29,165:INFO:LGBMRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:29,165:INFO:create_model() successfully completed......................................
2023-12-13 14:26:29,275:INFO:_master_model_container: 18
2023-12-13 14:26:29,275:INFO:_display_container: 2
2023-12-13 14:26:29,275:INFO:LGBMRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:29,275:INFO:compare_models() successfully completed......................................
2023-12-13 14:26:29,313:INFO:Initializing create_model()
2023-12-13 14:26:29,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:29,313:INFO:Checking exceptions
2023-12-13 14:26:29,313:INFO:Importing libraries
2023-12-13 14:26:29,313:INFO:Copying training dataset
2023-12-13 14:26:29,331:INFO:Defining folds
2023-12-13 14:26:29,331:INFO:Declaring metric variables
2023-12-13 14:26:29,334:INFO:Importing untrained model
2023-12-13 14:26:29,338:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:26:29,347:INFO:Starting cross validation
2023-12-13 14:26:29,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:30,117:INFO:Calculating mean and std
2023-12-13 14:26:30,117:INFO:Creating metrics dataframe
2023-12-13 14:26:30,120:INFO:Finalizing model
2023-12-13 14:26:30,284:INFO:Uploading results into container
2023-12-13 14:26:30,285:INFO:Uploading model into container now
2023-12-13 14:26:30,293:INFO:_master_model_container: 19
2023-12-13 14:26:30,293:INFO:_display_container: 3
2023-12-13 14:26:30,293:INFO:RandomForestRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:30,293:INFO:create_model() successfully completed......................................
2023-12-13 14:26:30,406:INFO:Initializing tune_model()
2023-12-13 14:26:30,407:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:26:30,407:INFO:Checking exceptions
2023-12-13 14:26:30,420:INFO:Copying training dataset
2023-12-13 14:26:30,424:INFO:Checking base model
2023-12-13 14:26:30,424:INFO:Base model : Random Forest Regressor
2023-12-13 14:26:30,427:INFO:Declaring metric variables
2023-12-13 14:26:30,429:INFO:Defining Hyperparameters
2023-12-13 14:26:30,521:INFO:Tuning with n_jobs=-1
2023-12-13 14:26:30,521:INFO:Initializing RandomizedSearchCV
2023-12-13 14:26:54,595:INFO:best_params: {'actual_estimator__n_estimators': 220, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:26:54,595:INFO:Hyperparameter search completed
2023-12-13 14:26:54,595:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:54,595:INFO:Initializing create_model()
2023-12-13 14:26:54,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B281DB550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 220, 'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-13 14:26:54,595:INFO:Checking exceptions
2023-12-13 14:26:54,595:INFO:Importing libraries
2023-12-13 14:26:54,595:INFO:Copying training dataset
2023-12-13 14:26:54,601:INFO:Defining folds
2023-12-13 14:26:54,601:INFO:Declaring metric variables
2023-12-13 14:26:54,605:INFO:Importing untrained model
2023-12-13 14:26:54,605:INFO:Declaring custom model
2023-12-13 14:26:54,608:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:26:54,614:INFO:Starting cross validation
2023-12-13 14:26:54,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:55,236:INFO:Calculating mean and std
2023-12-13 14:26:55,237:INFO:Creating metrics dataframe
2023-12-13 14:26:55,240:INFO:Finalizing model
2023-12-13 14:26:55,487:INFO:Uploading results into container
2023-12-13 14:26:55,488:INFO:Uploading model into container now
2023-12-13 14:26:55,488:INFO:_master_model_container: 20
2023-12-13 14:26:55,488:INFO:_display_container: 4
2023-12-13 14:26:55,488:INFO:RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123)
2023-12-13 14:26:55,488:INFO:create_model() successfully completed......................................
2023-12-13 14:26:55,575:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:55,575:INFO:choose_better activated
2023-12-13 14:26:55,575:INFO:SubProcess create_model() called ==================================
2023-12-13 14:26:55,575:INFO:Initializing create_model()
2023-12-13 14:26:55,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:55,575:INFO:Checking exceptions
2023-12-13 14:26:55,575:INFO:Importing libraries
2023-12-13 14:26:55,575:INFO:Copying training dataset
2023-12-13 14:26:55,586:INFO:Defining folds
2023-12-13 14:26:55,586:INFO:Declaring metric variables
2023-12-13 14:26:55,586:INFO:Importing untrained model
2023-12-13 14:26:55,586:INFO:Declaring custom model
2023-12-13 14:26:55,586:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:26:55,586:INFO:Starting cross validation
2023-12-13 14:26:55,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:26:56,416:INFO:Calculating mean and std
2023-12-13 14:26:56,417:INFO:Creating metrics dataframe
2023-12-13 14:26:56,418:INFO:Finalizing model
2023-12-13 14:26:56,575:INFO:Uploading results into container
2023-12-13 14:26:56,575:INFO:Uploading model into container now
2023-12-13 14:26:56,575:INFO:_master_model_container: 21
2023-12-13 14:26:56,575:INFO:_display_container: 5
2023-12-13 14:26:56,575:INFO:RandomForestRegressor(n_jobs=-1, random_state=7123)
2023-12-13 14:26:56,575:INFO:create_model() successfully completed......................................
2023-12-13 14:26:56,658:INFO:SubProcess create_model() end ==================================
2023-12-13 14:26:56,658:INFO:RandomForestRegressor(n_jobs=-1, random_state=7123) result for R2 is 0.3636
2023-12-13 14:26:56,658:INFO:RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123) result for R2 is 0.5826
2023-12-13 14:26:56,658:INFO:RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123) is best model
2023-12-13 14:26:56,658:INFO:choose_better completed
2023-12-13 14:26:56,666:INFO:_master_model_container: 21
2023-12-13 14:26:56,666:INFO:_display_container: 4
2023-12-13 14:26:56,666:INFO:RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123)
2023-12-13 14:26:56,666:INFO:tune_model() successfully completed......................................
2023-12-13 14:26:56,777:INFO:Initializing plot_model()
2023-12-13 14:26:56,777:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:26:56,777:INFO:Checking exceptions
2023-12-13 14:26:56,800:INFO:Preloading libraries
2023-12-13 14:26:56,811:INFO:Copying training dataset
2023-12-13 14:26:56,812:INFO:Plot type: residuals
2023-12-13 14:26:56,900:INFO:Fitting Model
2023-12-13 14:26:56,900:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:26:57,004:INFO:Scoring test/hold-out set
2023-12-13 14:26:57,315:INFO:Visual Rendered Successfully
2023-12-13 14:26:57,411:INFO:plot_model() successfully completed......................................
2023-12-13 14:26:57,449:INFO:Initializing plot_model()
2023-12-13 14:26:57,449:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:26:57,449:INFO:Checking exceptions
2023-12-13 14:26:57,472:INFO:Preloading libraries
2023-12-13 14:26:57,482:INFO:Copying training dataset
2023-12-13 14:26:57,482:INFO:Plot type: feature
2023-12-13 14:26:57,482:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:26:57,632:INFO:Visual Rendered Successfully
2023-12-13 14:26:57,723:INFO:plot_model() successfully completed......................................
2023-12-13 14:26:57,748:INFO:Initializing predict_model()
2023-12-13 14:26:57,749:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B1884A0>)
2023-12-13 14:26:57,749:INFO:Checking exceptions
2023-12-13 14:26:57,749:INFO:Preloading libraries
2023-12-13 14:26:57,940:INFO:Initializing finalize_model()
2023-12-13 14:26:57,940:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:26:57,940:INFO:Finalizing RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123)
2023-12-13 14:26:57,943:INFO:Initializing create_model()
2023-12-13 14:26:57,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=RandomForestRegressor(max_depth=8, max_features='sqrt',
                      min_impurity_decrease=0.001, min_samples_leaf=4,
                      n_estimators=220, n_jobs=-1, random_state=7123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:26:57,943:INFO:Checking exceptions
2023-12-13 14:26:57,943:INFO:Importing libraries
2023-12-13 14:26:57,943:INFO:Copying training dataset
2023-12-13 14:26:57,943:INFO:Defining folds
2023-12-13 14:26:57,943:INFO:Declaring metric variables
2023-12-13 14:26:57,943:INFO:Importing untrained model
2023-12-13 14:26:57,943:INFO:Declaring custom model
2023-12-13 14:26:57,947:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:26:57,947:INFO:Cross validation set to False
2023-12-13 14:26:57,947:INFO:Fitting Model
2023-12-13 14:26:58,190:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=8, max_features='sqrt',
                                       min_impurity_decrease=0.001,
                                       min_samples_leaf=4, n_estimators=220,
                                       n_jobs=-1, random_state=7123))])
2023-12-13 14:26:58,190:INFO:create_model() successfully completed......................................
2023-12-13 14:26:58,281:INFO:_master_model_container: 21
2023-12-13 14:26:58,281:INFO:_display_container: 5
2023-12-13 14:26:58,289:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=8, max_features='sqrt',
                                       min_impurity_decrease=0.001,
                                       min_samples_leaf=4, n_estimators=220,
                                       n_jobs=-1, random_state=7123))])
2023-12-13 14:26:58,289:INFO:finalize_model() successfully completed......................................
2023-12-13 14:26:58,421:INFO:Initializing predict_model()
2023-12-13 14:26:58,421:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=8, max_features='sqrt',
                                       min_impurity_decrease=0.001,
                                       min_samples_leaf=4, n_estimators=220,
                                       n_jobs=-1, random_state=7123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B55F2E0>)
2023-12-13 14:26:58,421:INFO:Checking exceptions
2023-12-13 14:26:58,421:INFO:Preloading libraries
2023-12-13 14:26:58,631:INFO:Initializing predict_model()
2023-12-13 14:26:58,631:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B2B6090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Unnamed: 0', 'Suprafata',
                                             'Tip incalzire',
                                             'Suprafata teren (m2)', 'Stare',
                                             'Tip cladire', 'Anul constructiei',
                                             'Numarul de camere',
                                             'Garaj/loc de parcare',
                                             'Tip proprietate',
                                             'Material de constructie',
                                             'Numar de etaje', 'Tip acoperis',
                                             'Acoperis', 'Tip mansarda',
                                             'Tip acces', 'Locatie',
                                             '...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(max_depth=8, max_features='sqrt',
                                       min_impurity_decrease=0.001,
                                       min_samples_leaf=4, n_estimators=220,
                                       n_jobs=-1, random_state=7123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B55D760>)
2023-12-13 14:26:58,631:INFO:Checking exceptions
2023-12-13 14:26:58,631:INFO:Preloading libraries
2023-12-13 14:26:58,631:INFO:Set up data.
2023-12-13 14:26:58,638:INFO:Set up index.
2023-12-13 14:28:49,245:INFO:PyCaret RegressionExperiment
2023-12-13 14:28:49,245:INFO:Logging name: reg-default-name
2023-12-13 14:28:49,245:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:28:49,245:INFO:version 3.2.0
2023-12-13 14:28:49,245:INFO:Initializing setup()
2023-12-13 14:28:49,245:INFO:self.USI: 1cc5
2023-12-13 14:28:49,245:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:28:49,245:INFO:Checking environment
2023-12-13 14:28:49,245:INFO:python_version: 3.11.0
2023-12-13 14:28:49,245:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:28:49,245:INFO:machine: AMD64
2023-12-13 14:28:49,252:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:28:49,259:INFO:Memory: svmem(total=14877257728, available=1979121664, percent=86.7, used=12898136064, free=1979121664)
2023-12-13 14:28:49,259:INFO:Physical Core: 8
2023-12-13 14:28:49,259:INFO:Logical Core: 16
2023-12-13 14:28:49,259:INFO:Checking libraries
2023-12-13 14:28:49,259:INFO:System:
2023-12-13 14:28:49,260:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:28:49,260:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:28:49,260:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:28:49,260:INFO:PyCaret required dependencies:
2023-12-13 14:28:49,260:INFO:                 pip: 23.3.1
2023-12-13 14:28:49,260:INFO:          setuptools: 65.5.0
2023-12-13 14:28:49,260:INFO:             pycaret: 3.2.0
2023-12-13 14:28:49,261:INFO:             IPython: 8.18.1
2023-12-13 14:28:49,261:INFO:          ipywidgets: 8.1.1
2023-12-13 14:28:49,261:INFO:                tqdm: 4.66.1
2023-12-13 14:28:49,261:INFO:               numpy: 1.25.2
2023-12-13 14:28:49,261:INFO:              pandas: 2.1.4
2023-12-13 14:28:49,261:INFO:              jinja2: 3.1.2
2023-12-13 14:28:49,261:INFO:               scipy: 1.10.1
2023-12-13 14:28:49,262:INFO:              joblib: 1.3.2
2023-12-13 14:28:49,262:INFO:             sklearn: 1.2.2
2023-12-13 14:28:49,262:INFO:                pyod: 1.1.2
2023-12-13 14:28:49,262:INFO:            imblearn: 0.11.0
2023-12-13 14:28:49,262:INFO:   category_encoders: 2.6.3
2023-12-13 14:28:49,262:INFO:            lightgbm: 4.1.0
2023-12-13 14:28:49,262:INFO:               numba: 0.58.1
2023-12-13 14:28:49,262:INFO:            requests: 2.31.0
2023-12-13 14:28:49,263:INFO:          matplotlib: 3.6.0
2023-12-13 14:28:49,263:INFO:          scikitplot: 0.3.7
2023-12-13 14:28:49,263:INFO:         yellowbrick: 1.5
2023-12-13 14:28:49,263:INFO:              plotly: 5.18.0
2023-12-13 14:28:49,263:INFO:    plotly-resampler: Not installed
2023-12-13 14:28:49,263:INFO:             kaleido: 0.2.1
2023-12-13 14:28:49,263:INFO:           schemdraw: 0.15
2023-12-13 14:28:49,263:INFO:         statsmodels: 0.14.0
2023-12-13 14:28:49,263:INFO:              sktime: 0.21.1
2023-12-13 14:28:49,263:INFO:               tbats: 1.1.3
2023-12-13 14:28:49,263:INFO:            pmdarima: 2.0.4
2023-12-13 14:28:49,263:INFO:              psutil: 5.9.6
2023-12-13 14:28:49,263:INFO:          markupsafe: 2.1.3
2023-12-13 14:28:49,263:INFO:             pickle5: Not installed
2023-12-13 14:28:49,263:INFO:         cloudpickle: 3.0.0
2023-12-13 14:28:49,263:INFO:         deprecation: 2.1.0
2023-12-13 14:28:49,263:INFO:              xxhash: 3.4.1
2023-12-13 14:28:49,263:INFO:           wurlitzer: Not installed
2023-12-13 14:28:49,263:INFO:PyCaret optional dependencies:
2023-12-13 14:28:49,263:INFO:                shap: Not installed
2023-12-13 14:28:49,263:INFO:           interpret: Not installed
2023-12-13 14:28:49,263:INFO:                umap: Not installed
2023-12-13 14:28:49,263:INFO:     ydata_profiling: Not installed
2023-12-13 14:28:49,263:INFO:  explainerdashboard: Not installed
2023-12-13 14:28:49,263:INFO:             autoviz: Not installed
2023-12-13 14:28:49,263:INFO:           fairlearn: Not installed
2023-12-13 14:28:49,263:INFO:          deepchecks: Not installed
2023-12-13 14:28:49,263:INFO:             xgboost: Not installed
2023-12-13 14:28:49,263:INFO:            catboost: Not installed
2023-12-13 14:28:49,264:INFO:              kmodes: Not installed
2023-12-13 14:28:49,264:INFO:             mlxtend: Not installed
2023-12-13 14:28:49,264:INFO:       statsforecast: Not installed
2023-12-13 14:28:49,264:INFO:        tune_sklearn: Not installed
2023-12-13 14:28:49,264:INFO:                 ray: Not installed
2023-12-13 14:28:49,264:INFO:            hyperopt: Not installed
2023-12-13 14:28:49,264:INFO:              optuna: Not installed
2023-12-13 14:28:49,264:INFO:               skopt: Not installed
2023-12-13 14:28:49,264:INFO:              mlflow: Not installed
2023-12-13 14:28:49,264:INFO:              gradio: Not installed
2023-12-13 14:28:49,264:INFO:             fastapi: Not installed
2023-12-13 14:28:49,264:INFO:             uvicorn: Not installed
2023-12-13 14:28:49,264:INFO:              m2cgen: Not installed
2023-12-13 14:28:49,264:INFO:           evidently: Not installed
2023-12-13 14:28:49,264:INFO:               fugue: Not installed
2023-12-13 14:28:49,264:INFO:           streamlit: Not installed
2023-12-13 14:28:49,264:INFO:             prophet: Not installed
2023-12-13 14:28:49,264:INFO:None
2023-12-13 14:28:49,264:INFO:Set up data.
2023-12-13 14:28:49,268:INFO:Set up folding strategy.
2023-12-13 14:28:49,269:INFO:Set up train/test split.
2023-12-13 14:28:49,271:INFO:Set up index.
2023-12-13 14:28:49,271:INFO:Assigning column types.
2023-12-13 14:28:49,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:28:49,274:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,278:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,282:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,327:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,361:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,361:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,369:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,413:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,446:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:28:49,452:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,456:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,536:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,543:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,586:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,621:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:28:49,626:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,714:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,795:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:28:49,843:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,936:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,969:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:28:49,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:49,969:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:28:50,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:50,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:28:50,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,151:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:28:50,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,326:INFO:Preparing preprocessing pipeline...
2023-12-13 14:28:50,326:INFO:Set up simple imputation.
2023-12-13 14:28:50,326:INFO:Set up column name cleaning.
2023-12-13 14:28:50,343:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:28:50,351:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:28:50,351:INFO:Creating final display dataframe.
2023-12-13 14:28:50,401:INFO:Setup _display_container:                     Description             Value
0                    Session id              4768
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (749, 7)
4        Transformed data shape          (749, 7)
5   Transformed train set shape          (524, 7)
6    Transformed test set shape          (225, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1cc5
2023-12-13 14:28:50,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:28:50,584:INFO:setup() successfully completed in 1.34s...............
2023-12-13 14:28:50,617:INFO:Initializing compare_models()
2023-12-13 14:28:50,617:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:28:50,617:INFO:Checking exceptions
2023-12-13 14:28:50,617:INFO:Preparing display monitor
2023-12-13 14:28:50,638:INFO:Initializing Linear Regression
2023-12-13 14:28:50,638:INFO:Total runtime is 0.0 minutes
2023-12-13 14:28:50,639:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:50,641:INFO:Initializing create_model()
2023-12-13 14:28:50,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:50,641:INFO:Checking exceptions
2023-12-13 14:28:50,641:INFO:Importing libraries
2023-12-13 14:28:50,641:INFO:Copying training dataset
2023-12-13 14:28:50,642:INFO:Defining folds
2023-12-13 14:28:50,642:INFO:Declaring metric variables
2023-12-13 14:28:50,642:INFO:Importing untrained model
2023-12-13 14:28:50,642:INFO:Linear Regression Imported successfully
2023-12-13 14:28:50,655:INFO:Starting cross validation
2023-12-13 14:28:50,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:50,717:INFO:Calculating mean and std
2023-12-13 14:28:50,718:INFO:Creating metrics dataframe
2023-12-13 14:28:50,721:INFO:Uploading results into container
2023-12-13 14:28:50,721:INFO:Uploading model into container now
2023-12-13 14:28:50,722:INFO:_master_model_container: 1
2023-12-13 14:28:50,722:INFO:_display_container: 2
2023-12-13 14:28:50,722:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:28:50,722:INFO:create_model() successfully completed......................................
2023-12-13 14:28:50,834:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:50,834:INFO:Creating metrics dataframe
2023-12-13 14:28:50,834:INFO:Initializing Lasso Regression
2023-12-13 14:28:50,834:INFO:Total runtime is 0.0032669663429260253 minutes
2023-12-13 14:28:50,842:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:50,842:INFO:Initializing create_model()
2023-12-13 14:28:50,842:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:50,842:INFO:Checking exceptions
2023-12-13 14:28:50,842:INFO:Importing libraries
2023-12-13 14:28:50,842:INFO:Copying training dataset
2023-12-13 14:28:50,842:INFO:Defining folds
2023-12-13 14:28:50,842:INFO:Declaring metric variables
2023-12-13 14:28:50,842:INFO:Importing untrained model
2023-12-13 14:28:50,850:INFO:Lasso Regression Imported successfully
2023-12-13 14:28:50,850:INFO:Starting cross validation
2023-12-13 14:28:50,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:50,906:INFO:Calculating mean and std
2023-12-13 14:28:50,906:INFO:Creating metrics dataframe
2023-12-13 14:28:50,906:INFO:Uploading results into container
2023-12-13 14:28:50,906:INFO:Uploading model into container now
2023-12-13 14:28:50,906:INFO:_master_model_container: 2
2023-12-13 14:28:50,906:INFO:_display_container: 2
2023-12-13 14:28:50,906:INFO:Lasso(random_state=4768)
2023-12-13 14:28:50,906:INFO:create_model() successfully completed......................................
2023-12-13 14:28:51,000:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:51,000:INFO:Creating metrics dataframe
2023-12-13 14:28:51,000:INFO:Initializing Ridge Regression
2023-12-13 14:28:51,000:INFO:Total runtime is 0.006030356884002686 minutes
2023-12-13 14:28:51,007:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:51,007:INFO:Initializing create_model()
2023-12-13 14:28:51,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:51,008:INFO:Checking exceptions
2023-12-13 14:28:51,008:INFO:Importing libraries
2023-12-13 14:28:51,008:INFO:Copying training dataset
2023-12-13 14:28:51,008:INFO:Defining folds
2023-12-13 14:28:51,008:INFO:Declaring metric variables
2023-12-13 14:28:51,008:INFO:Importing untrained model
2023-12-13 14:28:51,015:INFO:Ridge Regression Imported successfully
2023-12-13 14:28:51,019:INFO:Starting cross validation
2023-12-13 14:28:51,020:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:51,069:INFO:Calculating mean and std
2023-12-13 14:28:51,069:INFO:Creating metrics dataframe
2023-12-13 14:28:51,069:INFO:Uploading results into container
2023-12-13 14:28:51,069:INFO:Uploading model into container now
2023-12-13 14:28:51,069:INFO:_master_model_container: 3
2023-12-13 14:28:51,069:INFO:_display_container: 2
2023-12-13 14:28:51,069:INFO:Ridge(random_state=4768)
2023-12-13 14:28:51,069:INFO:create_model() successfully completed......................................
2023-12-13 14:28:51,157:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:51,157:INFO:Creating metrics dataframe
2023-12-13 14:28:51,157:INFO:Initializing Elastic Net
2023-12-13 14:28:51,157:INFO:Total runtime is 0.00865936279296875 minutes
2023-12-13 14:28:51,167:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:51,167:INFO:Initializing create_model()
2023-12-13 14:28:51,167:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:51,167:INFO:Checking exceptions
2023-12-13 14:28:51,167:INFO:Importing libraries
2023-12-13 14:28:51,167:INFO:Copying training dataset
2023-12-13 14:28:51,170:INFO:Defining folds
2023-12-13 14:28:51,170:INFO:Declaring metric variables
2023-12-13 14:28:51,171:INFO:Importing untrained model
2023-12-13 14:28:51,175:INFO:Elastic Net Imported successfully
2023-12-13 14:28:51,179:INFO:Starting cross validation
2023-12-13 14:28:51,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:51,215:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.440e+12, tolerance: 6.139e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:28:51,215:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.226e+12, tolerance: 6.000e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:28:51,230:INFO:Calculating mean and std
2023-12-13 14:28:51,230:INFO:Creating metrics dataframe
2023-12-13 14:28:51,232:INFO:Uploading results into container
2023-12-13 14:28:51,232:INFO:Uploading model into container now
2023-12-13 14:28:51,232:INFO:_master_model_container: 4
2023-12-13 14:28:51,232:INFO:_display_container: 2
2023-12-13 14:28:51,232:INFO:ElasticNet(random_state=4768)
2023-12-13 14:28:51,232:INFO:create_model() successfully completed......................................
2023-12-13 14:28:51,320:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:51,320:INFO:Creating metrics dataframe
2023-12-13 14:28:51,326:INFO:Initializing Least Angle Regression
2023-12-13 14:28:51,327:INFO:Total runtime is 0.011487301190694174 minutes
2023-12-13 14:28:51,328:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:51,328:INFO:Initializing create_model()
2023-12-13 14:28:51,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:51,328:INFO:Checking exceptions
2023-12-13 14:28:51,328:INFO:Importing libraries
2023-12-13 14:28:51,328:INFO:Copying training dataset
2023-12-13 14:28:51,332:INFO:Defining folds
2023-12-13 14:28:51,332:INFO:Declaring metric variables
2023-12-13 14:28:51,335:INFO:Importing untrained model
2023-12-13 14:28:51,338:INFO:Least Angle Regression Imported successfully
2023-12-13 14:28:51,343:INFO:Starting cross validation
2023-12-13 14:28:51,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:51,393:INFO:Calculating mean and std
2023-12-13 14:28:51,393:INFO:Creating metrics dataframe
2023-12-13 14:28:51,393:INFO:Uploading results into container
2023-12-13 14:28:51,393:INFO:Uploading model into container now
2023-12-13 14:28:51,393:INFO:_master_model_container: 5
2023-12-13 14:28:51,393:INFO:_display_container: 2
2023-12-13 14:28:51,393:INFO:Lars(random_state=4768)
2023-12-13 14:28:51,393:INFO:create_model() successfully completed......................................
2023-12-13 14:28:51,482:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:51,482:INFO:Creating metrics dataframe
2023-12-13 14:28:51,493:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:28:51,493:INFO:Total runtime is 0.014247949918111166 minutes
2023-12-13 14:28:51,493:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:51,493:INFO:Initializing create_model()
2023-12-13 14:28:51,493:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:51,493:INFO:Checking exceptions
2023-12-13 14:28:51,493:INFO:Importing libraries
2023-12-13 14:28:51,493:INFO:Copying training dataset
2023-12-13 14:28:51,499:INFO:Defining folds
2023-12-13 14:28:51,499:INFO:Declaring metric variables
2023-12-13 14:28:51,499:INFO:Importing untrained model
2023-12-13 14:28:51,499:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:28:51,507:INFO:Starting cross validation
2023-12-13 14:28:51,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:51,570:INFO:Calculating mean and std
2023-12-13 14:28:51,570:INFO:Creating metrics dataframe
2023-12-13 14:28:51,570:INFO:Uploading results into container
2023-12-13 14:28:51,570:INFO:Uploading model into container now
2023-12-13 14:28:51,573:INFO:_master_model_container: 6
2023-12-13 14:28:51,573:INFO:_display_container: 2
2023-12-13 14:28:51,573:INFO:LassoLars(random_state=4768)
2023-12-13 14:28:51,573:INFO:create_model() successfully completed......................................
2023-12-13 14:28:51,669:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:51,669:INFO:Creating metrics dataframe
2023-12-13 14:28:51,676:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:28:51,676:INFO:Total runtime is 0.017300919691721598 minutes
2023-12-13 14:28:51,679:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:51,679:INFO:Initializing create_model()
2023-12-13 14:28:51,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:51,679:INFO:Checking exceptions
2023-12-13 14:28:51,679:INFO:Importing libraries
2023-12-13 14:28:51,680:INFO:Copying training dataset
2023-12-13 14:28:51,683:INFO:Defining folds
2023-12-13 14:28:51,683:INFO:Declaring metric variables
2023-12-13 14:28:51,685:INFO:Importing untrained model
2023-12-13 14:28:51,689:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:28:51,696:INFO:Starting cross validation
2023-12-13 14:28:51,696:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:51,759:INFO:Calculating mean and std
2023-12-13 14:28:51,759:INFO:Creating metrics dataframe
2023-12-13 14:28:51,761:INFO:Uploading results into container
2023-12-13 14:28:51,761:INFO:Uploading model into container now
2023-12-13 14:28:51,761:INFO:_master_model_container: 7
2023-12-13 14:28:51,761:INFO:_display_container: 2
2023-12-13 14:28:51,761:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:28:51,762:INFO:create_model() successfully completed......................................
2023-12-13 14:28:51,844:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:51,844:INFO:Creating metrics dataframe
2023-12-13 14:28:51,847:INFO:Initializing Bayesian Ridge
2023-12-13 14:28:51,847:INFO:Total runtime is 0.020157782236735027 minutes
2023-12-13 14:28:51,847:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:51,847:INFO:Initializing create_model()
2023-12-13 14:28:51,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:51,847:INFO:Checking exceptions
2023-12-13 14:28:51,847:INFO:Importing libraries
2023-12-13 14:28:51,847:INFO:Copying training dataset
2023-12-13 14:28:51,847:INFO:Defining folds
2023-12-13 14:28:51,847:INFO:Declaring metric variables
2023-12-13 14:28:51,857:INFO:Importing untrained model
2023-12-13 14:28:51,857:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:28:51,864:INFO:Starting cross validation
2023-12-13 14:28:51,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:51,925:INFO:Calculating mean and std
2023-12-13 14:28:51,925:INFO:Creating metrics dataframe
2023-12-13 14:28:51,925:INFO:Uploading results into container
2023-12-13 14:28:51,925:INFO:Uploading model into container now
2023-12-13 14:28:51,925:INFO:_master_model_container: 8
2023-12-13 14:28:51,925:INFO:_display_container: 2
2023-12-13 14:28:51,925:INFO:BayesianRidge()
2023-12-13 14:28:51,925:INFO:create_model() successfully completed......................................
2023-12-13 14:28:52,006:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:52,006:INFO:Creating metrics dataframe
2023-12-13 14:28:52,013:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:28:52,013:INFO:Total runtime is 0.02291544278462728 minutes
2023-12-13 14:28:52,015:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:52,016:INFO:Initializing create_model()
2023-12-13 14:28:52,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:52,016:INFO:Checking exceptions
2023-12-13 14:28:52,016:INFO:Importing libraries
2023-12-13 14:28:52,016:INFO:Copying training dataset
2023-12-13 14:28:52,019:INFO:Defining folds
2023-12-13 14:28:52,019:INFO:Declaring metric variables
2023-12-13 14:28:52,022:INFO:Importing untrained model
2023-12-13 14:28:52,023:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:28:52,023:INFO:Starting cross validation
2023-12-13 14:28:52,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:52,077:INFO:Calculating mean and std
2023-12-13 14:28:52,077:INFO:Creating metrics dataframe
2023-12-13 14:28:52,077:INFO:Uploading results into container
2023-12-13 14:28:52,077:INFO:Uploading model into container now
2023-12-13 14:28:52,077:INFO:_master_model_container: 9
2023-12-13 14:28:52,080:INFO:_display_container: 2
2023-12-13 14:28:52,080:INFO:PassiveAggressiveRegressor(random_state=4768)
2023-12-13 14:28:52,080:INFO:create_model() successfully completed......................................
2023-12-13 14:28:52,162:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:52,162:INFO:Creating metrics dataframe
2023-12-13 14:28:52,162:INFO:Initializing Huber Regressor
2023-12-13 14:28:52,177:INFO:Total runtime is 0.02565963665644328 minutes
2023-12-13 14:28:52,180:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:52,180:INFO:Initializing create_model()
2023-12-13 14:28:52,180:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:52,181:INFO:Checking exceptions
2023-12-13 14:28:52,181:INFO:Importing libraries
2023-12-13 14:28:52,181:INFO:Copying training dataset
2023-12-13 14:28:52,184:INFO:Defining folds
2023-12-13 14:28:52,184:INFO:Declaring metric variables
2023-12-13 14:28:52,184:INFO:Importing untrained model
2023-12-13 14:28:52,189:INFO:Huber Regressor Imported successfully
2023-12-13 14:28:52,193:INFO:Starting cross validation
2023-12-13 14:28:52,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:52,254:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:28:52,254:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:28:52,272:INFO:Calculating mean and std
2023-12-13 14:28:52,272:INFO:Creating metrics dataframe
2023-12-13 14:28:52,272:INFO:Uploading results into container
2023-12-13 14:28:52,272:INFO:Uploading model into container now
2023-12-13 14:28:52,272:INFO:_master_model_container: 10
2023-12-13 14:28:52,272:INFO:_display_container: 2
2023-12-13 14:28:52,272:INFO:HuberRegressor()
2023-12-13 14:28:52,272:INFO:create_model() successfully completed......................................
2023-12-13 14:28:52,355:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:52,355:INFO:Creating metrics dataframe
2023-12-13 14:28:52,355:INFO:Initializing K Neighbors Regressor
2023-12-13 14:28:52,355:INFO:Total runtime is 0.02861731052398682 minutes
2023-12-13 14:28:52,355:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:52,355:INFO:Initializing create_model()
2023-12-13 14:28:52,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:52,355:INFO:Checking exceptions
2023-12-13 14:28:52,355:INFO:Importing libraries
2023-12-13 14:28:52,355:INFO:Copying training dataset
2023-12-13 14:28:52,371:INFO:Defining folds
2023-12-13 14:28:52,371:INFO:Declaring metric variables
2023-12-13 14:28:52,371:INFO:Importing untrained model
2023-12-13 14:28:52,377:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:28:52,382:INFO:Starting cross validation
2023-12-13 14:28:52,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:52,462:INFO:Calculating mean and std
2023-12-13 14:28:52,462:INFO:Creating metrics dataframe
2023-12-13 14:28:52,462:INFO:Uploading results into container
2023-12-13 14:28:52,462:INFO:Uploading model into container now
2023-12-13 14:28:52,462:INFO:_master_model_container: 11
2023-12-13 14:28:52,462:INFO:_display_container: 2
2023-12-13 14:28:52,462:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:28:52,462:INFO:create_model() successfully completed......................................
2023-12-13 14:28:52,548:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:52,548:INFO:Creating metrics dataframe
2023-12-13 14:28:52,548:INFO:Initializing Decision Tree Regressor
2023-12-13 14:28:52,548:INFO:Total runtime is 0.03182845910390218 minutes
2023-12-13 14:28:52,548:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:52,548:INFO:Initializing create_model()
2023-12-13 14:28:52,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:52,548:INFO:Checking exceptions
2023-12-13 14:28:52,548:INFO:Importing libraries
2023-12-13 14:28:52,548:INFO:Copying training dataset
2023-12-13 14:28:52,548:INFO:Defining folds
2023-12-13 14:28:52,548:INFO:Declaring metric variables
2023-12-13 14:28:52,565:INFO:Importing untrained model
2023-12-13 14:28:52,565:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:28:52,572:INFO:Starting cross validation
2023-12-13 14:28:52,573:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:52,624:INFO:Calculating mean and std
2023-12-13 14:28:52,624:INFO:Creating metrics dataframe
2023-12-13 14:28:52,624:INFO:Uploading results into container
2023-12-13 14:28:52,624:INFO:Uploading model into container now
2023-12-13 14:28:52,624:INFO:_master_model_container: 12
2023-12-13 14:28:52,624:INFO:_display_container: 2
2023-12-13 14:28:52,624:INFO:DecisionTreeRegressor(random_state=4768)
2023-12-13 14:28:52,624:INFO:create_model() successfully completed......................................
2023-12-13 14:28:52,708:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:52,708:INFO:Creating metrics dataframe
2023-12-13 14:28:52,717:INFO:Initializing Random Forest Regressor
2023-12-13 14:28:52,717:INFO:Total runtime is 0.034645807743072514 minutes
2023-12-13 14:28:52,717:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:52,717:INFO:Initializing create_model()
2023-12-13 14:28:52,717:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:52,717:INFO:Checking exceptions
2023-12-13 14:28:52,717:INFO:Importing libraries
2023-12-13 14:28:52,717:INFO:Copying training dataset
2023-12-13 14:28:52,717:INFO:Defining folds
2023-12-13 14:28:52,717:INFO:Declaring metric variables
2023-12-13 14:28:52,727:INFO:Importing untrained model
2023-12-13 14:28:52,730:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:28:52,730:INFO:Starting cross validation
2023-12-13 14:28:52,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:53,092:INFO:Calculating mean and std
2023-12-13 14:28:53,092:INFO:Creating metrics dataframe
2023-12-13 14:28:53,094:INFO:Uploading results into container
2023-12-13 14:28:53,094:INFO:Uploading model into container now
2023-12-13 14:28:53,094:INFO:_master_model_container: 13
2023-12-13 14:28:53,094:INFO:_display_container: 2
2023-12-13 14:28:53,094:INFO:RandomForestRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:28:53,094:INFO:create_model() successfully completed......................................
2023-12-13 14:28:53,172:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:53,172:INFO:Creating metrics dataframe
2023-12-13 14:28:53,187:INFO:Initializing Extra Trees Regressor
2023-12-13 14:28:53,187:INFO:Total runtime is 0.042487525939941415 minutes
2023-12-13 14:28:53,187:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:53,187:INFO:Initializing create_model()
2023-12-13 14:28:53,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:53,187:INFO:Checking exceptions
2023-12-13 14:28:53,187:INFO:Importing libraries
2023-12-13 14:28:53,187:INFO:Copying training dataset
2023-12-13 14:28:53,187:INFO:Defining folds
2023-12-13 14:28:53,187:INFO:Declaring metric variables
2023-12-13 14:28:53,194:INFO:Importing untrained model
2023-12-13 14:28:53,194:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:28:53,194:INFO:Starting cross validation
2023-12-13 14:28:53,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:53,508:INFO:Calculating mean and std
2023-12-13 14:28:53,508:INFO:Creating metrics dataframe
2023-12-13 14:28:53,508:INFO:Uploading results into container
2023-12-13 14:28:53,508:INFO:Uploading model into container now
2023-12-13 14:28:53,508:INFO:_master_model_container: 14
2023-12-13 14:28:53,508:INFO:_display_container: 2
2023-12-13 14:28:53,508:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:28:53,508:INFO:create_model() successfully completed......................................
2023-12-13 14:28:53,594:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:53,594:INFO:Creating metrics dataframe
2023-12-13 14:28:53,603:INFO:Initializing AdaBoost Regressor
2023-12-13 14:28:53,603:INFO:Total runtime is 0.04942620197931926 minutes
2023-12-13 14:28:53,603:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:53,603:INFO:Initializing create_model()
2023-12-13 14:28:53,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:53,603:INFO:Checking exceptions
2023-12-13 14:28:53,603:INFO:Importing libraries
2023-12-13 14:28:53,603:INFO:Copying training dataset
2023-12-13 14:28:53,603:INFO:Defining folds
2023-12-13 14:28:53,603:INFO:Declaring metric variables
2023-12-13 14:28:53,603:INFO:Importing untrained model
2023-12-13 14:28:53,603:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:28:53,619:INFO:Starting cross validation
2023-12-13 14:28:53,621:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:53,734:INFO:Calculating mean and std
2023-12-13 14:28:53,734:INFO:Creating metrics dataframe
2023-12-13 14:28:53,734:INFO:Uploading results into container
2023-12-13 14:28:53,734:INFO:Uploading model into container now
2023-12-13 14:28:53,734:INFO:_master_model_container: 15
2023-12-13 14:28:53,734:INFO:_display_container: 2
2023-12-13 14:28:53,734:INFO:AdaBoostRegressor(random_state=4768)
2023-12-13 14:28:53,734:INFO:create_model() successfully completed......................................
2023-12-13 14:28:53,812:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:53,812:INFO:Creating metrics dataframe
2023-12-13 14:28:53,827:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:28:53,827:INFO:Total runtime is 0.053154484430948896 minutes
2023-12-13 14:28:53,827:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:53,827:INFO:Initializing create_model()
2023-12-13 14:28:53,827:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:53,827:INFO:Checking exceptions
2023-12-13 14:28:53,827:INFO:Importing libraries
2023-12-13 14:28:53,827:INFO:Copying training dataset
2023-12-13 14:28:53,827:INFO:Defining folds
2023-12-13 14:28:53,827:INFO:Declaring metric variables
2023-12-13 14:28:53,827:INFO:Importing untrained model
2023-12-13 14:28:53,827:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:28:53,843:INFO:Starting cross validation
2023-12-13 14:28:53,843:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:53,975:INFO:Calculating mean and std
2023-12-13 14:28:53,975:INFO:Creating metrics dataframe
2023-12-13 14:28:53,978:INFO:Uploading results into container
2023-12-13 14:28:53,978:INFO:Uploading model into container now
2023-12-13 14:28:53,978:INFO:_master_model_container: 16
2023-12-13 14:28:53,979:INFO:_display_container: 2
2023-12-13 14:28:53,979:INFO:GradientBoostingRegressor(random_state=4768)
2023-12-13 14:28:53,979:INFO:create_model() successfully completed......................................
2023-12-13 14:28:54,049:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:54,049:INFO:Creating metrics dataframe
2023-12-13 14:28:54,070:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:28:54,070:INFO:Total runtime is 0.057209304968516034 minutes
2023-12-13 14:28:54,072:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:54,072:INFO:Initializing create_model()
2023-12-13 14:28:54,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:54,072:INFO:Checking exceptions
2023-12-13 14:28:54,072:INFO:Importing libraries
2023-12-13 14:28:54,072:INFO:Copying training dataset
2023-12-13 14:28:54,072:INFO:Defining folds
2023-12-13 14:28:54,072:INFO:Declaring metric variables
2023-12-13 14:28:54,072:INFO:Importing untrained model
2023-12-13 14:28:54,072:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:28:54,085:INFO:Starting cross validation
2023-12-13 14:28:54,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:54,584:INFO:Calculating mean and std
2023-12-13 14:28:54,586:INFO:Creating metrics dataframe
2023-12-13 14:28:54,588:INFO:Uploading results into container
2023-12-13 14:28:54,589:INFO:Uploading model into container now
2023-12-13 14:28:54,590:INFO:_master_model_container: 17
2023-12-13 14:28:54,590:INFO:_display_container: 2
2023-12-13 14:28:54,590:INFO:LGBMRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:28:54,590:INFO:create_model() successfully completed......................................
2023-12-13 14:28:54,688:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:54,688:INFO:Creating metrics dataframe
2023-12-13 14:28:54,695:INFO:Initializing Dummy Regressor
2023-12-13 14:28:54,695:INFO:Total runtime is 0.06762670675913493 minutes
2023-12-13 14:28:54,704:INFO:SubProcess create_model() called ==================================
2023-12-13 14:28:54,704:INFO:Initializing create_model()
2023-12-13 14:28:54,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284C5C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:54,704:INFO:Checking exceptions
2023-12-13 14:28:54,704:INFO:Importing libraries
2023-12-13 14:28:54,704:INFO:Copying training dataset
2023-12-13 14:28:54,704:INFO:Defining folds
2023-12-13 14:28:54,704:INFO:Declaring metric variables
2023-12-13 14:28:54,710:INFO:Importing untrained model
2023-12-13 14:28:54,712:INFO:Dummy Regressor Imported successfully
2023-12-13 14:28:54,717:INFO:Starting cross validation
2023-12-13 14:28:54,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:54,787:INFO:Calculating mean and std
2023-12-13 14:28:54,787:INFO:Creating metrics dataframe
2023-12-13 14:28:54,787:INFO:Uploading results into container
2023-12-13 14:28:54,787:INFO:Uploading model into container now
2023-12-13 14:28:54,787:INFO:_master_model_container: 18
2023-12-13 14:28:54,787:INFO:_display_container: 2
2023-12-13 14:28:54,787:INFO:DummyRegressor()
2023-12-13 14:28:54,787:INFO:create_model() successfully completed......................................
2023-12-13 14:28:54,868:INFO:SubProcess create_model() end ==================================
2023-12-13 14:28:54,868:INFO:Creating metrics dataframe
2023-12-13 14:28:54,884:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:28:54,892:INFO:Initializing create_model()
2023-12-13 14:28:54,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:54,892:INFO:Checking exceptions
2023-12-13 14:28:54,893:INFO:Importing libraries
2023-12-13 14:28:54,893:INFO:Copying training dataset
2023-12-13 14:28:54,895:INFO:Defining folds
2023-12-13 14:28:54,895:INFO:Declaring metric variables
2023-12-13 14:28:54,895:INFO:Importing untrained model
2023-12-13 14:28:54,895:INFO:Declaring custom model
2023-12-13 14:28:54,895:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:28:54,895:INFO:Cross validation set to False
2023-12-13 14:28:54,895:INFO:Fitting Model
2023-12-13 14:28:54,992:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:28:54,992:INFO:create_model() successfully completed......................................
2023-12-13 14:28:55,100:INFO:_master_model_container: 18
2023-12-13 14:28:55,100:INFO:_display_container: 2
2023-12-13 14:28:55,101:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:28:55,101:INFO:compare_models() successfully completed......................................
2023-12-13 14:28:55,144:INFO:Initializing create_model()
2023-12-13 14:28:55,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:28:55,144:INFO:Checking exceptions
2023-12-13 14:28:55,158:INFO:Importing libraries
2023-12-13 14:28:55,158:INFO:Copying training dataset
2023-12-13 14:28:55,162:INFO:Defining folds
2023-12-13 14:28:55,162:INFO:Declaring metric variables
2023-12-13 14:28:55,165:INFO:Importing untrained model
2023-12-13 14:28:55,168:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:28:55,173:INFO:Starting cross validation
2023-12-13 14:28:55,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:28:55,538:INFO:Calculating mean and std
2023-12-13 14:28:55,538:INFO:Creating metrics dataframe
2023-12-13 14:28:55,538:INFO:Finalizing model
2023-12-13 14:28:55,665:INFO:Uploading results into container
2023-12-13 14:28:55,665:INFO:Uploading model into container now
2023-12-13 14:28:55,665:INFO:_master_model_container: 19
2023-12-13 14:28:55,665:INFO:_display_container: 3
2023-12-13 14:28:55,665:INFO:RandomForestRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:28:55,665:INFO:create_model() successfully completed......................................
2023-12-13 14:28:55,778:INFO:Initializing tune_model()
2023-12-13 14:28:55,778:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:28:55,778:INFO:Checking exceptions
2023-12-13 14:28:55,791:INFO:Copying training dataset
2023-12-13 14:28:55,794:INFO:Checking base model
2023-12-13 14:28:55,794:INFO:Base model : Random Forest Regressor
2023-12-13 14:28:55,798:INFO:Declaring metric variables
2023-12-13 14:28:55,802:INFO:Defining Hyperparameters
2023-12-13 14:28:55,909:INFO:Tuning with n_jobs=-1
2023-12-13 14:28:55,909:INFO:Initializing RandomizedSearchCV
2023-12-13 14:29:00,553:INFO:best_params: {'actual_estimator__n_estimators': 170, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:29:00,554:INFO:Hyperparameter search completed
2023-12-13 14:29:00,554:INFO:SubProcess create_model() called ==================================
2023-12-13 14:29:00,554:INFO:Initializing create_model()
2023-12-13 14:29:00,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B284528D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 170, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-13 14:29:00,555:INFO:Checking exceptions
2023-12-13 14:29:00,555:INFO:Importing libraries
2023-12-13 14:29:00,555:INFO:Copying training dataset
2023-12-13 14:29:00,558:INFO:Defining folds
2023-12-13 14:29:00,558:INFO:Declaring metric variables
2023-12-13 14:29:00,558:INFO:Importing untrained model
2023-12-13 14:29:00,558:INFO:Declaring custom model
2023-12-13 14:29:00,558:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:29:00,566:INFO:Starting cross validation
2023-12-13 14:29:00,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:29:01,962:INFO:Calculating mean and std
2023-12-13 14:29:01,964:INFO:Creating metrics dataframe
2023-12-13 14:29:01,968:INFO:Finalizing model
2023-12-13 14:29:02,674:INFO:Uploading results into container
2023-12-13 14:29:02,675:INFO:Uploading model into container now
2023-12-13 14:29:02,676:INFO:_master_model_container: 20
2023-12-13 14:29:02,676:INFO:_display_container: 4
2023-12-13 14:29:02,676:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=11,
                      min_impurity_decrease=0.0005, min_samples_leaf=2,
                      n_estimators=170, n_jobs=-1, random_state=4768)
2023-12-13 14:29:02,676:INFO:create_model() successfully completed......................................
2023-12-13 14:29:02,764:INFO:SubProcess create_model() end ==================================
2023-12-13 14:29:02,764:INFO:choose_better activated
2023-12-13 14:29:02,766:INFO:SubProcess create_model() called ==================================
2023-12-13 14:29:02,766:INFO:Initializing create_model()
2023-12-13 14:29:02,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:29:02,766:INFO:Checking exceptions
2023-12-13 14:29:02,766:INFO:Importing libraries
2023-12-13 14:29:02,766:INFO:Copying training dataset
2023-12-13 14:29:02,772:INFO:Defining folds
2023-12-13 14:29:02,772:INFO:Declaring metric variables
2023-12-13 14:29:02,772:INFO:Importing untrained model
2023-12-13 14:29:02,772:INFO:Declaring custom model
2023-12-13 14:29:02,773:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:29:02,773:INFO:Starting cross validation
2023-12-13 14:29:02,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:29:03,142:INFO:Calculating mean and std
2023-12-13 14:29:03,142:INFO:Creating metrics dataframe
2023-12-13 14:29:03,142:INFO:Finalizing model
2023-12-13 14:29:03,272:INFO:Uploading results into container
2023-12-13 14:29:03,273:INFO:Uploading model into container now
2023-12-13 14:29:03,273:INFO:_master_model_container: 21
2023-12-13 14:29:03,274:INFO:_display_container: 5
2023-12-13 14:29:03,274:INFO:RandomForestRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:29:03,275:INFO:create_model() successfully completed......................................
2023-12-13 14:29:03,361:INFO:SubProcess create_model() end ==================================
2023-12-13 14:29:03,361:INFO:RandomForestRegressor(n_jobs=-1, random_state=4768) result for R2 is 0.6912
2023-12-13 14:29:03,361:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=11,
                      min_impurity_decrease=0.0005, min_samples_leaf=2,
                      n_estimators=170, n_jobs=-1, random_state=4768) result for R2 is 0.6721
2023-12-13 14:29:03,361:INFO:RandomForestRegressor(n_jobs=-1, random_state=4768) is best model
2023-12-13 14:29:03,361:INFO:choose_better completed
2023-12-13 14:29:03,361:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:29:03,370:INFO:_master_model_container: 21
2023-12-13 14:29:03,370:INFO:_display_container: 4
2023-12-13 14:29:03,370:INFO:RandomForestRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:29:03,370:INFO:tune_model() successfully completed......................................
2023-12-13 14:29:03,487:INFO:Initializing plot_model()
2023-12-13 14:29:03,487:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:29:03,487:INFO:Checking exceptions
2023-12-13 14:29:03,509:INFO:Preloading libraries
2023-12-13 14:29:03,521:INFO:Copying training dataset
2023-12-13 14:29:03,521:INFO:Plot type: residuals
2023-12-13 14:29:03,576:INFO:Fitting Model
2023-12-13 14:29:03,576:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:29:03,655:INFO:Scoring test/hold-out set
2023-12-13 14:29:03,952:INFO:Visual Rendered Successfully
2023-12-13 14:29:04,047:INFO:plot_model() successfully completed......................................
2023-12-13 14:29:04,061:INFO:Initializing plot_model()
2023-12-13 14:29:04,061:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:29:04,062:INFO:Checking exceptions
2023-12-13 14:29:04,083:INFO:Preloading libraries
2023-12-13 14:29:04,089:INFO:Copying training dataset
2023-12-13 14:29:04,089:INFO:Plot type: feature
2023-12-13 14:29:04,090:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:29:04,205:INFO:Visual Rendered Successfully
2023-12-13 14:29:04,293:INFO:plot_model() successfully completed......................................
2023-12-13 14:29:04,311:INFO:Initializing predict_model()
2023-12-13 14:29:04,311:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AEE1A80>)
2023-12-13 14:29:04,312:INFO:Checking exceptions
2023-12-13 14:29:04,312:INFO:Preloading libraries
2023-12-13 14:29:04,479:INFO:Initializing finalize_model()
2023-12-13 14:29:04,479:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:29:04,479:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:29:04,481:INFO:Initializing create_model()
2023-12-13 14:29:04,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4768), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:29:04,482:INFO:Checking exceptions
2023-12-13 14:29:04,483:INFO:Importing libraries
2023-12-13 14:29:04,483:INFO:Copying training dataset
2023-12-13 14:29:04,484:INFO:Defining folds
2023-12-13 14:29:04,484:INFO:Declaring metric variables
2023-12-13 14:29:04,484:INFO:Importing untrained model
2023-12-13 14:29:04,484:INFO:Declaring custom model
2023-12-13 14:29:04,484:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:29:04,485:INFO:Cross validation set to False
2023-12-13 14:29:04,485:INFO:Fitting Model
2023-12-13 14:29:04,606:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))])
2023-12-13 14:29:04,606:INFO:create_model() successfully completed......................................
2023-12-13 14:29:04,693:INFO:_master_model_container: 21
2023-12-13 14:29:04,693:INFO:_display_container: 5
2023-12-13 14:29:04,697:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))])
2023-12-13 14:29:04,697:INFO:finalize_model() successfully completed......................................
2023-12-13 14:29:04,807:INFO:Initializing predict_model()
2023-12-13 14:29:04,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AFB9760>)
2023-12-13 14:29:04,808:INFO:Checking exceptions
2023-12-13 14:29:04,808:INFO:Preloading libraries
2023-12-13 14:29:04,982:INFO:Initializing predict_model()
2023-12-13 14:29:04,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AEE1440>)
2023-12-13 14:29:04,983:INFO:Checking exceptions
2023-12-13 14:29:04,983:INFO:Preloading libraries
2023-12-13 14:29:04,985:INFO:Set up data.
2023-12-13 14:29:04,988:INFO:Set up index.
2023-12-13 14:29:51,194:INFO:Initializing predict_model()
2023-12-13 14:29:51,194:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2ABB3CE0>)
2023-12-13 14:29:51,194:INFO:Checking exceptions
2023-12-13 14:29:51,194:INFO:Preloading libraries
2023-12-13 14:29:51,194:INFO:Set up data.
2023-12-13 14:29:51,194:INFO:Set up index.
2023-12-13 14:31:18,632:INFO:Initializing create_model()
2023-12-13 14:31:18,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:31:18,640:INFO:Checking exceptions
2023-12-13 14:31:18,653:INFO:Importing libraries
2023-12-13 14:31:18,653:INFO:Copying training dataset
2023-12-13 14:31:18,656:INFO:Defining folds
2023-12-13 14:31:18,656:INFO:Declaring metric variables
2023-12-13 14:31:18,659:INFO:Importing untrained model
2023-12-13 14:31:18,662:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:31:18,667:INFO:Starting cross validation
2023-12-13 14:31:18,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:31:19,028:INFO:Calculating mean and std
2023-12-13 14:31:19,028:INFO:Creating metrics dataframe
2023-12-13 14:31:19,032:INFO:Finalizing model
2023-12-13 14:31:19,129:INFO:Uploading results into container
2023-12-13 14:31:19,130:INFO:Uploading model into container now
2023-12-13 14:31:19,135:INFO:_master_model_container: 22
2023-12-13 14:31:19,135:INFO:_display_container: 9
2023-12-13 14:31:19,135:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:31:19,135:INFO:create_model() successfully completed......................................
2023-12-13 14:31:38,273:INFO:Initializing tune_model()
2023-12-13 14:31:38,273:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:31:38,273:INFO:Checking exceptions
2023-12-13 14:31:38,292:INFO:Copying training dataset
2023-12-13 14:31:38,294:INFO:Checking base model
2023-12-13 14:31:38,294:INFO:Base model : Extra Trees Regressor
2023-12-13 14:31:38,297:INFO:Declaring metric variables
2023-12-13 14:31:38,299:INFO:Defining Hyperparameters
2023-12-13 14:31:38,399:INFO:Tuning with n_jobs=-1
2023-12-13 14:31:38,400:INFO:Initializing RandomizedSearchCV
2023-12-13 14:31:42,103:INFO:best_params: {'actual_estimator__n_estimators': 170, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:31:42,103:INFO:Hyperparameter search completed
2023-12-13 14:31:42,103:INFO:SubProcess create_model() called ==================================
2023-12-13 14:31:42,103:INFO:Initializing create_model()
2023-12-13 14:31:42,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B4B0DD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 170, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-13 14:31:42,103:INFO:Checking exceptions
2023-12-13 14:31:42,103:INFO:Importing libraries
2023-12-13 14:31:42,103:INFO:Copying training dataset
2023-12-13 14:31:42,109:INFO:Defining folds
2023-12-13 14:31:42,109:INFO:Declaring metric variables
2023-12-13 14:31:42,109:INFO:Importing untrained model
2023-12-13 14:31:42,109:INFO:Declaring custom model
2023-12-13 14:31:42,109:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:31:42,117:INFO:Starting cross validation
2023-12-13 14:31:42,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:31:43,297:INFO:Calculating mean and std
2023-12-13 14:31:43,298:INFO:Creating metrics dataframe
2023-12-13 14:31:43,302:INFO:Finalizing model
2023-12-13 14:31:43,918:INFO:Uploading results into container
2023-12-13 14:31:43,918:INFO:Uploading model into container now
2023-12-13 14:31:43,919:INFO:_master_model_container: 23
2023-12-13 14:31:43,919:INFO:_display_container: 10
2023-12-13 14:31:43,919:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=11,
                    min_impurity_decrease=0.0005, min_samples_leaf=2,
                    n_estimators=170, n_jobs=-1, random_state=4768)
2023-12-13 14:31:43,919:INFO:create_model() successfully completed......................................
2023-12-13 14:31:44,005:INFO:SubProcess create_model() end ==================================
2023-12-13 14:31:44,005:INFO:choose_better activated
2023-12-13 14:31:44,010:INFO:SubProcess create_model() called ==================================
2023-12-13 14:31:44,010:INFO:Initializing create_model()
2023-12-13 14:31:44,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:31:44,010:INFO:Checking exceptions
2023-12-13 14:31:44,012:INFO:Importing libraries
2023-12-13 14:31:44,012:INFO:Copying training dataset
2023-12-13 14:31:44,013:INFO:Defining folds
2023-12-13 14:31:44,013:INFO:Declaring metric variables
2023-12-13 14:31:44,013:INFO:Importing untrained model
2023-12-13 14:31:44,013:INFO:Declaring custom model
2023-12-13 14:31:44,013:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:31:44,013:INFO:Starting cross validation
2023-12-13 14:31:44,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:31:44,313:INFO:Calculating mean and std
2023-12-13 14:31:44,313:INFO:Creating metrics dataframe
2023-12-13 14:31:44,313:INFO:Finalizing model
2023-12-13 14:31:44,407:INFO:Uploading results into container
2023-12-13 14:31:44,407:INFO:Uploading model into container now
2023-12-13 14:31:44,407:INFO:_master_model_container: 24
2023-12-13 14:31:44,407:INFO:_display_container: 11
2023-12-13 14:31:44,410:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:31:44,410:INFO:create_model() successfully completed......................................
2023-12-13 14:31:44,496:INFO:SubProcess create_model() end ==================================
2023-12-13 14:31:44,496:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768) result for R2 is 0.6942
2023-12-13 14:31:44,496:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=11,
                    min_impurity_decrease=0.0005, min_samples_leaf=2,
                    n_estimators=170, n_jobs=-1, random_state=4768) result for R2 is 0.6673
2023-12-13 14:31:44,496:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768) is best model
2023-12-13 14:31:44,496:INFO:choose_better completed
2023-12-13 14:31:44,496:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:31:44,504:INFO:_master_model_container: 24
2023-12-13 14:31:44,504:INFO:_display_container: 10
2023-12-13 14:31:44,504:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:31:44,504:INFO:tune_model() successfully completed......................................
2023-12-13 14:31:58,496:INFO:Initializing plot_model()
2023-12-13 14:31:58,496:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:31:58,496:INFO:Checking exceptions
2023-12-13 14:31:58,515:INFO:Preloading libraries
2023-12-13 14:31:58,533:INFO:Copying training dataset
2023-12-13 14:31:58,534:INFO:Plot type: residuals
2023-12-13 14:31:58,605:INFO:Fitting Model
2023-12-13 14:31:58,605:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:31:58,665:INFO:Scoring test/hold-out set
2023-12-13 14:31:58,937:INFO:Visual Rendered Successfully
2023-12-13 14:31:59,020:INFO:plot_model() successfully completed......................................
2023-12-13 14:32:33,418:INFO:Initializing plot_model()
2023-12-13 14:32:33,418:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:32:33,418:INFO:Checking exceptions
2023-12-13 14:32:33,444:INFO:Preloading libraries
2023-12-13 14:32:33,454:INFO:Copying training dataset
2023-12-13 14:32:33,454:INFO:Plot type: feature
2023-12-13 14:32:33,455:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:32:33,563:INFO:Visual Rendered Successfully
2023-12-13 14:32:33,651:INFO:plot_model() successfully completed......................................
2023-12-13 14:33:01,220:INFO:Initializing predict_model()
2023-12-13 14:33:01,220:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2ABB2E80>)
2023-12-13 14:33:01,220:INFO:Checking exceptions
2023-12-13 14:33:01,220:INFO:Preloading libraries
2023-12-13 14:33:07,475:INFO:Initializing finalize_model()
2023-12-13 14:33:07,475:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:33:07,475:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=4768)
2023-12-13 14:33:07,478:INFO:Initializing create_model()
2023-12-13 14:33:07,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4768), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:33:07,478:INFO:Checking exceptions
2023-12-13 14:33:07,480:INFO:Importing libraries
2023-12-13 14:33:07,480:INFO:Copying training dataset
2023-12-13 14:33:07,480:INFO:Defining folds
2023-12-13 14:33:07,480:INFO:Declaring metric variables
2023-12-13 14:33:07,480:INFO:Importing untrained model
2023-12-13 14:33:07,480:INFO:Declaring custom model
2023-12-13 14:33:07,481:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:33:07,481:INFO:Cross validation set to False
2023-12-13 14:33:07,481:INFO:Fitting Model
2023-12-13 14:33:07,579:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4768))])
2023-12-13 14:33:07,579:INFO:create_model() successfully completed......................................
2023-12-13 14:33:07,684:INFO:_master_model_container: 24
2023-12-13 14:33:07,685:INFO:_display_container: 11
2023-12-13 14:33:07,689:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4768))])
2023-12-13 14:33:07,689:INFO:finalize_model() successfully completed......................................
2023-12-13 14:33:24,754:INFO:Initializing predict_model()
2023-12-13 14:33:24,754:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B665ABA60>)
2023-12-13 14:33:24,754:INFO:Checking exceptions
2023-12-13 14:33:24,754:INFO:Preloading libraries
2023-12-13 14:33:40,792:INFO:Initializing predict_model()
2023-12-13 14:33:40,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B6377FF60>)
2023-12-13 14:33:40,792:INFO:Checking exceptions
2023-12-13 14:33:40,792:INFO:Preloading libraries
2023-12-13 14:33:40,792:INFO:Set up data.
2023-12-13 14:33:40,801:INFO:Set up index.
2023-12-13 14:33:51,100:INFO:Initializing predict_model()
2023-12-13 14:33:51,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B665ABA60>)
2023-12-13 14:33:51,100:INFO:Checking exceptions
2023-12-13 14:33:51,100:INFO:Preloading libraries
2023-12-13 14:33:51,100:INFO:Set up data.
2023-12-13 14:33:51,108:INFO:Set up index.
2023-12-13 14:33:53,987:INFO:Initializing predict_model()
2023-12-13 14:33:53,993:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B24E700>)
2023-12-13 14:33:53,993:INFO:Checking exceptions
2023-12-13 14:33:53,993:INFO:Preloading libraries
2023-12-13 14:33:53,995:INFO:Set up data.
2023-12-13 14:33:53,998:INFO:Set up index.
2023-12-13 14:33:58,353:INFO:Initializing predict_model()
2023-12-13 14:33:58,353:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AFBBEC0>)
2023-12-13 14:33:58,353:INFO:Checking exceptions
2023-12-13 14:33:58,353:INFO:Preloading libraries
2023-12-13 14:33:58,353:INFO:Set up data.
2023-12-13 14:33:58,353:INFO:Set up index.
2023-12-13 14:34:00,100:INFO:Initializing predict_model()
2023-12-13 14:34:00,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2AE42810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4768))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B665ABA60>)
2023-12-13 14:34:00,100:INFO:Checking exceptions
2023-12-13 14:34:00,100:INFO:Preloading libraries
2023-12-13 14:34:00,100:INFO:Set up data.
2023-12-13 14:34:00,100:INFO:Set up index.
2023-12-13 14:34:05,175:INFO:PyCaret RegressionExperiment
2023-12-13 14:34:05,175:INFO:Logging name: reg-default-name
2023-12-13 14:34:05,175:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:34:05,175:INFO:version 3.2.0
2023-12-13 14:34:05,175:INFO:Initializing setup()
2023-12-13 14:34:05,175:INFO:self.USI: ac32
2023-12-13 14:34:05,175:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:34:05,175:INFO:Checking environment
2023-12-13 14:34:05,175:INFO:python_version: 3.11.0
2023-12-13 14:34:05,175:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:34:05,175:INFO:machine: AMD64
2023-12-13 14:34:05,175:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:34:05,187:INFO:Memory: svmem(total=14877257728, available=1996042240, percent=86.6, used=12881215488, free=1996042240)
2023-12-13 14:34:05,187:INFO:Physical Core: 8
2023-12-13 14:34:05,187:INFO:Logical Core: 16
2023-12-13 14:34:05,187:INFO:Checking libraries
2023-12-13 14:34:05,187:INFO:System:
2023-12-13 14:34:05,187:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:34:05,187:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:34:05,187:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:34:05,187:INFO:PyCaret required dependencies:
2023-12-13 14:34:05,187:INFO:                 pip: 23.3.1
2023-12-13 14:34:05,187:INFO:          setuptools: 65.5.0
2023-12-13 14:34:05,188:INFO:             pycaret: 3.2.0
2023-12-13 14:34:05,188:INFO:             IPython: 8.18.1
2023-12-13 14:34:05,188:INFO:          ipywidgets: 8.1.1
2023-12-13 14:34:05,188:INFO:                tqdm: 4.66.1
2023-12-13 14:34:05,188:INFO:               numpy: 1.25.2
2023-12-13 14:34:05,188:INFO:              pandas: 2.1.4
2023-12-13 14:34:05,188:INFO:              jinja2: 3.1.2
2023-12-13 14:34:05,188:INFO:               scipy: 1.10.1
2023-12-13 14:34:05,188:INFO:              joblib: 1.3.2
2023-12-13 14:34:05,188:INFO:             sklearn: 1.2.2
2023-12-13 14:34:05,188:INFO:                pyod: 1.1.2
2023-12-13 14:34:05,188:INFO:            imblearn: 0.11.0
2023-12-13 14:34:05,188:INFO:   category_encoders: 2.6.3
2023-12-13 14:34:05,188:INFO:            lightgbm: 4.1.0
2023-12-13 14:34:05,188:INFO:               numba: 0.58.1
2023-12-13 14:34:05,188:INFO:            requests: 2.31.0
2023-12-13 14:34:05,188:INFO:          matplotlib: 3.6.0
2023-12-13 14:34:05,188:INFO:          scikitplot: 0.3.7
2023-12-13 14:34:05,188:INFO:         yellowbrick: 1.5
2023-12-13 14:34:05,188:INFO:              plotly: 5.18.0
2023-12-13 14:34:05,188:INFO:    plotly-resampler: Not installed
2023-12-13 14:34:05,188:INFO:             kaleido: 0.2.1
2023-12-13 14:34:05,188:INFO:           schemdraw: 0.15
2023-12-13 14:34:05,188:INFO:         statsmodels: 0.14.0
2023-12-13 14:34:05,188:INFO:              sktime: 0.21.1
2023-12-13 14:34:05,188:INFO:               tbats: 1.1.3
2023-12-13 14:34:05,188:INFO:            pmdarima: 2.0.4
2023-12-13 14:34:05,188:INFO:              psutil: 5.9.6
2023-12-13 14:34:05,188:INFO:          markupsafe: 2.1.3
2023-12-13 14:34:05,188:INFO:             pickle5: Not installed
2023-12-13 14:34:05,188:INFO:         cloudpickle: 3.0.0
2023-12-13 14:34:05,188:INFO:         deprecation: 2.1.0
2023-12-13 14:34:05,188:INFO:              xxhash: 3.4.1
2023-12-13 14:34:05,188:INFO:           wurlitzer: Not installed
2023-12-13 14:34:05,188:INFO:PyCaret optional dependencies:
2023-12-13 14:34:05,189:INFO:                shap: Not installed
2023-12-13 14:34:05,189:INFO:           interpret: Not installed
2023-12-13 14:34:05,189:INFO:                umap: Not installed
2023-12-13 14:34:05,189:INFO:     ydata_profiling: Not installed
2023-12-13 14:34:05,189:INFO:  explainerdashboard: Not installed
2023-12-13 14:34:05,189:INFO:             autoviz: Not installed
2023-12-13 14:34:05,189:INFO:           fairlearn: Not installed
2023-12-13 14:34:05,189:INFO:          deepchecks: Not installed
2023-12-13 14:34:05,189:INFO:             xgboost: Not installed
2023-12-13 14:34:05,189:INFO:            catboost: Not installed
2023-12-13 14:34:05,189:INFO:              kmodes: Not installed
2023-12-13 14:34:05,189:INFO:             mlxtend: Not installed
2023-12-13 14:34:05,189:INFO:       statsforecast: Not installed
2023-12-13 14:34:05,189:INFO:        tune_sklearn: Not installed
2023-12-13 14:34:05,189:INFO:                 ray: Not installed
2023-12-13 14:34:05,189:INFO:            hyperopt: Not installed
2023-12-13 14:34:05,189:INFO:              optuna: Not installed
2023-12-13 14:34:05,189:INFO:               skopt: Not installed
2023-12-13 14:34:05,189:INFO:              mlflow: Not installed
2023-12-13 14:34:05,189:INFO:              gradio: Not installed
2023-12-13 14:34:05,189:INFO:             fastapi: Not installed
2023-12-13 14:34:05,189:INFO:             uvicorn: Not installed
2023-12-13 14:34:05,189:INFO:              m2cgen: Not installed
2023-12-13 14:34:05,189:INFO:           evidently: Not installed
2023-12-13 14:34:05,189:INFO:               fugue: Not installed
2023-12-13 14:34:05,189:INFO:           streamlit: Not installed
2023-12-13 14:34:05,189:INFO:             prophet: Not installed
2023-12-13 14:34:05,189:INFO:None
2023-12-13 14:34:05,189:INFO:Set up data.
2023-12-13 14:34:05,193:INFO:Set up folding strategy.
2023-12-13 14:34:05,193:INFO:Set up train/test split.
2023-12-13 14:34:05,195:INFO:Set up index.
2023-12-13 14:34:05,195:INFO:Assigning column types.
2023-12-13 14:34:05,197:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:34:05,198:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,202:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,205:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,248:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,283:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,283:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,291:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,332:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,369:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:34:05,379:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,379:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,432:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,471:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,475:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,553:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:34:05,553:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,647:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,723:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:34:05,770:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,801:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,864:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,896:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:34:05,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:05,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:05,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:34:06,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,071:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:34:06,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,247:INFO:Preparing preprocessing pipeline...
2023-12-13 14:34:06,247:INFO:Set up simple imputation.
2023-12-13 14:34:06,248:INFO:Set up column name cleaning.
2023-12-13 14:34:06,256:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:34:06,256:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:34:06,256:INFO:Creating final display dataframe.
2023-12-13 14:34:06,303:INFO:Setup _display_container:                     Description             Value
0                    Session id              4280
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (749, 7)
4        Transformed data shape          (749, 7)
5   Transformed train set shape          (524, 7)
6    Transformed test set shape          (225, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              ac32
2023-12-13 14:34:06,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:34:06,485:INFO:setup() successfully completed in 1.31s...............
2023-12-13 14:34:06,514:INFO:Initializing compare_models()
2023-12-13 14:34:06,514:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:34:06,514:INFO:Checking exceptions
2023-12-13 14:34:06,516:INFO:Preparing display monitor
2023-12-13 14:34:06,540:INFO:Initializing Linear Regression
2023-12-13 14:34:06,540:INFO:Total runtime is 0.0 minutes
2023-12-13 14:34:06,543:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:06,543:INFO:Initializing create_model()
2023-12-13 14:34:06,543:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:06,543:INFO:Checking exceptions
2023-12-13 14:34:06,543:INFO:Importing libraries
2023-12-13 14:34:06,543:INFO:Copying training dataset
2023-12-13 14:34:06,546:INFO:Defining folds
2023-12-13 14:34:06,546:INFO:Declaring metric variables
2023-12-13 14:34:06,549:INFO:Importing untrained model
2023-12-13 14:34:06,552:INFO:Linear Regression Imported successfully
2023-12-13 14:34:06,557:INFO:Starting cross validation
2023-12-13 14:34:06,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:06,610:INFO:Calculating mean and std
2023-12-13 14:34:06,610:INFO:Creating metrics dataframe
2023-12-13 14:34:06,612:INFO:Uploading results into container
2023-12-13 14:34:06,612:INFO:Uploading model into container now
2023-12-13 14:34:06,612:INFO:_master_model_container: 1
2023-12-13 14:34:06,612:INFO:_display_container: 2
2023-12-13 14:34:06,612:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:34:06,613:INFO:create_model() successfully completed......................................
2023-12-13 14:34:06,699:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:06,699:INFO:Creating metrics dataframe
2023-12-13 14:34:06,715:INFO:Initializing Lasso Regression
2023-12-13 14:34:06,715:INFO:Total runtime is 0.002916872501373291 minutes
2023-12-13 14:34:06,715:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:06,715:INFO:Initializing create_model()
2023-12-13 14:34:06,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:06,715:INFO:Checking exceptions
2023-12-13 14:34:06,715:INFO:Importing libraries
2023-12-13 14:34:06,715:INFO:Copying training dataset
2023-12-13 14:34:06,715:INFO:Defining folds
2023-12-13 14:34:06,715:INFO:Declaring metric variables
2023-12-13 14:34:06,715:INFO:Importing untrained model
2023-12-13 14:34:06,715:INFO:Lasso Regression Imported successfully
2023-12-13 14:34:06,731:INFO:Starting cross validation
2023-12-13 14:34:06,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:06,782:INFO:Calculating mean and std
2023-12-13 14:34:06,782:INFO:Creating metrics dataframe
2023-12-13 14:34:06,782:INFO:Uploading results into container
2023-12-13 14:34:06,782:INFO:Uploading model into container now
2023-12-13 14:34:06,782:INFO:_master_model_container: 2
2023-12-13 14:34:06,782:INFO:_display_container: 2
2023-12-13 14:34:06,782:INFO:Lasso(random_state=4280)
2023-12-13 14:34:06,782:INFO:create_model() successfully completed......................................
2023-12-13 14:34:06,872:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:06,872:INFO:Creating metrics dataframe
2023-12-13 14:34:06,872:INFO:Initializing Ridge Regression
2023-12-13 14:34:06,872:INFO:Total runtime is 0.005527396996816 minutes
2023-12-13 14:34:06,872:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:06,872:INFO:Initializing create_model()
2023-12-13 14:34:06,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:06,887:INFO:Checking exceptions
2023-12-13 14:34:06,887:INFO:Importing libraries
2023-12-13 14:34:06,887:INFO:Copying training dataset
2023-12-13 14:34:06,887:INFO:Defining folds
2023-12-13 14:34:06,887:INFO:Declaring metric variables
2023-12-13 14:34:06,887:INFO:Importing untrained model
2023-12-13 14:34:06,887:INFO:Ridge Regression Imported successfully
2023-12-13 14:34:06,887:INFO:Starting cross validation
2023-12-13 14:34:06,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:06,949:INFO:Calculating mean and std
2023-12-13 14:34:06,949:INFO:Creating metrics dataframe
2023-12-13 14:34:06,951:INFO:Uploading results into container
2023-12-13 14:34:06,951:INFO:Uploading model into container now
2023-12-13 14:34:06,951:INFO:_master_model_container: 3
2023-12-13 14:34:06,951:INFO:_display_container: 2
2023-12-13 14:34:06,951:INFO:Ridge(random_state=4280)
2023-12-13 14:34:06,951:INFO:create_model() successfully completed......................................
2023-12-13 14:34:07,030:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:07,030:INFO:Creating metrics dataframe
2023-12-13 14:34:07,045:INFO:Initializing Elastic Net
2023-12-13 14:34:07,045:INFO:Total runtime is 0.00842052698135376 minutes
2023-12-13 14:34:07,045:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:07,045:INFO:Initializing create_model()
2023-12-13 14:34:07,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:07,045:INFO:Checking exceptions
2023-12-13 14:34:07,045:INFO:Importing libraries
2023-12-13 14:34:07,045:INFO:Copying training dataset
2023-12-13 14:34:07,045:INFO:Defining folds
2023-12-13 14:34:07,045:INFO:Declaring metric variables
2023-12-13 14:34:07,045:INFO:Importing untrained model
2023-12-13 14:34:07,045:INFO:Elastic Net Imported successfully
2023-12-13 14:34:07,061:INFO:Starting cross validation
2023-12-13 14:34:07,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:07,085:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.588e+12, tolerance: 6.089e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:34:07,117:INFO:Calculating mean and std
2023-12-13 14:34:07,117:INFO:Creating metrics dataframe
2023-12-13 14:34:07,117:INFO:Uploading results into container
2023-12-13 14:34:07,117:INFO:Uploading model into container now
2023-12-13 14:34:07,117:INFO:_master_model_container: 4
2023-12-13 14:34:07,117:INFO:_display_container: 2
2023-12-13 14:34:07,117:INFO:ElasticNet(random_state=4280)
2023-12-13 14:34:07,117:INFO:create_model() successfully completed......................................
2023-12-13 14:34:07,203:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:07,203:INFO:Creating metrics dataframe
2023-12-13 14:34:07,219:INFO:Initializing Least Angle Regression
2023-12-13 14:34:07,219:INFO:Total runtime is 0.011315604050954184 minutes
2023-12-13 14:34:07,219:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:07,219:INFO:Initializing create_model()
2023-12-13 14:34:07,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:07,219:INFO:Checking exceptions
2023-12-13 14:34:07,219:INFO:Importing libraries
2023-12-13 14:34:07,219:INFO:Copying training dataset
2023-12-13 14:34:07,219:INFO:Defining folds
2023-12-13 14:34:07,219:INFO:Declaring metric variables
2023-12-13 14:34:07,219:INFO:Importing untrained model
2023-12-13 14:34:07,219:INFO:Least Angle Regression Imported successfully
2023-12-13 14:34:07,219:INFO:Starting cross validation
2023-12-13 14:34:07,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:07,283:INFO:Calculating mean and std
2023-12-13 14:34:07,283:INFO:Creating metrics dataframe
2023-12-13 14:34:07,283:INFO:Uploading results into container
2023-12-13 14:34:07,283:INFO:Uploading model into container now
2023-12-13 14:34:07,283:INFO:_master_model_container: 5
2023-12-13 14:34:07,283:INFO:_display_container: 2
2023-12-13 14:34:07,283:INFO:Lars(random_state=4280)
2023-12-13 14:34:07,283:INFO:create_model() successfully completed......................................
2023-12-13 14:34:07,377:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:07,377:INFO:Creating metrics dataframe
2023-12-13 14:34:07,377:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:34:07,377:INFO:Total runtime is 0.013948905467987062 minutes
2023-12-13 14:34:07,377:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:07,377:INFO:Initializing create_model()
2023-12-13 14:34:07,377:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:07,377:INFO:Checking exceptions
2023-12-13 14:34:07,377:INFO:Importing libraries
2023-12-13 14:34:07,377:INFO:Copying training dataset
2023-12-13 14:34:07,377:INFO:Defining folds
2023-12-13 14:34:07,377:INFO:Declaring metric variables
2023-12-13 14:34:07,393:INFO:Importing untrained model
2023-12-13 14:34:07,393:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:34:07,393:INFO:Starting cross validation
2023-12-13 14:34:07,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:07,448:INFO:Calculating mean and std
2023-12-13 14:34:07,448:INFO:Creating metrics dataframe
2023-12-13 14:34:07,448:INFO:Uploading results into container
2023-12-13 14:34:07,448:INFO:Uploading model into container now
2023-12-13 14:34:07,448:INFO:_master_model_container: 6
2023-12-13 14:34:07,448:INFO:_display_container: 2
2023-12-13 14:34:07,448:INFO:LassoLars(random_state=4280)
2023-12-13 14:34:07,448:INFO:create_model() successfully completed......................................
2023-12-13 14:34:07,534:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:07,534:INFO:Creating metrics dataframe
2023-12-13 14:34:07,534:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:34:07,534:INFO:Total runtime is 0.016573055585225423 minutes
2023-12-13 14:34:07,550:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:07,550:INFO:Initializing create_model()
2023-12-13 14:34:07,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:07,550:INFO:Checking exceptions
2023-12-13 14:34:07,550:INFO:Importing libraries
2023-12-13 14:34:07,550:INFO:Copying training dataset
2023-12-13 14:34:07,550:INFO:Defining folds
2023-12-13 14:34:07,550:INFO:Declaring metric variables
2023-12-13 14:34:07,550:INFO:Importing untrained model
2023-12-13 14:34:07,550:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:34:07,550:INFO:Starting cross validation
2023-12-13 14:34:07,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:07,613:INFO:Calculating mean and std
2023-12-13 14:34:07,613:INFO:Creating metrics dataframe
2023-12-13 14:34:07,613:INFO:Uploading results into container
2023-12-13 14:34:07,613:INFO:Uploading model into container now
2023-12-13 14:34:07,613:INFO:_master_model_container: 7
2023-12-13 14:34:07,613:INFO:_display_container: 2
2023-12-13 14:34:07,613:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:34:07,613:INFO:create_model() successfully completed......................................
2023-12-13 14:34:07,707:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:07,707:INFO:Creating metrics dataframe
2023-12-13 14:34:07,707:INFO:Initializing Bayesian Ridge
2023-12-13 14:34:07,707:INFO:Total runtime is 0.019456867376963297 minutes
2023-12-13 14:34:07,707:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:07,707:INFO:Initializing create_model()
2023-12-13 14:34:07,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:07,707:INFO:Checking exceptions
2023-12-13 14:34:07,707:INFO:Importing libraries
2023-12-13 14:34:07,707:INFO:Copying training dataset
2023-12-13 14:34:07,707:INFO:Defining folds
2023-12-13 14:34:07,707:INFO:Declaring metric variables
2023-12-13 14:34:07,707:INFO:Importing untrained model
2023-12-13 14:34:07,723:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:34:07,723:INFO:Starting cross validation
2023-12-13 14:34:07,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:07,788:INFO:Calculating mean and std
2023-12-13 14:34:07,788:INFO:Creating metrics dataframe
2023-12-13 14:34:07,788:INFO:Uploading results into container
2023-12-13 14:34:07,788:INFO:Uploading model into container now
2023-12-13 14:34:07,788:INFO:_master_model_container: 8
2023-12-13 14:34:07,788:INFO:_display_container: 2
2023-12-13 14:34:07,788:INFO:BayesianRidge()
2023-12-13 14:34:07,788:INFO:create_model() successfully completed......................................
2023-12-13 14:34:07,881:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:07,881:INFO:Creating metrics dataframe
2023-12-13 14:34:07,881:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:34:07,881:INFO:Total runtime is 0.02235883871714274 minutes
2023-12-13 14:34:07,881:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:07,881:INFO:Initializing create_model()
2023-12-13 14:34:07,881:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:07,881:INFO:Checking exceptions
2023-12-13 14:34:07,881:INFO:Importing libraries
2023-12-13 14:34:07,881:INFO:Copying training dataset
2023-12-13 14:34:07,897:INFO:Defining folds
2023-12-13 14:34:07,897:INFO:Declaring metric variables
2023-12-13 14:34:07,897:INFO:Importing untrained model
2023-12-13 14:34:07,897:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:34:07,897:INFO:Starting cross validation
2023-12-13 14:34:07,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:07,956:INFO:Calculating mean and std
2023-12-13 14:34:07,956:INFO:Creating metrics dataframe
2023-12-13 14:34:07,956:INFO:Uploading results into container
2023-12-13 14:34:07,956:INFO:Uploading model into container now
2023-12-13 14:34:07,956:INFO:_master_model_container: 9
2023-12-13 14:34:07,956:INFO:_display_container: 2
2023-12-13 14:34:07,956:INFO:PassiveAggressiveRegressor(random_state=4280)
2023-12-13 14:34:07,956:INFO:create_model() successfully completed......................................
2023-12-13 14:34:08,046:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:08,046:INFO:Creating metrics dataframe
2023-12-13 14:34:08,046:INFO:Initializing Huber Regressor
2023-12-13 14:34:08,046:INFO:Total runtime is 0.02510141134262085 minutes
2023-12-13 14:34:08,062:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:08,062:INFO:Initializing create_model()
2023-12-13 14:34:08,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:08,062:INFO:Checking exceptions
2023-12-13 14:34:08,062:INFO:Importing libraries
2023-12-13 14:34:08,062:INFO:Copying training dataset
2023-12-13 14:34:08,062:INFO:Defining folds
2023-12-13 14:34:08,062:INFO:Declaring metric variables
2023-12-13 14:34:08,062:INFO:Importing untrained model
2023-12-13 14:34:08,062:INFO:Huber Regressor Imported successfully
2023-12-13 14:34:08,073:INFO:Starting cross validation
2023-12-13 14:34:08,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:08,125:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:34:08,136:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:34:08,136:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:34:08,147:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:34:08,157:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:34:08,177:INFO:Calculating mean and std
2023-12-13 14:34:08,177:INFO:Creating metrics dataframe
2023-12-13 14:34:08,177:INFO:Uploading results into container
2023-12-13 14:34:08,177:INFO:Uploading model into container now
2023-12-13 14:34:08,177:INFO:_master_model_container: 10
2023-12-13 14:34:08,177:INFO:_display_container: 2
2023-12-13 14:34:08,177:INFO:HuberRegressor()
2023-12-13 14:34:08,177:INFO:create_model() successfully completed......................................
2023-12-13 14:34:08,273:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:08,273:INFO:Creating metrics dataframe
2023-12-13 14:34:08,273:INFO:Initializing K Neighbors Regressor
2023-12-13 14:34:08,273:INFO:Total runtime is 0.028889667987823487 minutes
2023-12-13 14:34:08,283:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:08,283:INFO:Initializing create_model()
2023-12-13 14:34:08,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:08,283:INFO:Checking exceptions
2023-12-13 14:34:08,283:INFO:Importing libraries
2023-12-13 14:34:08,283:INFO:Copying training dataset
2023-12-13 14:34:08,283:INFO:Defining folds
2023-12-13 14:34:08,283:INFO:Declaring metric variables
2023-12-13 14:34:08,283:INFO:Importing untrained model
2023-12-13 14:34:08,283:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:34:08,283:INFO:Starting cross validation
2023-12-13 14:34:08,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:08,365:INFO:Calculating mean and std
2023-12-13 14:34:08,365:INFO:Creating metrics dataframe
2023-12-13 14:34:08,365:INFO:Uploading results into container
2023-12-13 14:34:08,365:INFO:Uploading model into container now
2023-12-13 14:34:08,365:INFO:_master_model_container: 11
2023-12-13 14:34:08,365:INFO:_display_container: 2
2023-12-13 14:34:08,365:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:34:08,365:INFO:create_model() successfully completed......................................
2023-12-13 14:34:08,457:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:08,457:INFO:Creating metrics dataframe
2023-12-13 14:34:08,457:INFO:Initializing Decision Tree Regressor
2023-12-13 14:34:08,457:INFO:Total runtime is 0.031945927937825525 minutes
2023-12-13 14:34:08,457:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:08,457:INFO:Initializing create_model()
2023-12-13 14:34:08,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:08,457:INFO:Checking exceptions
2023-12-13 14:34:08,457:INFO:Importing libraries
2023-12-13 14:34:08,457:INFO:Copying training dataset
2023-12-13 14:34:08,472:INFO:Defining folds
2023-12-13 14:34:08,472:INFO:Declaring metric variables
2023-12-13 14:34:08,474:INFO:Importing untrained model
2023-12-13 14:34:08,474:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:34:08,474:INFO:Starting cross validation
2023-12-13 14:34:08,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:08,530:INFO:Calculating mean and std
2023-12-13 14:34:08,530:INFO:Creating metrics dataframe
2023-12-13 14:34:08,530:INFO:Uploading results into container
2023-12-13 14:34:08,530:INFO:Uploading model into container now
2023-12-13 14:34:08,530:INFO:_master_model_container: 12
2023-12-13 14:34:08,530:INFO:_display_container: 2
2023-12-13 14:34:08,530:INFO:DecisionTreeRegressor(random_state=4280)
2023-12-13 14:34:08,530:INFO:create_model() successfully completed......................................
2023-12-13 14:34:08,614:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:08,614:INFO:Creating metrics dataframe
2023-12-13 14:34:08,630:INFO:Initializing Random Forest Regressor
2023-12-13 14:34:08,630:INFO:Total runtime is 0.03483221133550009 minutes
2023-12-13 14:34:08,630:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:08,630:INFO:Initializing create_model()
2023-12-13 14:34:08,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:08,630:INFO:Checking exceptions
2023-12-13 14:34:08,630:INFO:Importing libraries
2023-12-13 14:34:08,630:INFO:Copying training dataset
2023-12-13 14:34:08,630:INFO:Defining folds
2023-12-13 14:34:08,630:INFO:Declaring metric variables
2023-12-13 14:34:08,630:INFO:Importing untrained model
2023-12-13 14:34:08,630:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:34:08,646:INFO:Starting cross validation
2023-12-13 14:34:08,646:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:09,005:INFO:Calculating mean and std
2023-12-13 14:34:09,005:INFO:Creating metrics dataframe
2023-12-13 14:34:09,005:INFO:Uploading results into container
2023-12-13 14:34:09,005:INFO:Uploading model into container now
2023-12-13 14:34:09,005:INFO:_master_model_container: 13
2023-12-13 14:34:09,005:INFO:_display_container: 2
2023-12-13 14:34:09,005:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:09,005:INFO:create_model() successfully completed......................................
2023-12-13 14:34:09,088:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:09,088:INFO:Creating metrics dataframe
2023-12-13 14:34:09,104:INFO:Initializing Extra Trees Regressor
2023-12-13 14:34:09,104:INFO:Total runtime is 0.04272860288619996 minutes
2023-12-13 14:34:09,104:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:09,104:INFO:Initializing create_model()
2023-12-13 14:34:09,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:09,104:INFO:Checking exceptions
2023-12-13 14:34:09,104:INFO:Importing libraries
2023-12-13 14:34:09,104:INFO:Copying training dataset
2023-12-13 14:34:09,104:INFO:Defining folds
2023-12-13 14:34:09,104:INFO:Declaring metric variables
2023-12-13 14:34:09,104:INFO:Importing untrained model
2023-12-13 14:34:09,119:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:34:09,119:INFO:Starting cross validation
2023-12-13 14:34:09,119:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:09,391:INFO:Calculating mean and std
2023-12-13 14:34:09,391:INFO:Creating metrics dataframe
2023-12-13 14:34:09,391:INFO:Uploading results into container
2023-12-13 14:34:09,391:INFO:Uploading model into container now
2023-12-13 14:34:09,391:INFO:_master_model_container: 14
2023-12-13 14:34:09,391:INFO:_display_container: 2
2023-12-13 14:34:09,391:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:09,391:INFO:create_model() successfully completed......................................
2023-12-13 14:34:09,480:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:09,480:INFO:Creating metrics dataframe
2023-12-13 14:34:09,480:INFO:Initializing AdaBoost Regressor
2023-12-13 14:34:09,480:INFO:Total runtime is 0.049001534779866546 minutes
2023-12-13 14:34:09,496:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:09,496:INFO:Initializing create_model()
2023-12-13 14:34:09,496:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:09,496:INFO:Checking exceptions
2023-12-13 14:34:09,496:INFO:Importing libraries
2023-12-13 14:34:09,496:INFO:Copying training dataset
2023-12-13 14:34:09,496:INFO:Defining folds
2023-12-13 14:34:09,496:INFO:Declaring metric variables
2023-12-13 14:34:09,496:INFO:Importing untrained model
2023-12-13 14:34:09,496:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:34:09,496:INFO:Starting cross validation
2023-12-13 14:34:09,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:09,592:INFO:Calculating mean and std
2023-12-13 14:34:09,592:INFO:Creating metrics dataframe
2023-12-13 14:34:09,592:INFO:Uploading results into container
2023-12-13 14:34:09,592:INFO:Uploading model into container now
2023-12-13 14:34:09,592:INFO:_master_model_container: 15
2023-12-13 14:34:09,592:INFO:_display_container: 2
2023-12-13 14:34:09,592:INFO:AdaBoostRegressor(random_state=4280)
2023-12-13 14:34:09,592:INFO:create_model() successfully completed......................................
2023-12-13 14:34:09,685:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:09,685:INFO:Creating metrics dataframe
2023-12-13 14:34:09,685:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:34:09,685:INFO:Total runtime is 0.052414357662200935 minutes
2023-12-13 14:34:09,685:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:09,685:INFO:Initializing create_model()
2023-12-13 14:34:09,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:09,685:INFO:Checking exceptions
2023-12-13 14:34:09,685:INFO:Importing libraries
2023-12-13 14:34:09,685:INFO:Copying training dataset
2023-12-13 14:34:09,685:INFO:Defining folds
2023-12-13 14:34:09,685:INFO:Declaring metric variables
2023-12-13 14:34:09,700:INFO:Importing untrained model
2023-12-13 14:34:09,700:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:34:09,700:INFO:Starting cross validation
2023-12-13 14:34:09,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:09,839:INFO:Calculating mean and std
2023-12-13 14:34:09,839:INFO:Creating metrics dataframe
2023-12-13 14:34:09,839:INFO:Uploading results into container
2023-12-13 14:34:09,839:INFO:Uploading model into container now
2023-12-13 14:34:09,839:INFO:_master_model_container: 16
2023-12-13 14:34:09,839:INFO:_display_container: 2
2023-12-13 14:34:09,839:INFO:GradientBoostingRegressor(random_state=4280)
2023-12-13 14:34:09,839:INFO:create_model() successfully completed......................................
2023-12-13 14:34:09,922:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:09,922:INFO:Creating metrics dataframe
2023-12-13 14:34:09,938:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:34:09,938:INFO:Total runtime is 0.05662676095962525 minutes
2023-12-13 14:34:09,938:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:09,938:INFO:Initializing create_model()
2023-12-13 14:34:09,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:09,938:INFO:Checking exceptions
2023-12-13 14:34:09,938:INFO:Importing libraries
2023-12-13 14:34:09,938:INFO:Copying training dataset
2023-12-13 14:34:09,938:INFO:Defining folds
2023-12-13 14:34:09,938:INFO:Declaring metric variables
2023-12-13 14:34:09,938:INFO:Importing untrained model
2023-12-13 14:34:09,938:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:34:09,953:INFO:Starting cross validation
2023-12-13 14:34:09,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:10,453:INFO:Calculating mean and std
2023-12-13 14:34:10,453:INFO:Creating metrics dataframe
2023-12-13 14:34:10,453:INFO:Uploading results into container
2023-12-13 14:34:10,453:INFO:Uploading model into container now
2023-12-13 14:34:10,453:INFO:_master_model_container: 17
2023-12-13 14:34:10,453:INFO:_display_container: 2
2023-12-13 14:34:10,453:INFO:LGBMRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:10,453:INFO:create_model() successfully completed......................................
2023-12-13 14:34:10,575:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:10,575:INFO:Creating metrics dataframe
2023-12-13 14:34:10,575:INFO:Initializing Dummy Regressor
2023-12-13 14:34:10,575:INFO:Total runtime is 0.06725720167160035 minutes
2023-12-13 14:34:10,575:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:10,575:INFO:Initializing create_model()
2023-12-13 14:34:10,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28887810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:10,575:INFO:Checking exceptions
2023-12-13 14:34:10,575:INFO:Importing libraries
2023-12-13 14:34:10,575:INFO:Copying training dataset
2023-12-13 14:34:10,575:INFO:Defining folds
2023-12-13 14:34:10,575:INFO:Declaring metric variables
2023-12-13 14:34:10,590:INFO:Importing untrained model
2023-12-13 14:34:10,590:INFO:Dummy Regressor Imported successfully
2023-12-13 14:34:10,590:INFO:Starting cross validation
2023-12-13 14:34:10,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:10,637:INFO:Calculating mean and std
2023-12-13 14:34:10,637:INFO:Creating metrics dataframe
2023-12-13 14:34:10,638:INFO:Uploading results into container
2023-12-13 14:34:10,638:INFO:Uploading model into container now
2023-12-13 14:34:10,638:INFO:_master_model_container: 18
2023-12-13 14:34:10,638:INFO:_display_container: 2
2023-12-13 14:34:10,638:INFO:DummyRegressor()
2023-12-13 14:34:10,638:INFO:create_model() successfully completed......................................
2023-12-13 14:34:10,732:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:10,732:INFO:Creating metrics dataframe
2023-12-13 14:34:10,732:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:34:10,748:INFO:Initializing create_model()
2023-12-13 14:34:10,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:10,748:INFO:Checking exceptions
2023-12-13 14:34:10,748:INFO:Importing libraries
2023-12-13 14:34:10,748:INFO:Copying training dataset
2023-12-13 14:34:10,748:INFO:Defining folds
2023-12-13 14:34:10,748:INFO:Declaring metric variables
2023-12-13 14:34:10,748:INFO:Importing untrained model
2023-12-13 14:34:10,748:INFO:Declaring custom model
2023-12-13 14:34:10,748:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:34:10,748:INFO:Cross validation set to False
2023-12-13 14:34:10,748:INFO:Fitting Model
2023-12-13 14:34:10,878:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:10,878:INFO:create_model() successfully completed......................................
2023-12-13 14:34:10,985:INFO:_master_model_container: 18
2023-12-13 14:34:10,985:INFO:_display_container: 2
2023-12-13 14:34:10,985:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:10,985:INFO:compare_models() successfully completed......................................
2023-12-13 14:34:11,013:INFO:Initializing create_model()
2023-12-13 14:34:11,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:11,013:INFO:Checking exceptions
2023-12-13 14:34:11,024:INFO:Importing libraries
2023-12-13 14:34:11,025:INFO:Copying training dataset
2023-12-13 14:34:11,027:INFO:Defining folds
2023-12-13 14:34:11,027:INFO:Declaring metric variables
2023-12-13 14:34:11,030:INFO:Importing untrained model
2023-12-13 14:34:11,030:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:34:11,030:INFO:Starting cross validation
2023-12-13 14:34:11,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:11,394:INFO:Calculating mean and std
2023-12-13 14:34:11,394:INFO:Creating metrics dataframe
2023-12-13 14:34:11,394:INFO:Finalizing model
2023-12-13 14:34:11,517:INFO:Uploading results into container
2023-12-13 14:34:11,517:INFO:Uploading model into container now
2023-12-13 14:34:11,517:INFO:_master_model_container: 19
2023-12-13 14:34:11,517:INFO:_display_container: 3
2023-12-13 14:34:11,517:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:11,517:INFO:create_model() successfully completed......................................
2023-12-13 14:34:11,641:INFO:Initializing create_model()
2023-12-13 14:34:11,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:11,641:INFO:Checking exceptions
2023-12-13 14:34:11,653:INFO:Importing libraries
2023-12-13 14:34:11,653:INFO:Copying training dataset
2023-12-13 14:34:11,657:INFO:Defining folds
2023-12-13 14:34:11,657:INFO:Declaring metric variables
2023-12-13 14:34:11,660:INFO:Importing untrained model
2023-12-13 14:34:11,662:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:34:11,669:INFO:Starting cross validation
2023-12-13 14:34:11,669:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:11,967:INFO:Calculating mean and std
2023-12-13 14:34:11,967:INFO:Creating metrics dataframe
2023-12-13 14:34:11,970:INFO:Finalizing model
2023-12-13 14:34:12,065:INFO:Uploading results into container
2023-12-13 14:34:12,065:INFO:Uploading model into container now
2023-12-13 14:34:12,065:INFO:_master_model_container: 20
2023-12-13 14:34:12,065:INFO:_display_container: 4
2023-12-13 14:34:12,065:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:12,065:INFO:create_model() successfully completed......................................
2023-12-13 14:34:12,179:INFO:Initializing tune_model()
2023-12-13 14:34:12,180:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:34:12,180:INFO:Checking exceptions
2023-12-13 14:34:12,191:INFO:Copying training dataset
2023-12-13 14:34:12,193:INFO:Checking base model
2023-12-13 14:34:12,194:INFO:Base model : Random Forest Regressor
2023-12-13 14:34:12,198:INFO:Declaring metric variables
2023-12-13 14:34:12,201:INFO:Defining Hyperparameters
2023-12-13 14:34:12,294:INFO:Tuning with n_jobs=-1
2023-12-13 14:34:12,294:INFO:Initializing RandomizedSearchCV
2023-12-13 14:34:16,406:INFO:best_params: {'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:34:16,406:INFO:Hyperparameter search completed
2023-12-13 14:34:16,406:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:16,406:INFO:Initializing create_model()
2023-12-13 14:34:16,406:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2AE42190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 250, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-13 14:34:16,406:INFO:Checking exceptions
2023-12-13 14:34:16,406:INFO:Importing libraries
2023-12-13 14:34:16,406:INFO:Copying training dataset
2023-12-13 14:34:16,410:INFO:Defining folds
2023-12-13 14:34:16,410:INFO:Declaring metric variables
2023-12-13 14:34:16,410:INFO:Importing untrained model
2023-12-13 14:34:16,410:INFO:Declaring custom model
2023-12-13 14:34:16,410:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:34:16,410:INFO:Starting cross validation
2023-12-13 14:34:16,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:17,979:INFO:Calculating mean and std
2023-12-13 14:34:17,979:INFO:Creating metrics dataframe
2023-12-13 14:34:17,982:INFO:Finalizing model
2023-12-13 14:34:18,733:INFO:Uploading results into container
2023-12-13 14:34:18,733:INFO:Uploading model into container now
2023-12-13 14:34:18,733:INFO:_master_model_container: 21
2023-12-13 14:34:18,733:INFO:_display_container: 5
2023-12-13 14:34:18,733:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      max_features='log2', min_impurity_decrease=0.0002,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=4280)
2023-12-13 14:34:18,733:INFO:create_model() successfully completed......................................
2023-12-13 14:34:18,821:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:18,821:INFO:choose_better activated
2023-12-13 14:34:18,821:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:18,821:INFO:Initializing create_model()
2023-12-13 14:34:18,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:18,821:INFO:Checking exceptions
2023-12-13 14:34:18,836:INFO:Importing libraries
2023-12-13 14:34:18,836:INFO:Copying training dataset
2023-12-13 14:34:18,836:INFO:Defining folds
2023-12-13 14:34:18,836:INFO:Declaring metric variables
2023-12-13 14:34:18,836:INFO:Importing untrained model
2023-12-13 14:34:18,836:INFO:Declaring custom model
2023-12-13 14:34:18,836:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:34:18,836:INFO:Starting cross validation
2023-12-13 14:34:18,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:19,193:INFO:Calculating mean and std
2023-12-13 14:34:19,193:INFO:Creating metrics dataframe
2023-12-13 14:34:19,193:INFO:Finalizing model
2023-12-13 14:34:19,307:INFO:Uploading results into container
2023-12-13 14:34:19,307:INFO:Uploading model into container now
2023-12-13 14:34:19,307:INFO:_master_model_container: 22
2023-12-13 14:34:19,307:INFO:_display_container: 6
2023-12-13 14:34:19,307:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:19,307:INFO:create_model() successfully completed......................................
2023-12-13 14:34:19,390:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:19,390:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280) result for R2 is 0.7231
2023-12-13 14:34:19,390:INFO:RandomForestRegressor(criterion='absolute_error', max_depth=9,
                      max_features='log2', min_impurity_decrease=0.0002,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=4280) result for R2 is 0.6977
2023-12-13 14:34:19,390:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280) is best model
2023-12-13 14:34:19,390:INFO:choose_better completed
2023-12-13 14:34:19,390:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:34:19,406:INFO:_master_model_container: 22
2023-12-13 14:34:19,406:INFO:_display_container: 5
2023-12-13 14:34:19,406:INFO:RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:19,406:INFO:tune_model() successfully completed......................................
2023-12-13 14:34:19,523:INFO:Initializing tune_model()
2023-12-13 14:34:19,525:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:34:19,525:INFO:Checking exceptions
2023-12-13 14:34:19,531:INFO:Copying training dataset
2023-12-13 14:34:19,531:INFO:Checking base model
2023-12-13 14:34:19,531:INFO:Base model : Extra Trees Regressor
2023-12-13 14:34:19,540:INFO:Declaring metric variables
2023-12-13 14:34:19,542:INFO:Defining Hyperparameters
2023-12-13 14:34:19,632:INFO:Tuning with n_jobs=-1
2023-12-13 14:34:19,632:INFO:Initializing RandomizedSearchCV
2023-12-13 14:34:23,006:INFO:best_params: {'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:34:23,006:INFO:Hyperparameter search completed
2023-12-13 14:34:23,006:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:23,008:INFO:Initializing create_model()
2023-12-13 14:34:23,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2AEE8910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 250, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-13 14:34:23,008:INFO:Checking exceptions
2023-12-13 14:34:23,008:INFO:Importing libraries
2023-12-13 14:34:23,008:INFO:Copying training dataset
2023-12-13 14:34:23,008:INFO:Defining folds
2023-12-13 14:34:23,008:INFO:Declaring metric variables
2023-12-13 14:34:23,008:INFO:Importing untrained model
2023-12-13 14:34:23,008:INFO:Declaring custom model
2023-12-13 14:34:23,008:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:34:23,024:INFO:Starting cross validation
2023-12-13 14:34:23,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:23,964:INFO:Calculating mean and std
2023-12-13 14:34:23,964:INFO:Creating metrics dataframe
2023-12-13 14:34:23,964:INFO:Finalizing model
2023-12-13 14:34:24,476:INFO:Uploading results into container
2023-12-13 14:34:24,481:INFO:Uploading model into container now
2023-12-13 14:34:24,481:INFO:_master_model_container: 23
2023-12-13 14:34:24,481:INFO:_display_container: 6
2023-12-13 14:34:24,481:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=9,
                    max_features='log2', min_impurity_decrease=0.0002,
                    min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                    random_state=4280)
2023-12-13 14:34:24,481:INFO:create_model() successfully completed......................................
2023-12-13 14:34:24,569:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:24,569:INFO:choose_better activated
2023-12-13 14:34:24,569:INFO:SubProcess create_model() called ==================================
2023-12-13 14:34:24,569:INFO:Initializing create_model()
2023-12-13 14:34:24,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:24,569:INFO:Checking exceptions
2023-12-13 14:34:24,569:INFO:Importing libraries
2023-12-13 14:34:24,569:INFO:Copying training dataset
2023-12-13 14:34:24,569:INFO:Defining folds
2023-12-13 14:34:24,569:INFO:Declaring metric variables
2023-12-13 14:34:24,569:INFO:Importing untrained model
2023-12-13 14:34:24,569:INFO:Declaring custom model
2023-12-13 14:34:24,569:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:34:24,569:INFO:Starting cross validation
2023-12-13 14:34:24,569:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:34:24,844:INFO:Calculating mean and std
2023-12-13 14:34:24,844:INFO:Creating metrics dataframe
2023-12-13 14:34:24,844:INFO:Finalizing model
2023-12-13 14:34:24,938:INFO:Uploading results into container
2023-12-13 14:34:24,938:INFO:Uploading model into container now
2023-12-13 14:34:24,938:INFO:_master_model_container: 24
2023-12-13 14:34:24,938:INFO:_display_container: 7
2023-12-13 14:34:24,938:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:24,938:INFO:create_model() successfully completed......................................
2023-12-13 14:34:25,028:INFO:SubProcess create_model() end ==================================
2023-12-13 14:34:25,028:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4280) result for R2 is 0.7052
2023-12-13 14:34:25,028:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=9,
                    max_features='log2', min_impurity_decrease=0.0002,
                    min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                    random_state=4280) result for R2 is 0.6561
2023-12-13 14:34:25,028:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4280) is best model
2023-12-13 14:34:25,028:INFO:choose_better completed
2023-12-13 14:34:25,028:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:34:25,028:INFO:_master_model_container: 24
2023-12-13 14:34:25,028:INFO:_display_container: 6
2023-12-13 14:34:25,028:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:25,028:INFO:tune_model() successfully completed......................................
2023-12-13 14:34:25,149:INFO:Initializing plot_model()
2023-12-13 14:34:25,150:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:34:25,150:INFO:Checking exceptions
2023-12-13 14:34:25,169:INFO:Preloading libraries
2023-12-13 14:34:25,174:INFO:Copying training dataset
2023-12-13 14:34:25,174:INFO:Plot type: residuals
2023-12-13 14:34:25,237:INFO:Fitting Model
2023-12-13 14:34:25,237:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:34:25,300:INFO:Scoring test/hold-out set
2023-12-13 14:34:25,568:INFO:Visual Rendered Successfully
2023-12-13 14:34:25,668:INFO:plot_model() successfully completed......................................
2023-12-13 14:34:25,700:INFO:Initializing plot_model()
2023-12-13 14:34:25,700:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:34:25,700:INFO:Checking exceptions
2023-12-13 14:34:25,722:INFO:Preloading libraries
2023-12-13 14:34:25,731:INFO:Copying training dataset
2023-12-13 14:34:25,731:INFO:Plot type: residuals
2023-12-13 14:34:25,788:INFO:Fitting Model
2023-12-13 14:34:25,788:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:34:25,857:INFO:Scoring test/hold-out set
2023-12-13 14:34:26,140:INFO:Visual Rendered Successfully
2023-12-13 14:34:26,227:INFO:plot_model() successfully completed......................................
2023-12-13 14:34:26,256:INFO:Initializing plot_model()
2023-12-13 14:34:26,256:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:34:26,256:INFO:Checking exceptions
2023-12-13 14:34:26,275:INFO:Preloading libraries
2023-12-13 14:34:26,282:INFO:Copying training dataset
2023-12-13 14:34:26,282:INFO:Plot type: feature
2023-12-13 14:34:26,282:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:34:26,390:INFO:Visual Rendered Successfully
2023-12-13 14:34:26,490:INFO:plot_model() successfully completed......................................
2023-12-13 14:34:26,514:INFO:Initializing plot_model()
2023-12-13 14:34:26,514:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:34:26,514:INFO:Checking exceptions
2023-12-13 14:34:26,549:INFO:Preloading libraries
2023-12-13 14:34:26,560:INFO:Copying training dataset
2023-12-13 14:34:26,561:INFO:Plot type: feature
2023-12-13 14:34:26,561:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:34:26,657:INFO:Visual Rendered Successfully
2023-12-13 14:34:26,767:INFO:plot_model() successfully completed......................................
2023-12-13 14:34:26,786:INFO:Initializing predict_model()
2023-12-13 14:34:26,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AC32840>)
2023-12-13 14:34:26,786:INFO:Checking exceptions
2023-12-13 14:34:26,786:INFO:Preloading libraries
2023-12-13 14:34:26,962:INFO:Initializing predict_model()
2023-12-13 14:34:26,962:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B1880E0>)
2023-12-13 14:34:26,962:INFO:Checking exceptions
2023-12-13 14:34:26,962:INFO:Preloading libraries
2023-12-13 14:34:27,135:INFO:Initializing finalize_model()
2023-12-13 14:34:27,135:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:34:27,136:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:27,137:INFO:Initializing create_model()
2023-12-13 14:34:27,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4280), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:27,137:INFO:Checking exceptions
2023-12-13 14:34:27,137:INFO:Importing libraries
2023-12-13 14:34:27,137:INFO:Copying training dataset
2023-12-13 14:34:27,137:INFO:Defining folds
2023-12-13 14:34:27,137:INFO:Declaring metric variables
2023-12-13 14:34:27,137:INFO:Importing untrained model
2023-12-13 14:34:27,137:INFO:Declaring custom model
2023-12-13 14:34:27,137:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:34:27,137:INFO:Cross validation set to False
2023-12-13 14:34:27,137:INFO:Fitting Model
2023-12-13 14:34:27,265:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4280))])
2023-12-13 14:34:27,265:INFO:create_model() successfully completed......................................
2023-12-13 14:34:27,359:INFO:_master_model_container: 24
2023-12-13 14:34:27,359:INFO:_display_container: 8
2023-12-13 14:34:27,359:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4280))])
2023-12-13 14:34:27,359:INFO:finalize_model() successfully completed......................................
2023-12-13 14:34:27,477:INFO:Initializing finalize_model()
2023-12-13 14:34:27,477:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:34:27,477:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=4280)
2023-12-13 14:34:27,480:INFO:Initializing create_model()
2023-12-13 14:34:27,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4280), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:34:27,480:INFO:Checking exceptions
2023-12-13 14:34:27,480:INFO:Importing libraries
2023-12-13 14:34:27,480:INFO:Copying training dataset
2023-12-13 14:34:27,480:INFO:Defining folds
2023-12-13 14:34:27,480:INFO:Declaring metric variables
2023-12-13 14:34:27,480:INFO:Importing untrained model
2023-12-13 14:34:27,480:INFO:Declaring custom model
2023-12-13 14:34:27,480:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:34:27,480:INFO:Cross validation set to False
2023-12-13 14:34:27,480:INFO:Fitting Model
2023-12-13 14:34:27,592:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4280))])
2023-12-13 14:34:27,592:INFO:create_model() successfully completed......................................
2023-12-13 14:34:27,685:INFO:_master_model_container: 24
2023-12-13 14:34:27,685:INFO:_display_container: 8
2023-12-13 14:34:27,685:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4280))])
2023-12-13 14:34:27,685:INFO:finalize_model() successfully completed......................................
2023-12-13 14:34:27,802:INFO:Initializing predict_model()
2023-12-13 14:34:27,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4280))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B2AE160>)
2023-12-13 14:34:27,802:INFO:Checking exceptions
2023-12-13 14:34:27,802:INFO:Preloading libraries
2023-12-13 14:34:27,978:INFO:Initializing predict_model()
2023-12-13 14:34:27,978:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4280))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B1880E0>)
2023-12-13 14:34:27,978:INFO:Checking exceptions
2023-12-13 14:34:27,978:INFO:Preloading libraries
2023-12-13 14:34:28,159:INFO:Initializing predict_model()
2023-12-13 14:34:28,159:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4280))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AC32160>)
2023-12-13 14:34:28,160:INFO:Checking exceptions
2023-12-13 14:34:28,160:INFO:Preloading libraries
2023-12-13 14:34:28,161:INFO:Set up data.
2023-12-13 14:34:28,164:INFO:Set up index.
2023-12-13 14:34:28,346:INFO:Initializing predict_model()
2023-12-13 14:34:28,346:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4280))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B2CB920>)
2023-12-13 14:34:28,346:INFO:Checking exceptions
2023-12-13 14:34:28,346:INFO:Preloading libraries
2023-12-13 14:34:28,346:INFO:Set up data.
2023-12-13 14:34:28,352:INFO:Set up index.
2023-12-13 14:48:29,364:INFO:Initializing predict_model()
2023-12-13 14:48:29,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2B4DD990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4280))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B0781B600>)
2023-12-13 14:48:29,364:INFO:Checking exceptions
2023-12-13 14:48:29,364:INFO:Preloading libraries
2023-12-13 14:48:29,364:INFO:Set up data.
2023-12-13 14:48:29,370:INFO:Set up index.
2023-12-13 14:49:29,581:INFO:PyCaret RegressionExperiment
2023-12-13 14:49:29,581:INFO:Logging name: reg-default-name
2023-12-13 14:49:29,581:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:49:29,581:INFO:version 3.2.0
2023-12-13 14:49:29,581:INFO:Initializing setup()
2023-12-13 14:49:29,581:INFO:self.USI: c943
2023-12-13 14:49:29,581:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:49:29,581:INFO:Checking environment
2023-12-13 14:49:29,581:INFO:python_version: 3.11.0
2023-12-13 14:49:29,581:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:49:29,581:INFO:machine: AMD64
2023-12-13 14:49:29,581:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:49:29,592:INFO:Memory: svmem(total=14877257728, available=4699279360, percent=68.4, used=10177978368, free=4699279360)
2023-12-13 14:49:29,592:INFO:Physical Core: 8
2023-12-13 14:49:29,592:INFO:Logical Core: 16
2023-12-13 14:49:29,592:INFO:Checking libraries
2023-12-13 14:49:29,592:INFO:System:
2023-12-13 14:49:29,592:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:49:29,592:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:49:29,593:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:49:29,593:INFO:PyCaret required dependencies:
2023-12-13 14:49:29,593:INFO:                 pip: 23.3.1
2023-12-13 14:49:29,593:INFO:          setuptools: 65.5.0
2023-12-13 14:49:29,593:INFO:             pycaret: 3.2.0
2023-12-13 14:49:29,593:INFO:             IPython: 8.18.1
2023-12-13 14:49:29,593:INFO:          ipywidgets: 8.1.1
2023-12-13 14:49:29,593:INFO:                tqdm: 4.66.1
2023-12-13 14:49:29,593:INFO:               numpy: 1.25.2
2023-12-13 14:49:29,593:INFO:              pandas: 2.1.4
2023-12-13 14:49:29,593:INFO:              jinja2: 3.1.2
2023-12-13 14:49:29,593:INFO:               scipy: 1.10.1
2023-12-13 14:49:29,593:INFO:              joblib: 1.3.2
2023-12-13 14:49:29,593:INFO:             sklearn: 1.2.2
2023-12-13 14:49:29,593:INFO:                pyod: 1.1.2
2023-12-13 14:49:29,593:INFO:            imblearn: 0.11.0
2023-12-13 14:49:29,593:INFO:   category_encoders: 2.6.3
2023-12-13 14:49:29,593:INFO:            lightgbm: 4.1.0
2023-12-13 14:49:29,593:INFO:               numba: 0.58.1
2023-12-13 14:49:29,593:INFO:            requests: 2.31.0
2023-12-13 14:49:29,593:INFO:          matplotlib: 3.6.0
2023-12-13 14:49:29,593:INFO:          scikitplot: 0.3.7
2023-12-13 14:49:29,593:INFO:         yellowbrick: 1.5
2023-12-13 14:49:29,593:INFO:              plotly: 5.18.0
2023-12-13 14:49:29,593:INFO:    plotly-resampler: Not installed
2023-12-13 14:49:29,593:INFO:             kaleido: 0.2.1
2023-12-13 14:49:29,593:INFO:           schemdraw: 0.15
2023-12-13 14:49:29,593:INFO:         statsmodels: 0.14.0
2023-12-13 14:49:29,593:INFO:              sktime: 0.21.1
2023-12-13 14:49:29,593:INFO:               tbats: 1.1.3
2023-12-13 14:49:29,593:INFO:            pmdarima: 2.0.4
2023-12-13 14:49:29,593:INFO:              psutil: 5.9.6
2023-12-13 14:49:29,593:INFO:          markupsafe: 2.1.3
2023-12-13 14:49:29,593:INFO:             pickle5: Not installed
2023-12-13 14:49:29,594:INFO:         cloudpickle: 3.0.0
2023-12-13 14:49:29,594:INFO:         deprecation: 2.1.0
2023-12-13 14:49:29,594:INFO:              xxhash: 3.4.1
2023-12-13 14:49:29,594:INFO:           wurlitzer: Not installed
2023-12-13 14:49:29,594:INFO:PyCaret optional dependencies:
2023-12-13 14:49:29,594:INFO:                shap: Not installed
2023-12-13 14:49:29,594:INFO:           interpret: Not installed
2023-12-13 14:49:29,594:INFO:                umap: Not installed
2023-12-13 14:49:29,594:INFO:     ydata_profiling: Not installed
2023-12-13 14:49:29,594:INFO:  explainerdashboard: Not installed
2023-12-13 14:49:29,594:INFO:             autoviz: Not installed
2023-12-13 14:49:29,594:INFO:           fairlearn: Not installed
2023-12-13 14:49:29,594:INFO:          deepchecks: Not installed
2023-12-13 14:49:29,594:INFO:             xgboost: Not installed
2023-12-13 14:49:29,594:INFO:            catboost: Not installed
2023-12-13 14:49:29,594:INFO:              kmodes: Not installed
2023-12-13 14:49:29,594:INFO:             mlxtend: Not installed
2023-12-13 14:49:29,594:INFO:       statsforecast: Not installed
2023-12-13 14:49:29,594:INFO:        tune_sklearn: Not installed
2023-12-13 14:49:29,594:INFO:                 ray: Not installed
2023-12-13 14:49:29,594:INFO:            hyperopt: Not installed
2023-12-13 14:49:29,594:INFO:              optuna: Not installed
2023-12-13 14:49:29,594:INFO:               skopt: Not installed
2023-12-13 14:49:29,594:INFO:              mlflow: Not installed
2023-12-13 14:49:29,594:INFO:              gradio: Not installed
2023-12-13 14:49:29,594:INFO:             fastapi: Not installed
2023-12-13 14:49:29,594:INFO:             uvicorn: Not installed
2023-12-13 14:49:29,594:INFO:              m2cgen: Not installed
2023-12-13 14:49:29,594:INFO:           evidently: Not installed
2023-12-13 14:49:29,594:INFO:               fugue: Not installed
2023-12-13 14:49:29,594:INFO:           streamlit: Not installed
2023-12-13 14:49:29,594:INFO:             prophet: Not installed
2023-12-13 14:49:29,594:INFO:None
2023-12-13 14:49:29,595:INFO:Set up data.
2023-12-13 14:49:29,597:INFO:Set up folding strategy.
2023-12-13 14:49:29,597:INFO:Set up train/test split.
2023-12-13 14:49:29,599:INFO:Set up index.
2023-12-13 14:49:29,600:INFO:Assigning column types.
2023-12-13 14:49:29,602:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:49:29,602:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,606:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,610:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,689:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,689:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,696:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,730:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,761:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:49:29,776:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,776:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,855:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,855:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:29,946:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:49:29,952:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:49:29,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,116:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:49:30,166:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,244:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,276:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:49:30,323:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,422:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:49:30,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,448:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:49:30,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,622:INFO:Preparing preprocessing pipeline...
2023-12-13 14:49:30,622:INFO:Set up simple imputation.
2023-12-13 14:49:30,622:INFO:Set up column name cleaning.
2023-12-13 14:49:30,637:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:49:30,637:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:49:30,637:INFO:Creating final display dataframe.
2023-12-13 14:49:30,684:INFO:Setup _display_container:                     Description             Value
0                    Session id              2129
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (609, 7)
4        Transformed data shape          (609, 7)
5   Transformed train set shape          (426, 7)
6    Transformed test set shape          (183, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c943
2023-12-13 14:49:30,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:49:30,862:INFO:setup() successfully completed in 1.28s...............
2023-12-13 14:49:30,890:INFO:Initializing compare_models()
2023-12-13 14:49:30,890:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:49:30,890:INFO:Checking exceptions
2023-12-13 14:49:30,894:INFO:Preparing display monitor
2023-12-13 14:49:30,909:INFO:Initializing Linear Regression
2023-12-13 14:49:30,909:INFO:Total runtime is 0.0 minutes
2023-12-13 14:49:30,909:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:30,909:INFO:Initializing create_model()
2023-12-13 14:49:30,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:30,909:INFO:Checking exceptions
2023-12-13 14:49:30,909:INFO:Importing libraries
2023-12-13 14:49:30,909:INFO:Copying training dataset
2023-12-13 14:49:30,909:INFO:Defining folds
2023-12-13 14:49:30,909:INFO:Declaring metric variables
2023-12-13 14:49:30,920:INFO:Importing untrained model
2023-12-13 14:49:30,924:INFO:Linear Regression Imported successfully
2023-12-13 14:49:30,929:INFO:Starting cross validation
2023-12-13 14:49:30,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:36,282:INFO:Calculating mean and std
2023-12-13 14:49:36,283:INFO:Creating metrics dataframe
2023-12-13 14:49:36,283:INFO:Uploading results into container
2023-12-13 14:49:36,283:INFO:Uploading model into container now
2023-12-13 14:49:36,283:INFO:_master_model_container: 1
2023-12-13 14:49:36,283:INFO:_display_container: 2
2023-12-13 14:49:36,283:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:49:36,283:INFO:create_model() successfully completed......................................
2023-12-13 14:49:36,440:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:36,440:INFO:Creating metrics dataframe
2023-12-13 14:49:36,440:INFO:Initializing Lasso Regression
2023-12-13 14:49:36,440:INFO:Total runtime is 0.0921870787938436 minutes
2023-12-13 14:49:36,440:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:36,440:INFO:Initializing create_model()
2023-12-13 14:49:36,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:36,440:INFO:Checking exceptions
2023-12-13 14:49:36,440:INFO:Importing libraries
2023-12-13 14:49:36,440:INFO:Copying training dataset
2023-12-13 14:49:36,440:INFO:Defining folds
2023-12-13 14:49:36,440:INFO:Declaring metric variables
2023-12-13 14:49:36,456:INFO:Importing untrained model
2023-12-13 14:49:36,456:INFO:Lasso Regression Imported successfully
2023-12-13 14:49:36,456:INFO:Starting cross validation
2023-12-13 14:49:36,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:39,657:INFO:Calculating mean and std
2023-12-13 14:49:39,657:INFO:Creating metrics dataframe
2023-12-13 14:49:39,657:INFO:Uploading results into container
2023-12-13 14:49:39,657:INFO:Uploading model into container now
2023-12-13 14:49:39,657:INFO:_master_model_container: 2
2023-12-13 14:49:39,657:INFO:_display_container: 2
2023-12-13 14:49:39,657:INFO:Lasso(random_state=2129)
2023-12-13 14:49:39,657:INFO:create_model() successfully completed......................................
2023-12-13 14:49:39,793:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:39,793:INFO:Creating metrics dataframe
2023-12-13 14:49:39,809:INFO:Initializing Ridge Regression
2023-12-13 14:49:39,809:INFO:Total runtime is 0.14833606481552125 minutes
2023-12-13 14:49:39,809:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:39,809:INFO:Initializing create_model()
2023-12-13 14:49:39,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:39,809:INFO:Checking exceptions
2023-12-13 14:49:39,809:INFO:Importing libraries
2023-12-13 14:49:39,809:INFO:Copying training dataset
2023-12-13 14:49:39,809:INFO:Defining folds
2023-12-13 14:49:39,809:INFO:Declaring metric variables
2023-12-13 14:49:39,809:INFO:Importing untrained model
2023-12-13 14:49:39,809:INFO:Ridge Regression Imported successfully
2023-12-13 14:49:39,825:INFO:Starting cross validation
2023-12-13 14:49:39,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:39,877:INFO:Calculating mean and std
2023-12-13 14:49:39,877:INFO:Creating metrics dataframe
2023-12-13 14:49:39,877:INFO:Uploading results into container
2023-12-13 14:49:39,877:INFO:Uploading model into container now
2023-12-13 14:49:39,877:INFO:_master_model_container: 3
2023-12-13 14:49:39,877:INFO:_display_container: 2
2023-12-13 14:49:39,877:INFO:Ridge(random_state=2129)
2023-12-13 14:49:39,877:INFO:create_model() successfully completed......................................
2023-12-13 14:49:39,967:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:39,967:INFO:Creating metrics dataframe
2023-12-13 14:49:39,967:INFO:Initializing Elastic Net
2023-12-13 14:49:39,967:INFO:Total runtime is 0.1509665330251058 minutes
2023-12-13 14:49:39,982:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:39,982:INFO:Initializing create_model()
2023-12-13 14:49:39,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:39,982:INFO:Checking exceptions
2023-12-13 14:49:39,982:INFO:Importing libraries
2023-12-13 14:49:39,982:INFO:Copying training dataset
2023-12-13 14:49:39,982:INFO:Defining folds
2023-12-13 14:49:39,982:INFO:Declaring metric variables
2023-12-13 14:49:39,982:INFO:Importing untrained model
2023-12-13 14:49:39,982:INFO:Elastic Net Imported successfully
2023-12-13 14:49:39,982:INFO:Starting cross validation
2023-12-13 14:49:39,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:40,014:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.258e+12, tolerance: 5.967e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:49:40,023:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.935e+12, tolerance: 5.957e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:49:40,031:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.552e+12, tolerance: 5.853e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:49:40,044:INFO:Calculating mean and std
2023-12-13 14:49:40,044:INFO:Creating metrics dataframe
2023-12-13 14:49:40,046:INFO:Uploading results into container
2023-12-13 14:49:40,046:INFO:Uploading model into container now
2023-12-13 14:49:40,046:INFO:_master_model_container: 4
2023-12-13 14:49:40,046:INFO:_display_container: 2
2023-12-13 14:49:40,046:INFO:ElasticNet(random_state=2129)
2023-12-13 14:49:40,046:INFO:create_model() successfully completed......................................
2023-12-13 14:49:40,140:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:40,140:INFO:Creating metrics dataframe
2023-12-13 14:49:40,140:INFO:Initializing Least Angle Regression
2023-12-13 14:49:40,140:INFO:Total runtime is 0.15385298331578573 minutes
2023-12-13 14:49:40,140:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:40,140:INFO:Initializing create_model()
2023-12-13 14:49:40,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:40,140:INFO:Checking exceptions
2023-12-13 14:49:40,140:INFO:Importing libraries
2023-12-13 14:49:40,140:INFO:Copying training dataset
2023-12-13 14:49:40,140:INFO:Defining folds
2023-12-13 14:49:40,140:INFO:Declaring metric variables
2023-12-13 14:49:40,140:INFO:Importing untrained model
2023-12-13 14:49:40,156:INFO:Least Angle Regression Imported successfully
2023-12-13 14:49:40,156:INFO:Starting cross validation
2023-12-13 14:49:40,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:40,208:INFO:Calculating mean and std
2023-12-13 14:49:40,208:INFO:Creating metrics dataframe
2023-12-13 14:49:40,208:INFO:Uploading results into container
2023-12-13 14:49:40,208:INFO:Uploading model into container now
2023-12-13 14:49:40,208:INFO:_master_model_container: 5
2023-12-13 14:49:40,208:INFO:_display_container: 2
2023-12-13 14:49:40,208:INFO:Lars(random_state=2129)
2023-12-13 14:49:40,208:INFO:create_model() successfully completed......................................
2023-12-13 14:49:40,297:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:40,297:INFO:Creating metrics dataframe
2023-12-13 14:49:40,297:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:49:40,297:INFO:Total runtime is 0.1564777453740438 minutes
2023-12-13 14:49:40,313:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:40,313:INFO:Initializing create_model()
2023-12-13 14:49:40,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:40,313:INFO:Checking exceptions
2023-12-13 14:49:40,313:INFO:Importing libraries
2023-12-13 14:49:40,313:INFO:Copying training dataset
2023-12-13 14:49:40,313:INFO:Defining folds
2023-12-13 14:49:40,313:INFO:Declaring metric variables
2023-12-13 14:49:40,313:INFO:Importing untrained model
2023-12-13 14:49:40,313:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:49:40,313:INFO:Starting cross validation
2023-12-13 14:49:40,329:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:40,378:INFO:Calculating mean and std
2023-12-13 14:49:40,378:INFO:Creating metrics dataframe
2023-12-13 14:49:40,378:INFO:Uploading results into container
2023-12-13 14:49:40,378:INFO:Uploading model into container now
2023-12-13 14:49:40,378:INFO:_master_model_container: 6
2023-12-13 14:49:40,378:INFO:_display_container: 2
2023-12-13 14:49:40,378:INFO:LassoLars(random_state=2129)
2023-12-13 14:49:40,378:INFO:create_model() successfully completed......................................
2023-12-13 14:49:40,471:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:40,471:INFO:Creating metrics dataframe
2023-12-13 14:49:40,471:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:49:40,471:INFO:Total runtime is 0.15936718781789144 minutes
2023-12-13 14:49:40,471:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:40,471:INFO:Initializing create_model()
2023-12-13 14:49:40,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:40,471:INFO:Checking exceptions
2023-12-13 14:49:40,471:INFO:Importing libraries
2023-12-13 14:49:40,471:INFO:Copying training dataset
2023-12-13 14:49:40,486:INFO:Defining folds
2023-12-13 14:49:40,486:INFO:Declaring metric variables
2023-12-13 14:49:40,486:INFO:Importing untrained model
2023-12-13 14:49:40,486:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:49:40,486:INFO:Starting cross validation
2023-12-13 14:49:40,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:40,546:INFO:Calculating mean and std
2023-12-13 14:49:40,546:INFO:Creating metrics dataframe
2023-12-13 14:49:40,546:INFO:Uploading results into container
2023-12-13 14:49:40,546:INFO:Uploading model into container now
2023-12-13 14:49:40,546:INFO:_master_model_container: 7
2023-12-13 14:49:40,546:INFO:_display_container: 2
2023-12-13 14:49:40,546:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:49:40,546:INFO:create_model() successfully completed......................................
2023-12-13 14:49:40,632:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:40,632:INFO:Creating metrics dataframe
2023-12-13 14:49:40,644:INFO:Initializing Bayesian Ridge
2023-12-13 14:49:40,644:INFO:Total runtime is 0.16226007541020712 minutes
2023-12-13 14:49:40,644:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:40,644:INFO:Initializing create_model()
2023-12-13 14:49:40,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:40,644:INFO:Checking exceptions
2023-12-13 14:49:40,644:INFO:Importing libraries
2023-12-13 14:49:40,644:INFO:Copying training dataset
2023-12-13 14:49:40,644:INFO:Defining folds
2023-12-13 14:49:40,644:INFO:Declaring metric variables
2023-12-13 14:49:40,644:INFO:Importing untrained model
2023-12-13 14:49:40,660:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:49:40,660:INFO:Starting cross validation
2023-12-13 14:49:40,660:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:40,726:INFO:Calculating mean and std
2023-12-13 14:49:40,726:INFO:Creating metrics dataframe
2023-12-13 14:49:40,726:INFO:Uploading results into container
2023-12-13 14:49:40,726:INFO:Uploading model into container now
2023-12-13 14:49:40,726:INFO:_master_model_container: 8
2023-12-13 14:49:40,726:INFO:_display_container: 2
2023-12-13 14:49:40,726:INFO:BayesianRidge()
2023-12-13 14:49:40,726:INFO:create_model() successfully completed......................................
2023-12-13 14:49:40,817:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:40,817:INFO:Creating metrics dataframe
2023-12-13 14:49:40,817:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:49:40,817:INFO:Total runtime is 0.16514296929041544 minutes
2023-12-13 14:49:40,817:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:40,817:INFO:Initializing create_model()
2023-12-13 14:49:40,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:40,817:INFO:Checking exceptions
2023-12-13 14:49:40,817:INFO:Importing libraries
2023-12-13 14:49:40,817:INFO:Copying training dataset
2023-12-13 14:49:40,833:INFO:Defining folds
2023-12-13 14:49:40,833:INFO:Declaring metric variables
2023-12-13 14:49:40,833:INFO:Importing untrained model
2023-12-13 14:49:40,833:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:49:40,833:INFO:Starting cross validation
2023-12-13 14:49:40,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:40,890:INFO:Calculating mean and std
2023-12-13 14:49:40,890:INFO:Creating metrics dataframe
2023-12-13 14:49:40,890:INFO:Uploading results into container
2023-12-13 14:49:40,890:INFO:Uploading model into container now
2023-12-13 14:49:40,890:INFO:_master_model_container: 9
2023-12-13 14:49:40,890:INFO:_display_container: 2
2023-12-13 14:49:40,890:INFO:PassiveAggressiveRegressor(random_state=2129)
2023-12-13 14:49:40,890:INFO:create_model() successfully completed......................................
2023-12-13 14:49:40,975:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:40,975:INFO:Creating metrics dataframe
2023-12-13 14:49:40,994:INFO:Initializing Huber Regressor
2023-12-13 14:49:40,994:INFO:Total runtime is 0.16808711290359496 minutes
2023-12-13 14:49:40,995:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:40,995:INFO:Initializing create_model()
2023-12-13 14:49:40,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:40,995:INFO:Checking exceptions
2023-12-13 14:49:40,995:INFO:Importing libraries
2023-12-13 14:49:40,995:INFO:Copying training dataset
2023-12-13 14:49:40,995:INFO:Defining folds
2023-12-13 14:49:40,995:INFO:Declaring metric variables
2023-12-13 14:49:41,002:INFO:Importing untrained model
2023-12-13 14:49:41,002:INFO:Huber Regressor Imported successfully
2023-12-13 14:49:41,002:INFO:Starting cross validation
2023-12-13 14:49:41,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:41,052:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:49:41,059:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:49:41,060:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:49:41,069:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:49:41,072:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:49:41,077:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:49:41,090:INFO:Calculating mean and std
2023-12-13 14:49:41,090:INFO:Creating metrics dataframe
2023-12-13 14:49:41,092:INFO:Uploading results into container
2023-12-13 14:49:41,092:INFO:Uploading model into container now
2023-12-13 14:49:41,092:INFO:_master_model_container: 10
2023-12-13 14:49:41,092:INFO:_display_container: 2
2023-12-13 14:49:41,093:INFO:HuberRegressor()
2023-12-13 14:49:41,093:INFO:create_model() successfully completed......................................
2023-12-13 14:49:41,177:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:41,186:INFO:Creating metrics dataframe
2023-12-13 14:49:41,192:INFO:Initializing K Neighbors Regressor
2023-12-13 14:49:41,192:INFO:Total runtime is 0.17138233184814453 minutes
2023-12-13 14:49:41,193:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:41,193:INFO:Initializing create_model()
2023-12-13 14:49:41,193:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:41,193:INFO:Checking exceptions
2023-12-13 14:49:41,193:INFO:Importing libraries
2023-12-13 14:49:41,193:INFO:Copying training dataset
2023-12-13 14:49:41,193:INFO:Defining folds
2023-12-13 14:49:41,193:INFO:Declaring metric variables
2023-12-13 14:49:41,201:INFO:Importing untrained model
2023-12-13 14:49:41,203:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:49:41,207:INFO:Starting cross validation
2023-12-13 14:49:41,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:41,278:INFO:Calculating mean and std
2023-12-13 14:49:41,278:INFO:Creating metrics dataframe
2023-12-13 14:49:41,278:INFO:Uploading results into container
2023-12-13 14:49:41,278:INFO:Uploading model into container now
2023-12-13 14:49:41,278:INFO:_master_model_container: 11
2023-12-13 14:49:41,278:INFO:_display_container: 2
2023-12-13 14:49:41,278:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:49:41,278:INFO:create_model() successfully completed......................................
2023-12-13 14:49:41,370:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:41,370:INFO:Creating metrics dataframe
2023-12-13 14:49:41,376:INFO:Initializing Decision Tree Regressor
2023-12-13 14:49:41,376:INFO:Total runtime is 0.174458376566569 minutes
2023-12-13 14:49:41,376:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:41,376:INFO:Initializing create_model()
2023-12-13 14:49:41,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:41,376:INFO:Checking exceptions
2023-12-13 14:49:41,376:INFO:Importing libraries
2023-12-13 14:49:41,376:INFO:Copying training dataset
2023-12-13 14:49:41,376:INFO:Defining folds
2023-12-13 14:49:41,376:INFO:Declaring metric variables
2023-12-13 14:49:41,386:INFO:Importing untrained model
2023-12-13 14:49:41,388:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:49:41,392:INFO:Starting cross validation
2023-12-13 14:49:41,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:41,441:INFO:Calculating mean and std
2023-12-13 14:49:41,441:INFO:Creating metrics dataframe
2023-12-13 14:49:41,443:INFO:Uploading results into container
2023-12-13 14:49:41,443:INFO:Uploading model into container now
2023-12-13 14:49:41,443:INFO:_master_model_container: 12
2023-12-13 14:49:41,443:INFO:_display_container: 2
2023-12-13 14:49:41,443:INFO:DecisionTreeRegressor(random_state=2129)
2023-12-13 14:49:41,444:INFO:create_model() successfully completed......................................
2023-12-13 14:49:41,534:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:41,534:INFO:Creating metrics dataframe
2023-12-13 14:49:41,545:INFO:Initializing Random Forest Regressor
2023-12-13 14:49:41,545:INFO:Total runtime is 0.17726844946543377 minutes
2023-12-13 14:49:41,548:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:41,548:INFO:Initializing create_model()
2023-12-13 14:49:41,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:41,548:INFO:Checking exceptions
2023-12-13 14:49:41,548:INFO:Importing libraries
2023-12-13 14:49:41,548:INFO:Copying training dataset
2023-12-13 14:49:41,551:INFO:Defining folds
2023-12-13 14:49:41,551:INFO:Declaring metric variables
2023-12-13 14:49:41,551:INFO:Importing untrained model
2023-12-13 14:49:41,551:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:49:41,559:INFO:Starting cross validation
2023-12-13 14:49:41,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:41,878:INFO:Calculating mean and std
2023-12-13 14:49:41,878:INFO:Creating metrics dataframe
2023-12-13 14:49:41,878:INFO:Uploading results into container
2023-12-13 14:49:41,878:INFO:Uploading model into container now
2023-12-13 14:49:41,878:INFO:_master_model_container: 13
2023-12-13 14:49:41,878:INFO:_display_container: 2
2023-12-13 14:49:41,878:INFO:RandomForestRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:41,878:INFO:create_model() successfully completed......................................
2023-12-13 14:49:41,973:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:41,973:INFO:Creating metrics dataframe
2023-12-13 14:49:41,977:INFO:Initializing Extra Trees Regressor
2023-12-13 14:49:41,977:INFO:Total runtime is 0.18446258306503296 minutes
2023-12-13 14:49:41,977:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:41,977:INFO:Initializing create_model()
2023-12-13 14:49:41,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:41,977:INFO:Checking exceptions
2023-12-13 14:49:41,977:INFO:Importing libraries
2023-12-13 14:49:41,977:INFO:Copying training dataset
2023-12-13 14:49:41,986:INFO:Defining folds
2023-12-13 14:49:41,986:INFO:Declaring metric variables
2023-12-13 14:49:41,988:INFO:Importing untrained model
2023-12-13 14:49:41,990:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:49:41,992:INFO:Starting cross validation
2023-12-13 14:49:41,992:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:42,247:INFO:Calculating mean and std
2023-12-13 14:49:42,248:INFO:Creating metrics dataframe
2023-12-13 14:49:42,250:INFO:Uploading results into container
2023-12-13 14:49:42,250:INFO:Uploading model into container now
2023-12-13 14:49:42,251:INFO:_master_model_container: 14
2023-12-13 14:49:42,251:INFO:_display_container: 2
2023-12-13 14:49:42,251:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:42,251:INFO:create_model() successfully completed......................................
2023-12-13 14:49:42,343:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:42,343:INFO:Creating metrics dataframe
2023-12-13 14:49:42,349:INFO:Initializing AdaBoost Regressor
2023-12-13 14:49:42,350:INFO:Total runtime is 0.19067821502685547 minutes
2023-12-13 14:49:42,352:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:42,352:INFO:Initializing create_model()
2023-12-13 14:49:42,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:42,352:INFO:Checking exceptions
2023-12-13 14:49:42,352:INFO:Importing libraries
2023-12-13 14:49:42,352:INFO:Copying training dataset
2023-12-13 14:49:42,355:INFO:Defining folds
2023-12-13 14:49:42,355:INFO:Declaring metric variables
2023-12-13 14:49:42,356:INFO:Importing untrained model
2023-12-13 14:49:42,358:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:49:42,358:INFO:Starting cross validation
2023-12-13 14:49:42,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:42,483:INFO:Calculating mean and std
2023-12-13 14:49:42,483:INFO:Creating metrics dataframe
2023-12-13 14:49:42,485:INFO:Uploading results into container
2023-12-13 14:49:42,486:INFO:Uploading model into container now
2023-12-13 14:49:42,486:INFO:_master_model_container: 15
2023-12-13 14:49:42,486:INFO:_display_container: 2
2023-12-13 14:49:42,486:INFO:AdaBoostRegressor(random_state=2129)
2023-12-13 14:49:42,486:INFO:create_model() successfully completed......................................
2023-12-13 14:49:42,574:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:42,574:INFO:Creating metrics dataframe
2023-12-13 14:49:42,585:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:49:42,585:INFO:Total runtime is 0.19460002581278485 minutes
2023-12-13 14:49:42,587:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:42,588:INFO:Initializing create_model()
2023-12-13 14:49:42,588:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:42,588:INFO:Checking exceptions
2023-12-13 14:49:42,588:INFO:Importing libraries
2023-12-13 14:49:42,588:INFO:Copying training dataset
2023-12-13 14:49:42,590:INFO:Defining folds
2023-12-13 14:49:42,590:INFO:Declaring metric variables
2023-12-13 14:49:42,591:INFO:Importing untrained model
2023-12-13 14:49:42,591:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:49:42,600:INFO:Starting cross validation
2023-12-13 14:49:42,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:42,724:INFO:Calculating mean and std
2023-12-13 14:49:42,724:INFO:Creating metrics dataframe
2023-12-13 14:49:42,724:INFO:Uploading results into container
2023-12-13 14:49:42,724:INFO:Uploading model into container now
2023-12-13 14:49:42,724:INFO:_master_model_container: 16
2023-12-13 14:49:42,724:INFO:_display_container: 2
2023-12-13 14:49:42,724:INFO:GradientBoostingRegressor(random_state=2129)
2023-12-13 14:49:42,724:INFO:create_model() successfully completed......................................
2023-12-13 14:49:42,816:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:42,816:INFO:Creating metrics dataframe
2023-12-13 14:49:42,824:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:49:42,824:INFO:Total runtime is 0.19858914216359458 minutes
2023-12-13 14:49:42,824:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:42,824:INFO:Initializing create_model()
2023-12-13 14:49:42,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:42,824:INFO:Checking exceptions
2023-12-13 14:49:42,824:INFO:Importing libraries
2023-12-13 14:49:42,824:INFO:Copying training dataset
2023-12-13 14:49:42,831:INFO:Defining folds
2023-12-13 14:49:42,831:INFO:Declaring metric variables
2023-12-13 14:49:42,834:INFO:Importing untrained model
2023-12-13 14:49:42,834:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:49:42,841:INFO:Starting cross validation
2023-12-13 14:49:42,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:43,303:INFO:Calculating mean and std
2023-12-13 14:49:43,303:INFO:Creating metrics dataframe
2023-12-13 14:49:43,306:INFO:Uploading results into container
2023-12-13 14:49:43,306:INFO:Uploading model into container now
2023-12-13 14:49:43,306:INFO:_master_model_container: 17
2023-12-13 14:49:43,306:INFO:_display_container: 2
2023-12-13 14:49:43,306:INFO:LGBMRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:43,306:INFO:create_model() successfully completed......................................
2023-12-13 14:49:43,414:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:43,414:INFO:Creating metrics dataframe
2023-12-13 14:49:43,424:INFO:Initializing Dummy Regressor
2023-12-13 14:49:43,424:INFO:Total runtime is 0.20857988198598226 minutes
2023-12-13 14:49:43,431:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:43,431:INFO:Initializing create_model()
2023-12-13 14:49:43,431:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2841AB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:43,431:INFO:Checking exceptions
2023-12-13 14:49:43,431:INFO:Importing libraries
2023-12-13 14:49:43,431:INFO:Copying training dataset
2023-12-13 14:49:43,434:INFO:Defining folds
2023-12-13 14:49:43,434:INFO:Declaring metric variables
2023-12-13 14:49:43,434:INFO:Importing untrained model
2023-12-13 14:49:43,439:INFO:Dummy Regressor Imported successfully
2023-12-13 14:49:43,445:INFO:Starting cross validation
2023-12-13 14:49:43,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:43,483:INFO:Calculating mean and std
2023-12-13 14:49:43,484:INFO:Creating metrics dataframe
2023-12-13 14:49:43,485:INFO:Uploading results into container
2023-12-13 14:49:43,485:INFO:Uploading model into container now
2023-12-13 14:49:43,485:INFO:_master_model_container: 18
2023-12-13 14:49:43,485:INFO:_display_container: 2
2023-12-13 14:49:43,486:INFO:DummyRegressor()
2023-12-13 14:49:43,486:INFO:create_model() successfully completed......................................
2023-12-13 14:49:43,572:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:43,572:INFO:Creating metrics dataframe
2023-12-13 14:49:43,585:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:49:43,591:INFO:Initializing create_model()
2023-12-13 14:49:43,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2129), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:43,591:INFO:Checking exceptions
2023-12-13 14:49:43,592:INFO:Importing libraries
2023-12-13 14:49:43,592:INFO:Copying training dataset
2023-12-13 14:49:43,594:INFO:Defining folds
2023-12-13 14:49:43,595:INFO:Declaring metric variables
2023-12-13 14:49:43,595:INFO:Importing untrained model
2023-12-13 14:49:43,595:INFO:Declaring custom model
2023-12-13 14:49:43,595:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:49:43,596:INFO:Cross validation set to False
2023-12-13 14:49:43,596:INFO:Fitting Model
2023-12-13 14:49:43,709:INFO:RandomForestRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:43,709:INFO:create_model() successfully completed......................................
2023-12-13 14:49:43,822:INFO:_master_model_container: 18
2023-12-13 14:49:43,822:INFO:_display_container: 2
2023-12-13 14:49:43,823:INFO:RandomForestRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:43,823:INFO:compare_models() successfully completed......................................
2023-12-13 14:49:43,845:INFO:Initializing create_model()
2023-12-13 14:49:43,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:43,845:INFO:Checking exceptions
2023-12-13 14:49:43,858:INFO:Importing libraries
2023-12-13 14:49:43,858:INFO:Copying training dataset
2023-12-13 14:49:43,862:INFO:Defining folds
2023-12-13 14:49:43,862:INFO:Declaring metric variables
2023-12-13 14:49:43,864:INFO:Importing untrained model
2023-12-13 14:49:43,867:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:49:43,869:INFO:Starting cross validation
2023-12-13 14:49:43,873:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:44,232:INFO:Calculating mean and std
2023-12-13 14:49:44,232:INFO:Creating metrics dataframe
2023-12-13 14:49:44,235:INFO:Finalizing model
2023-12-13 14:49:44,352:INFO:Uploading results into container
2023-12-13 14:49:44,357:INFO:Uploading model into container now
2023-12-13 14:49:44,364:INFO:_master_model_container: 19
2023-12-13 14:49:44,364:INFO:_display_container: 3
2023-12-13 14:49:44,365:INFO:RandomForestRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:44,365:INFO:create_model() successfully completed......................................
2023-12-13 14:49:44,487:INFO:Initializing create_model()
2023-12-13 14:49:44,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:44,487:INFO:Checking exceptions
2023-12-13 14:49:44,498:INFO:Importing libraries
2023-12-13 14:49:44,498:INFO:Copying training dataset
2023-12-13 14:49:44,500:INFO:Defining folds
2023-12-13 14:49:44,500:INFO:Declaring metric variables
2023-12-13 14:49:44,503:INFO:Importing untrained model
2023-12-13 14:49:44,505:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:49:44,511:INFO:Starting cross validation
2023-12-13 14:49:44,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:44,781:INFO:Calculating mean and std
2023-12-13 14:49:44,781:INFO:Creating metrics dataframe
2023-12-13 14:49:44,785:INFO:Finalizing model
2023-12-13 14:49:44,880:INFO:Uploading results into container
2023-12-13 14:49:44,880:INFO:Uploading model into container now
2023-12-13 14:49:44,880:INFO:_master_model_container: 20
2023-12-13 14:49:44,880:INFO:_display_container: 4
2023-12-13 14:49:44,880:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:44,880:INFO:create_model() successfully completed......................................
2023-12-13 14:49:44,999:INFO:Initializing tune_model()
2023-12-13 14:49:44,999:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2129), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:49:44,999:INFO:Checking exceptions
2023-12-13 14:49:45,013:INFO:Copying training dataset
2023-12-13 14:49:45,016:INFO:Checking base model
2023-12-13 14:49:45,016:INFO:Base model : Random Forest Regressor
2023-12-13 14:49:45,019:INFO:Declaring metric variables
2023-12-13 14:49:45,022:INFO:Defining Hyperparameters
2023-12-13 14:49:45,136:INFO:Tuning with n_jobs=-1
2023-12-13 14:49:45,136:INFO:Initializing RandomizedSearchCV
2023-12-13 14:49:49,402:INFO:best_params: {'actual_estimator__n_estimators': 80, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-13 14:49:49,404:INFO:Hyperparameter search completed
2023-12-13 14:49:49,404:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:49,404:INFO:Initializing create_model()
2023-12-13 14:49:49,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2129), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B2A3F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 80, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.5, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-13 14:49:49,404:INFO:Checking exceptions
2023-12-13 14:49:49,404:INFO:Importing libraries
2023-12-13 14:49:49,404:INFO:Copying training dataset
2023-12-13 14:49:49,404:INFO:Defining folds
2023-12-13 14:49:49,404:INFO:Declaring metric variables
2023-12-13 14:49:49,404:INFO:Importing untrained model
2023-12-13 14:49:49,404:INFO:Declaring custom model
2023-12-13 14:49:49,404:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:49:49,404:INFO:Starting cross validation
2023-12-13 14:49:49,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:49,623:INFO:Calculating mean and std
2023-12-13 14:49:49,623:INFO:Creating metrics dataframe
2023-12-13 14:49:49,623:INFO:Finalizing model
2023-12-13 14:49:49,695:INFO:Uploading results into container
2023-12-13 14:49:49,695:INFO:Uploading model into container now
2023-12-13 14:49:49,695:INFO:_master_model_container: 21
2023-12-13 14:49:49,695:INFO:_display_container: 5
2023-12-13 14:49:49,695:INFO:RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129)
2023-12-13 14:49:49,695:INFO:create_model() successfully completed......................................
2023-12-13 14:49:49,781:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:49,781:INFO:choose_better activated
2023-12-13 14:49:49,797:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:49,797:INFO:Initializing create_model()
2023-12-13 14:49:49,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2129), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:49,797:INFO:Checking exceptions
2023-12-13 14:49:49,797:INFO:Importing libraries
2023-12-13 14:49:49,797:INFO:Copying training dataset
2023-12-13 14:49:49,797:INFO:Defining folds
2023-12-13 14:49:49,797:INFO:Declaring metric variables
2023-12-13 14:49:49,797:INFO:Importing untrained model
2023-12-13 14:49:49,797:INFO:Declaring custom model
2023-12-13 14:49:49,797:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:49:49,797:INFO:Starting cross validation
2023-12-13 14:49:49,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:50,142:INFO:Calculating mean and std
2023-12-13 14:49:50,142:INFO:Creating metrics dataframe
2023-12-13 14:49:50,142:INFO:Finalizing model
2023-12-13 14:49:50,259:INFO:Uploading results into container
2023-12-13 14:49:50,259:INFO:Uploading model into container now
2023-12-13 14:49:50,259:INFO:_master_model_container: 22
2023-12-13 14:49:50,259:INFO:_display_container: 6
2023-12-13 14:49:50,259:INFO:RandomForestRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:50,259:INFO:create_model() successfully completed......................................
2023-12-13 14:49:50,356:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:50,356:INFO:RandomForestRegressor(n_jobs=-1, random_state=2129) result for R2 is 0.7153
2023-12-13 14:49:50,356:INFO:RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129) result for R2 is 0.7177
2023-12-13 14:49:50,356:INFO:RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129) is best model
2023-12-13 14:49:50,356:INFO:choose_better completed
2023-12-13 14:49:50,365:INFO:_master_model_container: 22
2023-12-13 14:49:50,365:INFO:_display_container: 5
2023-12-13 14:49:50,366:INFO:RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129)
2023-12-13 14:49:50,366:INFO:tune_model() successfully completed......................................
2023-12-13 14:49:50,482:INFO:Initializing tune_model()
2023-12-13 14:49:50,482:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:49:50,482:INFO:Checking exceptions
2023-12-13 14:49:50,497:INFO:Copying training dataset
2023-12-13 14:49:50,499:INFO:Checking base model
2023-12-13 14:49:50,499:INFO:Base model : Extra Trees Regressor
2023-12-13 14:49:50,502:INFO:Declaring metric variables
2023-12-13 14:49:50,505:INFO:Defining Hyperparameters
2023-12-13 14:49:50,605:INFO:Tuning with n_jobs=-1
2023-12-13 14:49:50,605:INFO:Initializing RandomizedSearchCV
2023-12-13 14:49:54,329:INFO:best_params: {'actual_estimator__n_estimators': 150, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2023-12-13 14:49:54,329:INFO:Hyperparameter search completed
2023-12-13 14:49:54,329:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:54,329:INFO:Initializing create_model()
2023-12-13 14:49:54,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B2B4C2A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 150, 'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'absolute_error', 'bootstrap': False})
2023-12-13 14:49:54,329:INFO:Checking exceptions
2023-12-13 14:49:54,329:INFO:Importing libraries
2023-12-13 14:49:54,329:INFO:Copying training dataset
2023-12-13 14:49:54,334:INFO:Defining folds
2023-12-13 14:49:54,334:INFO:Declaring metric variables
2023-12-13 14:49:54,334:INFO:Importing untrained model
2023-12-13 14:49:54,334:INFO:Declaring custom model
2023-12-13 14:49:54,340:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:49:54,347:INFO:Starting cross validation
2023-12-13 14:49:54,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:55,135:INFO:Calculating mean and std
2023-12-13 14:49:55,135:INFO:Creating metrics dataframe
2023-12-13 14:49:55,141:INFO:Finalizing model
2023-12-13 14:49:55,511:INFO:Uploading results into container
2023-12-13 14:49:55,512:INFO:Uploading model into container now
2023-12-13 14:49:55,513:INFO:_master_model_container: 23
2023-12-13 14:49:55,513:INFO:_display_container: 6
2023-12-13 14:49:55,513:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=8,
                    min_impurity_decrease=0.01, min_samples_leaf=3,
                    min_samples_split=9, n_estimators=150, n_jobs=-1,
                    random_state=2129)
2023-12-13 14:49:55,513:INFO:create_model() successfully completed......................................
2023-12-13 14:49:55,614:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:55,614:INFO:choose_better activated
2023-12-13 14:49:55,614:INFO:SubProcess create_model() called ==================================
2023-12-13 14:49:55,614:INFO:Initializing create_model()
2023-12-13 14:49:55,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:55,614:INFO:Checking exceptions
2023-12-13 14:49:55,614:INFO:Importing libraries
2023-12-13 14:49:55,614:INFO:Copying training dataset
2023-12-13 14:49:55,625:INFO:Defining folds
2023-12-13 14:49:55,625:INFO:Declaring metric variables
2023-12-13 14:49:55,625:INFO:Importing untrained model
2023-12-13 14:49:55,625:INFO:Declaring custom model
2023-12-13 14:49:55,625:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:49:55,625:INFO:Starting cross validation
2023-12-13 14:49:55,625:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:49:55,903:INFO:Calculating mean and std
2023-12-13 14:49:55,903:INFO:Creating metrics dataframe
2023-12-13 14:49:55,903:INFO:Finalizing model
2023-12-13 14:49:55,996:INFO:Uploading results into container
2023-12-13 14:49:55,996:INFO:Uploading model into container now
2023-12-13 14:49:55,996:INFO:_master_model_container: 24
2023-12-13 14:49:55,996:INFO:_display_container: 7
2023-12-13 14:49:55,996:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:55,996:INFO:create_model() successfully completed......................................
2023-12-13 14:49:56,090:INFO:SubProcess create_model() end ==================================
2023-12-13 14:49:56,096:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2129) result for R2 is 0.7049
2023-12-13 14:49:56,096:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=8,
                    min_impurity_decrease=0.01, min_samples_leaf=3,
                    min_samples_split=9, n_estimators=150, n_jobs=-1,
                    random_state=2129) result for R2 is 0.6795
2023-12-13 14:49:56,096:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2129) is best model
2023-12-13 14:49:56,096:INFO:choose_better completed
2023-12-13 14:49:56,096:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:49:56,096:INFO:_master_model_container: 24
2023-12-13 14:49:56,096:INFO:_display_container: 6
2023-12-13 14:49:56,096:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:56,096:INFO:tune_model() successfully completed......................................
2023-12-13 14:49:56,248:INFO:Initializing plot_model()
2023-12-13 14:49:56,248:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:49:56,248:INFO:Checking exceptions
2023-12-13 14:49:56,271:INFO:Preloading libraries
2023-12-13 14:49:56,275:INFO:Copying training dataset
2023-12-13 14:49:56,275:INFO:Plot type: residuals
2023-12-13 14:49:56,338:INFO:Fitting Model
2023-12-13 14:49:56,338:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:49:56,400:INFO:Scoring test/hold-out set
2023-12-13 14:49:56,674:INFO:Visual Rendered Successfully
2023-12-13 14:49:56,774:INFO:plot_model() successfully completed......................................
2023-12-13 14:49:56,796:INFO:Initializing plot_model()
2023-12-13 14:49:56,796:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:49:56,796:INFO:Checking exceptions
2023-12-13 14:49:56,816:INFO:Preloading libraries
2023-12-13 14:49:56,827:INFO:Copying training dataset
2023-12-13 14:49:56,827:INFO:Plot type: residuals
2023-12-13 14:49:56,889:INFO:Fitting Model
2023-12-13 14:49:56,889:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:49:56,949:INFO:Scoring test/hold-out set
2023-12-13 14:49:57,231:INFO:Visual Rendered Successfully
2023-12-13 14:49:57,340:INFO:plot_model() successfully completed......................................
2023-12-13 14:49:57,362:INFO:Initializing plot_model()
2023-12-13 14:49:57,362:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:49:57,363:INFO:Checking exceptions
2023-12-13 14:49:57,382:INFO:Preloading libraries
2023-12-13 14:49:57,386:INFO:Copying training dataset
2023-12-13 14:49:57,386:INFO:Plot type: feature
2023-12-13 14:49:57,387:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:49:57,496:INFO:Visual Rendered Successfully
2023-12-13 14:49:57,604:INFO:plot_model() successfully completed......................................
2023-12-13 14:49:57,631:INFO:Initializing plot_model()
2023-12-13 14:49:57,631:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:49:57,631:INFO:Checking exceptions
2023-12-13 14:49:57,652:INFO:Preloading libraries
2023-12-13 14:49:57,661:INFO:Copying training dataset
2023-12-13 14:49:57,661:INFO:Plot type: feature
2023-12-13 14:49:57,661:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:49:57,781:INFO:Visual Rendered Successfully
2023-12-13 14:49:57,876:INFO:plot_model() successfully completed......................................
2023-12-13 14:49:57,901:INFO:Initializing predict_model()
2023-12-13 14:49:57,901:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AFBB9C0>)
2023-12-13 14:49:57,901:INFO:Checking exceptions
2023-12-13 14:49:57,901:INFO:Preloading libraries
2023-12-13 14:49:58,105:INFO:Initializing predict_model()
2023-12-13 14:49:58,105:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2ABB2E80>)
2023-12-13 14:49:58,105:INFO:Checking exceptions
2023-12-13 14:49:58,105:INFO:Preloading libraries
2023-12-13 14:49:58,288:INFO:Initializing finalize_model()
2023-12-13 14:49:58,289:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:49:58,289:INFO:Finalizing RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129)
2023-12-13 14:49:58,290:INFO:Initializing create_model()
2023-12-13 14:49:58,290:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=RandomForestRegressor(bootstrap=False, max_depth=6, max_features='log2',
                      min_impurity_decrease=0.5, min_samples_leaf=2,
                      n_estimators=80, n_jobs=-1, random_state=2129), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:58,290:INFO:Checking exceptions
2023-12-13 14:49:58,290:INFO:Importing libraries
2023-12-13 14:49:58,290:INFO:Copying training dataset
2023-12-13 14:49:58,290:INFO:Defining folds
2023-12-13 14:49:58,290:INFO:Declaring metric variables
2023-12-13 14:49:58,290:INFO:Importing untrained model
2023-12-13 14:49:58,290:INFO:Declaring custom model
2023-12-13 14:49:58,290:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:49:58,290:INFO:Cross validation set to False
2023-12-13 14:49:58,290:INFO:Fitting Model
2023-12-13 14:49:58,361:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=6,
                                       max_features='log2',
                                       min_impurity_decrease=0.5,
                                       min_samples_leaf=2, n_estimators=80,
                                       n_jobs=-1, random_state=2129))])
2023-12-13 14:49:58,361:INFO:create_model() successfully completed......................................
2023-12-13 14:49:58,460:INFO:_master_model_container: 24
2023-12-13 14:49:58,460:INFO:_display_container: 8
2023-12-13 14:49:58,460:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=6,
                                       max_features='log2',
                                       min_impurity_decrease=0.5,
                                       min_samples_leaf=2, n_estimators=80,
                                       n_jobs=-1, random_state=2129))])
2023-12-13 14:49:58,460:INFO:finalize_model() successfully completed......................................
2023-12-13 14:49:58,583:INFO:Initializing finalize_model()
2023-12-13 14:49:58,583:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:49:58,583:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=2129)
2023-12-13 14:49:58,589:INFO:Initializing create_model()
2023-12-13 14:49:58,589:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2129), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:49:58,589:INFO:Checking exceptions
2023-12-13 14:49:58,590:INFO:Importing libraries
2023-12-13 14:49:58,590:INFO:Copying training dataset
2023-12-13 14:49:58,590:INFO:Defining folds
2023-12-13 14:49:58,590:INFO:Declaring metric variables
2023-12-13 14:49:58,590:INFO:Importing untrained model
2023-12-13 14:49:58,590:INFO:Declaring custom model
2023-12-13 14:49:58,590:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:49:58,590:INFO:Cross validation set to False
2023-12-13 14:49:58,590:INFO:Fitting Model
2023-12-13 14:49:58,686:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2129))])
2023-12-13 14:49:58,686:INFO:create_model() successfully completed......................................
2023-12-13 14:49:58,813:INFO:_master_model_container: 24
2023-12-13 14:49:58,813:INFO:_display_container: 8
2023-12-13 14:49:58,817:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2129))])
2023-12-13 14:49:58,817:INFO:finalize_model() successfully completed......................................
2023-12-13 14:49:58,956:INFO:Initializing predict_model()
2023-12-13 14:49:58,956:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=6,
                                       max_features='log2',
                                       min_impurity_decrease=0.5,
                                       min_samples_leaf=2, n_estimators=80,
                                       n_jobs=-1, random_state=2129))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B1880E0>)
2023-12-13 14:49:58,956:INFO:Checking exceptions
2023-12-13 14:49:58,956:INFO:Preloading libraries
2023-12-13 14:49:59,146:INFO:Initializing predict_model()
2023-12-13 14:49:59,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2129))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2B2AE160>)
2023-12-13 14:49:59,147:INFO:Checking exceptions
2023-12-13 14:49:59,147:INFO:Preloading libraries
2023-12-13 14:49:59,337:INFO:Initializing predict_model()
2023-12-13 14:49:59,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False, max_depth=6,
                                       max_features='log2',
                                       min_impurity_decrease=0.5,
                                       min_samples_leaf=2, n_estimators=80,
                                       n_jobs=-1, random_state=2129))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AB5DD00>)
2023-12-13 14:49:59,337:INFO:Checking exceptions
2023-12-13 14:49:59,337:INFO:Preloading libraries
2023-12-13 14:49:59,337:INFO:Set up data.
2023-12-13 14:49:59,347:INFO:Set up index.
2023-12-13 14:49:59,514:INFO:Initializing predict_model()
2023-12-13 14:49:59,514:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABD2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2129))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AB5C220>)
2023-12-13 14:49:59,514:INFO:Checking exceptions
2023-12-13 14:49:59,514:INFO:Preloading libraries
2023-12-13 14:49:59,514:INFO:Set up data.
2023-12-13 14:49:59,514:INFO:Set up index.
2023-12-13 14:50:15,366:INFO:PyCaret RegressionExperiment
2023-12-13 14:50:15,366:INFO:Logging name: reg-default-name
2023-12-13 14:50:15,366:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-13 14:50:15,366:INFO:version 3.2.0
2023-12-13 14:50:15,366:INFO:Initializing setup()
2023-12-13 14:50:15,366:INFO:self.USI: 3be9
2023-12-13 14:50:15,366:INFO:self._variable_keys: {'y_test', 'exp_id', 'memory', 'USI', '_ml_usecase', 'gpu_param', 'X_train', 'transform_target_param', 'gpu_n_jobs_param', 'y', 'y_train', 'idx', 'pipeline', 'logging_param', 'log_plots_param', '_available_plots', 'html_param', 'exp_name_log', 'data', 'fold_shuffle_param', 'target_param', 'n_jobs_param', 'X', 'seed', 'fold_generator', 'fold_groups_param', 'X_test'}
2023-12-13 14:50:15,366:INFO:Checking environment
2023-12-13 14:50:15,366:INFO:python_version: 3.11.0
2023-12-13 14:50:15,366:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-13 14:50:15,366:INFO:machine: AMD64
2023-12-13 14:50:15,366:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-13 14:50:15,375:INFO:Memory: svmem(total=14877257728, available=2467786752, percent=83.4, used=12409470976, free=2467786752)
2023-12-13 14:50:15,375:INFO:Physical Core: 8
2023-12-13 14:50:15,375:INFO:Logical Core: 16
2023-12-13 14:50:15,375:INFO:Checking libraries
2023-12-13 14:50:15,375:INFO:System:
2023-12-13 14:50:15,375:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-13 14:50:15,375:INFO:executable: c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Scripts\python.exe
2023-12-13 14:50:15,375:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-13 14:50:15,375:INFO:PyCaret required dependencies:
2023-12-13 14:50:15,375:INFO:                 pip: 23.3.1
2023-12-13 14:50:15,375:INFO:          setuptools: 65.5.0
2023-12-13 14:50:15,375:INFO:             pycaret: 3.2.0
2023-12-13 14:50:15,375:INFO:             IPython: 8.18.1
2023-12-13 14:50:15,375:INFO:          ipywidgets: 8.1.1
2023-12-13 14:50:15,375:INFO:                tqdm: 4.66.1
2023-12-13 14:50:15,375:INFO:               numpy: 1.25.2
2023-12-13 14:50:15,375:INFO:              pandas: 2.1.4
2023-12-13 14:50:15,375:INFO:              jinja2: 3.1.2
2023-12-13 14:50:15,375:INFO:               scipy: 1.10.1
2023-12-13 14:50:15,375:INFO:              joblib: 1.3.2
2023-12-13 14:50:15,375:INFO:             sklearn: 1.2.2
2023-12-13 14:50:15,375:INFO:                pyod: 1.1.2
2023-12-13 14:50:15,375:INFO:            imblearn: 0.11.0
2023-12-13 14:50:15,375:INFO:   category_encoders: 2.6.3
2023-12-13 14:50:15,375:INFO:            lightgbm: 4.1.0
2023-12-13 14:50:15,375:INFO:               numba: 0.58.1
2023-12-13 14:50:15,375:INFO:            requests: 2.31.0
2023-12-13 14:50:15,375:INFO:          matplotlib: 3.6.0
2023-12-13 14:50:15,375:INFO:          scikitplot: 0.3.7
2023-12-13 14:50:15,375:INFO:         yellowbrick: 1.5
2023-12-13 14:50:15,375:INFO:              plotly: 5.18.0
2023-12-13 14:50:15,375:INFO:    plotly-resampler: Not installed
2023-12-13 14:50:15,375:INFO:             kaleido: 0.2.1
2023-12-13 14:50:15,375:INFO:           schemdraw: 0.15
2023-12-13 14:50:15,375:INFO:         statsmodels: 0.14.0
2023-12-13 14:50:15,375:INFO:              sktime: 0.21.1
2023-12-13 14:50:15,375:INFO:               tbats: 1.1.3
2023-12-13 14:50:15,375:INFO:            pmdarima: 2.0.4
2023-12-13 14:50:15,383:INFO:              psutil: 5.9.6
2023-12-13 14:50:15,383:INFO:          markupsafe: 2.1.3
2023-12-13 14:50:15,383:INFO:             pickle5: Not installed
2023-12-13 14:50:15,383:INFO:         cloudpickle: 3.0.0
2023-12-13 14:50:15,383:INFO:         deprecation: 2.1.0
2023-12-13 14:50:15,383:INFO:              xxhash: 3.4.1
2023-12-13 14:50:15,383:INFO:           wurlitzer: Not installed
2023-12-13 14:50:15,383:INFO:PyCaret optional dependencies:
2023-12-13 14:50:15,383:INFO:                shap: Not installed
2023-12-13 14:50:15,383:INFO:           interpret: Not installed
2023-12-13 14:50:15,383:INFO:                umap: Not installed
2023-12-13 14:50:15,383:INFO:     ydata_profiling: Not installed
2023-12-13 14:50:15,383:INFO:  explainerdashboard: Not installed
2023-12-13 14:50:15,383:INFO:             autoviz: Not installed
2023-12-13 14:50:15,383:INFO:           fairlearn: Not installed
2023-12-13 14:50:15,383:INFO:          deepchecks: Not installed
2023-12-13 14:50:15,383:INFO:             xgboost: Not installed
2023-12-13 14:50:15,383:INFO:            catboost: Not installed
2023-12-13 14:50:15,383:INFO:              kmodes: Not installed
2023-12-13 14:50:15,383:INFO:             mlxtend: Not installed
2023-12-13 14:50:15,383:INFO:       statsforecast: Not installed
2023-12-13 14:50:15,383:INFO:        tune_sklearn: Not installed
2023-12-13 14:50:15,383:INFO:                 ray: Not installed
2023-12-13 14:50:15,383:INFO:            hyperopt: Not installed
2023-12-13 14:50:15,383:INFO:              optuna: Not installed
2023-12-13 14:50:15,383:INFO:               skopt: Not installed
2023-12-13 14:50:15,383:INFO:              mlflow: Not installed
2023-12-13 14:50:15,383:INFO:              gradio: Not installed
2023-12-13 14:50:15,383:INFO:             fastapi: Not installed
2023-12-13 14:50:15,383:INFO:             uvicorn: Not installed
2023-12-13 14:50:15,383:INFO:              m2cgen: Not installed
2023-12-13 14:50:15,383:INFO:           evidently: Not installed
2023-12-13 14:50:15,383:INFO:               fugue: Not installed
2023-12-13 14:50:15,383:INFO:           streamlit: Not installed
2023-12-13 14:50:15,383:INFO:             prophet: Not installed
2023-12-13 14:50:15,383:INFO:None
2023-12-13 14:50:15,384:INFO:Set up data.
2023-12-13 14:50:15,387:INFO:Set up folding strategy.
2023-12-13 14:50:15,387:INFO:Set up train/test split.
2023-12-13 14:50:15,388:INFO:Set up index.
2023-12-13 14:50:15,389:INFO:Assigning column types.
2023-12-13 14:50:15,391:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-13 14:50:15,391:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,395:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,396:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,442:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,477:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,477:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,485:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,529:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,564:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-13 14:50:15,568:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,572:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,616:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,649:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,657:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,699:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,733:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,733:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-13 14:50:15,741:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,824:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,868:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,907:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-13 14:50:15,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:15,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:15,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:16,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-13 14:50:16,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,074:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-13 14:50:16,124:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:16,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,215:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-13 14:50:16,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,248:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-13 14:50:16,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,423:INFO:Preparing preprocessing pipeline...
2023-12-13 14:50:16,423:INFO:Set up simple imputation.
2023-12-13 14:50:16,423:INFO:Set up column name cleaning.
2023-12-13 14:50:16,440:INFO:Finished creating preprocessing pipeline.
2023-12-13 14:50:16,440:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-13 14:50:16,440:INFO:Creating final display dataframe.
2023-12-13 14:50:16,490:INFO:Setup _display_container:                     Description             Value
0                    Session id              1353
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (609, 7)
4        Transformed data shape          (609, 7)
5   Transformed train set shape          (426, 7)
6    Transformed test set shape          (183, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3be9
2023-12-13 14:50:16,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-13 14:50:16,673:INFO:setup() successfully completed in 1.31s...............
2023-12-13 14:50:16,694:INFO:Initializing compare_models()
2023-12-13 14:50:16,694:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-12-13 14:50:16,694:INFO:Checking exceptions
2023-12-13 14:50:16,697:INFO:Preparing display monitor
2023-12-13 14:50:16,712:INFO:Initializing Linear Regression
2023-12-13 14:50:16,712:INFO:Total runtime is 0.0 minutes
2023-12-13 14:50:16,715:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:16,715:INFO:Initializing create_model()
2023-12-13 14:50:16,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:16,715:INFO:Checking exceptions
2023-12-13 14:50:16,715:INFO:Importing libraries
2023-12-13 14:50:16,715:INFO:Copying training dataset
2023-12-13 14:50:16,718:INFO:Defining folds
2023-12-13 14:50:16,719:INFO:Declaring metric variables
2023-12-13 14:50:16,721:INFO:Importing untrained model
2023-12-13 14:50:16,724:INFO:Linear Regression Imported successfully
2023-12-13 14:50:16,730:INFO:Starting cross validation
2023-12-13 14:50:16,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:16,781:INFO:Calculating mean and std
2023-12-13 14:50:16,781:INFO:Creating metrics dataframe
2023-12-13 14:50:16,783:INFO:Uploading results into container
2023-12-13 14:50:16,783:INFO:Uploading model into container now
2023-12-13 14:50:16,783:INFO:_master_model_container: 1
2023-12-13 14:50:16,783:INFO:_display_container: 2
2023-12-13 14:50:16,783:INFO:LinearRegression(n_jobs=-1)
2023-12-13 14:50:16,783:INFO:create_model() successfully completed......................................
2023-12-13 14:50:16,872:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:16,872:INFO:Creating metrics dataframe
2023-12-13 14:50:16,872:INFO:Initializing Lasso Regression
2023-12-13 14:50:16,872:INFO:Total runtime is 0.0026679635047912598 minutes
2023-12-13 14:50:16,888:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:16,888:INFO:Initializing create_model()
2023-12-13 14:50:16,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:16,888:INFO:Checking exceptions
2023-12-13 14:50:16,888:INFO:Importing libraries
2023-12-13 14:50:16,888:INFO:Copying training dataset
2023-12-13 14:50:16,888:INFO:Defining folds
2023-12-13 14:50:16,888:INFO:Declaring metric variables
2023-12-13 14:50:16,888:INFO:Importing untrained model
2023-12-13 14:50:16,888:INFO:Lasso Regression Imported successfully
2023-12-13 14:50:16,888:INFO:Starting cross validation
2023-12-13 14:50:16,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:16,949:INFO:Calculating mean and std
2023-12-13 14:50:16,949:INFO:Creating metrics dataframe
2023-12-13 14:50:16,949:INFO:Uploading results into container
2023-12-13 14:50:16,952:INFO:Uploading model into container now
2023-12-13 14:50:16,952:INFO:_master_model_container: 2
2023-12-13 14:50:16,952:INFO:_display_container: 2
2023-12-13 14:50:16,952:INFO:Lasso(random_state=1353)
2023-12-13 14:50:16,952:INFO:create_model() successfully completed......................................
2023-12-13 14:50:17,036:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:17,036:INFO:Creating metrics dataframe
2023-12-13 14:50:17,051:INFO:Initializing Ridge Regression
2023-12-13 14:50:17,051:INFO:Total runtime is 0.005645958582560222 minutes
2023-12-13 14:50:17,051:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:17,051:INFO:Initializing create_model()
2023-12-13 14:50:17,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:17,051:INFO:Checking exceptions
2023-12-13 14:50:17,051:INFO:Importing libraries
2023-12-13 14:50:17,051:INFO:Copying training dataset
2023-12-13 14:50:17,051:INFO:Defining folds
2023-12-13 14:50:17,051:INFO:Declaring metric variables
2023-12-13 14:50:17,051:INFO:Importing untrained model
2023-12-13 14:50:17,051:INFO:Ridge Regression Imported successfully
2023-12-13 14:50:17,065:INFO:Starting cross validation
2023-12-13 14:50:17,065:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:17,116:INFO:Calculating mean and std
2023-12-13 14:50:17,116:INFO:Creating metrics dataframe
2023-12-13 14:50:17,116:INFO:Uploading results into container
2023-12-13 14:50:17,116:INFO:Uploading model into container now
2023-12-13 14:50:17,116:INFO:_master_model_container: 3
2023-12-13 14:50:17,116:INFO:_display_container: 2
2023-12-13 14:50:17,116:INFO:Ridge(random_state=1353)
2023-12-13 14:50:17,116:INFO:create_model() successfully completed......................................
2023-12-13 14:50:17,210:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:17,210:INFO:Creating metrics dataframe
2023-12-13 14:50:17,210:INFO:Initializing Elastic Net
2023-12-13 14:50:17,210:INFO:Total runtime is 0.00828551451365153 minutes
2023-12-13 14:50:17,210:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:17,210:INFO:Initializing create_model()
2023-12-13 14:50:17,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:17,210:INFO:Checking exceptions
2023-12-13 14:50:17,210:INFO:Importing libraries
2023-12-13 14:50:17,210:INFO:Copying training dataset
2023-12-13 14:50:17,210:INFO:Defining folds
2023-12-13 14:50:17,210:INFO:Declaring metric variables
2023-12-13 14:50:17,225:INFO:Importing untrained model
2023-12-13 14:50:17,225:INFO:Elastic Net Imported successfully
2023-12-13 14:50:17,225:INFO:Starting cross validation
2023-12-13 14:50:17,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:17,251:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.647e+12, tolerance: 5.331e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:50:17,265:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.490e+12, tolerance: 5.916e+09
  model = cd_fast.enet_coordinate_descent(

2023-12-13 14:50:17,282:INFO:Calculating mean and std
2023-12-13 14:50:17,282:INFO:Creating metrics dataframe
2023-12-13 14:50:17,282:INFO:Uploading results into container
2023-12-13 14:50:17,282:INFO:Uploading model into container now
2023-12-13 14:50:17,282:INFO:_master_model_container: 4
2023-12-13 14:50:17,282:INFO:_display_container: 2
2023-12-13 14:50:17,282:INFO:ElasticNet(random_state=1353)
2023-12-13 14:50:17,282:INFO:create_model() successfully completed......................................
2023-12-13 14:50:17,366:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:17,382:INFO:Creating metrics dataframe
2023-12-13 14:50:17,382:INFO:Initializing Least Angle Regression
2023-12-13 14:50:17,382:INFO:Total runtime is 0.0111619234085083 minutes
2023-12-13 14:50:17,382:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:17,382:INFO:Initializing create_model()
2023-12-13 14:50:17,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:17,382:INFO:Checking exceptions
2023-12-13 14:50:17,382:INFO:Importing libraries
2023-12-13 14:50:17,382:INFO:Copying training dataset
2023-12-13 14:50:17,382:INFO:Defining folds
2023-12-13 14:50:17,382:INFO:Declaring metric variables
2023-12-13 14:50:17,382:INFO:Importing untrained model
2023-12-13 14:50:17,398:INFO:Least Angle Regression Imported successfully
2023-12-13 14:50:17,398:INFO:Starting cross validation
2023-12-13 14:50:17,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:17,449:INFO:Calculating mean and std
2023-12-13 14:50:17,449:INFO:Creating metrics dataframe
2023-12-13 14:50:17,449:INFO:Uploading results into container
2023-12-13 14:50:17,449:INFO:Uploading model into container now
2023-12-13 14:50:17,449:INFO:_master_model_container: 5
2023-12-13 14:50:17,449:INFO:_display_container: 2
2023-12-13 14:50:17,449:INFO:Lars(random_state=1353)
2023-12-13 14:50:17,449:INFO:create_model() successfully completed......................................
2023-12-13 14:50:17,539:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:17,539:INFO:Creating metrics dataframe
2023-12-13 14:50:17,539:INFO:Initializing Lasso Least Angle Regression
2023-12-13 14:50:17,539:INFO:Total runtime is 0.013782572746276856 minutes
2023-12-13 14:50:17,555:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:17,555:INFO:Initializing create_model()
2023-12-13 14:50:17,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:17,555:INFO:Checking exceptions
2023-12-13 14:50:17,555:INFO:Importing libraries
2023-12-13 14:50:17,555:INFO:Copying training dataset
2023-12-13 14:50:17,555:INFO:Defining folds
2023-12-13 14:50:17,555:INFO:Declaring metric variables
2023-12-13 14:50:17,555:INFO:Importing untrained model
2023-12-13 14:50:17,555:INFO:Lasso Least Angle Regression Imported successfully
2023-12-13 14:50:17,565:INFO:Starting cross validation
2023-12-13 14:50:17,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:17,614:INFO:Calculating mean and std
2023-12-13 14:50:17,614:INFO:Creating metrics dataframe
2023-12-13 14:50:17,614:INFO:Uploading results into container
2023-12-13 14:50:17,614:INFO:Uploading model into container now
2023-12-13 14:50:17,614:INFO:_master_model_container: 6
2023-12-13 14:50:17,614:INFO:_display_container: 2
2023-12-13 14:50:17,614:INFO:LassoLars(random_state=1353)
2023-12-13 14:50:17,614:INFO:create_model() successfully completed......................................
2023-12-13 14:50:17,712:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:17,712:INFO:Creating metrics dataframe
2023-12-13 14:50:17,712:INFO:Initializing Orthogonal Matching Pursuit
2023-12-13 14:50:17,712:INFO:Total runtime is 0.01666307051976522 minutes
2023-12-13 14:50:17,712:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:17,712:INFO:Initializing create_model()
2023-12-13 14:50:17,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:17,712:INFO:Checking exceptions
2023-12-13 14:50:17,712:INFO:Importing libraries
2023-12-13 14:50:17,712:INFO:Copying training dataset
2023-12-13 14:50:17,712:INFO:Defining folds
2023-12-13 14:50:17,712:INFO:Declaring metric variables
2023-12-13 14:50:17,728:INFO:Importing untrained model
2023-12-13 14:50:17,728:INFO:Orthogonal Matching Pursuit Imported successfully
2023-12-13 14:50:17,728:INFO:Starting cross validation
2023-12-13 14:50:17,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:17,784:INFO:Calculating mean and std
2023-12-13 14:50:17,784:INFO:Creating metrics dataframe
2023-12-13 14:50:17,784:INFO:Uploading results into container
2023-12-13 14:50:17,784:INFO:Uploading model into container now
2023-12-13 14:50:17,784:INFO:_master_model_container: 7
2023-12-13 14:50:17,784:INFO:_display_container: 2
2023-12-13 14:50:17,784:INFO:OrthogonalMatchingPursuit()
2023-12-13 14:50:17,784:INFO:create_model() successfully completed......................................
2023-12-13 14:50:17,870:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:17,870:INFO:Creating metrics dataframe
2023-12-13 14:50:17,885:INFO:Initializing Bayesian Ridge
2023-12-13 14:50:17,885:INFO:Total runtime is 0.019549659887949628 minutes
2023-12-13 14:50:17,885:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:17,885:INFO:Initializing create_model()
2023-12-13 14:50:17,885:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:17,885:INFO:Checking exceptions
2023-12-13 14:50:17,885:INFO:Importing libraries
2023-12-13 14:50:17,885:INFO:Copying training dataset
2023-12-13 14:50:17,885:INFO:Defining folds
2023-12-13 14:50:17,885:INFO:Declaring metric variables
2023-12-13 14:50:17,885:INFO:Importing untrained model
2023-12-13 14:50:17,901:INFO:Bayesian Ridge Imported successfully
2023-12-13 14:50:17,901:INFO:Starting cross validation
2023-12-13 14:50:17,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:17,954:INFO:Calculating mean and std
2023-12-13 14:50:17,954:INFO:Creating metrics dataframe
2023-12-13 14:50:17,954:INFO:Uploading results into container
2023-12-13 14:50:17,954:INFO:Uploading model into container now
2023-12-13 14:50:17,954:INFO:_master_model_container: 8
2023-12-13 14:50:17,954:INFO:_display_container: 2
2023-12-13 14:50:17,954:INFO:BayesianRidge()
2023-12-13 14:50:17,954:INFO:create_model() successfully completed......................................
2023-12-13 14:50:18,043:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:18,043:INFO:Creating metrics dataframe
2023-12-13 14:50:18,058:INFO:Initializing Passive Aggressive Regressor
2023-12-13 14:50:18,058:INFO:Total runtime is 0.02243485450744629 minutes
2023-12-13 14:50:18,058:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:18,058:INFO:Initializing create_model()
2023-12-13 14:50:18,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:18,058:INFO:Checking exceptions
2023-12-13 14:50:18,058:INFO:Importing libraries
2023-12-13 14:50:18,058:INFO:Copying training dataset
2023-12-13 14:50:18,066:INFO:Defining folds
2023-12-13 14:50:18,066:INFO:Declaring metric variables
2023-12-13 14:50:18,066:INFO:Importing untrained model
2023-12-13 14:50:18,066:INFO:Passive Aggressive Regressor Imported successfully
2023-12-13 14:50:18,074:INFO:Starting cross validation
2023-12-13 14:50:18,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:18,126:INFO:Calculating mean and std
2023-12-13 14:50:18,126:INFO:Creating metrics dataframe
2023-12-13 14:50:18,126:INFO:Uploading results into container
2023-12-13 14:50:18,126:INFO:Uploading model into container now
2023-12-13 14:50:18,126:INFO:_master_model_container: 9
2023-12-13 14:50:18,126:INFO:_display_container: 2
2023-12-13 14:50:18,126:INFO:PassiveAggressiveRegressor(random_state=1353)
2023-12-13 14:50:18,126:INFO:create_model() successfully completed......................................
2023-12-13 14:50:18,216:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:18,216:INFO:Creating metrics dataframe
2023-12-13 14:50:18,216:INFO:Initializing Huber Regressor
2023-12-13 14:50:18,216:INFO:Total runtime is 0.025068203608194988 minutes
2023-12-13 14:50:18,232:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:18,232:INFO:Initializing create_model()
2023-12-13 14:50:18,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:18,232:INFO:Checking exceptions
2023-12-13 14:50:18,232:INFO:Importing libraries
2023-12-13 14:50:18,232:INFO:Copying training dataset
2023-12-13 14:50:18,232:INFO:Defining folds
2023-12-13 14:50:18,232:INFO:Declaring metric variables
2023-12-13 14:50:18,232:INFO:Importing untrained model
2023-12-13 14:50:18,232:INFO:Huber Regressor Imported successfully
2023-12-13 14:50:18,232:INFO:Starting cross validation
2023-12-13 14:50:18,232:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:18,280:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,286:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,286:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,296:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,296:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,296:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,306:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,306:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,311:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-12-13 14:50:18,326:INFO:Calculating mean and std
2023-12-13 14:50:18,327:INFO:Creating metrics dataframe
2023-12-13 14:50:18,327:INFO:Uploading results into container
2023-12-13 14:50:18,327:INFO:Uploading model into container now
2023-12-13 14:50:18,327:INFO:_master_model_container: 10
2023-12-13 14:50:18,327:INFO:_display_container: 2
2023-12-13 14:50:18,327:INFO:HuberRegressor()
2023-12-13 14:50:18,327:INFO:create_model() successfully completed......................................
2023-12-13 14:50:18,421:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:18,421:INFO:Creating metrics dataframe
2023-12-13 14:50:18,421:INFO:Initializing K Neighbors Regressor
2023-12-13 14:50:18,421:INFO:Total runtime is 0.028480390707651775 minutes
2023-12-13 14:50:18,421:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:18,421:INFO:Initializing create_model()
2023-12-13 14:50:18,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:18,421:INFO:Checking exceptions
2023-12-13 14:50:18,421:INFO:Importing libraries
2023-12-13 14:50:18,421:INFO:Copying training dataset
2023-12-13 14:50:18,437:INFO:Defining folds
2023-12-13 14:50:18,437:INFO:Declaring metric variables
2023-12-13 14:50:18,437:INFO:Importing untrained model
2023-12-13 14:50:18,437:INFO:K Neighbors Regressor Imported successfully
2023-12-13 14:50:18,437:INFO:Starting cross validation
2023-12-13 14:50:18,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:18,517:INFO:Calculating mean and std
2023-12-13 14:50:18,517:INFO:Creating metrics dataframe
2023-12-13 14:50:18,517:INFO:Uploading results into container
2023-12-13 14:50:18,517:INFO:Uploading model into container now
2023-12-13 14:50:18,517:INFO:_master_model_container: 11
2023-12-13 14:50:18,517:INFO:_display_container: 2
2023-12-13 14:50:18,517:INFO:KNeighborsRegressor(n_jobs=-1)
2023-12-13 14:50:18,517:INFO:create_model() successfully completed......................................
2023-12-13 14:50:18,611:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:18,611:INFO:Creating metrics dataframe
2023-12-13 14:50:18,611:INFO:Initializing Decision Tree Regressor
2023-12-13 14:50:18,611:INFO:Total runtime is 0.03163606325785319 minutes
2023-12-13 14:50:18,611:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:18,611:INFO:Initializing create_model()
2023-12-13 14:50:18,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:18,611:INFO:Checking exceptions
2023-12-13 14:50:18,611:INFO:Importing libraries
2023-12-13 14:50:18,611:INFO:Copying training dataset
2023-12-13 14:50:18,626:INFO:Defining folds
2023-12-13 14:50:18,626:INFO:Declaring metric variables
2023-12-13 14:50:18,626:INFO:Importing untrained model
2023-12-13 14:50:18,626:INFO:Decision Tree Regressor Imported successfully
2023-12-13 14:50:18,626:INFO:Starting cross validation
2023-12-13 14:50:18,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:18,686:INFO:Calculating mean and std
2023-12-13 14:50:18,686:INFO:Creating metrics dataframe
2023-12-13 14:50:18,686:INFO:Uploading results into container
2023-12-13 14:50:18,686:INFO:Uploading model into container now
2023-12-13 14:50:18,686:INFO:_master_model_container: 12
2023-12-13 14:50:18,686:INFO:_display_container: 2
2023-12-13 14:50:18,686:INFO:DecisionTreeRegressor(random_state=1353)
2023-12-13 14:50:18,686:INFO:create_model() successfully completed......................................
2023-12-13 14:50:18,768:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:18,768:INFO:Creating metrics dataframe
2023-12-13 14:50:18,784:INFO:Initializing Random Forest Regressor
2023-12-13 14:50:18,784:INFO:Total runtime is 0.034528716405232744 minutes
2023-12-13 14:50:18,784:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:18,784:INFO:Initializing create_model()
2023-12-13 14:50:18,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:18,784:INFO:Checking exceptions
2023-12-13 14:50:18,784:INFO:Importing libraries
2023-12-13 14:50:18,784:INFO:Copying training dataset
2023-12-13 14:50:18,784:INFO:Defining folds
2023-12-13 14:50:18,784:INFO:Declaring metric variables
2023-12-13 14:50:18,784:INFO:Importing untrained model
2023-12-13 14:50:18,800:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:50:18,800:INFO:Starting cross validation
2023-12-13 14:50:18,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:19,133:INFO:Calculating mean and std
2023-12-13 14:50:19,133:INFO:Creating metrics dataframe
2023-12-13 14:50:19,133:INFO:Uploading results into container
2023-12-13 14:50:19,133:INFO:Uploading model into container now
2023-12-13 14:50:19,133:INFO:_master_model_container: 13
2023-12-13 14:50:19,133:INFO:_display_container: 2
2023-12-13 14:50:19,133:INFO:RandomForestRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:19,133:INFO:create_model() successfully completed......................................
2023-12-13 14:50:19,236:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:19,236:INFO:Creating metrics dataframe
2023-12-13 14:50:19,247:INFO:Initializing Extra Trees Regressor
2023-12-13 14:50:19,247:INFO:Total runtime is 0.04223811626434326 minutes
2023-12-13 14:50:19,247:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:19,247:INFO:Initializing create_model()
2023-12-13 14:50:19,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:19,247:INFO:Checking exceptions
2023-12-13 14:50:19,247:INFO:Importing libraries
2023-12-13 14:50:19,247:INFO:Copying training dataset
2023-12-13 14:50:19,253:INFO:Defining folds
2023-12-13 14:50:19,253:INFO:Declaring metric variables
2023-12-13 14:50:19,253:INFO:Importing untrained model
2023-12-13 14:50:19,253:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:50:19,253:INFO:Starting cross validation
2023-12-13 14:50:19,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:19,576:INFO:Calculating mean and std
2023-12-13 14:50:19,576:INFO:Creating metrics dataframe
2023-12-13 14:50:19,576:INFO:Uploading results into container
2023-12-13 14:50:19,576:INFO:Uploading model into container now
2023-12-13 14:50:19,576:INFO:_master_model_container: 14
2023-12-13 14:50:19,576:INFO:_display_container: 2
2023-12-13 14:50:19,576:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:19,576:INFO:create_model() successfully completed......................................
2023-12-13 14:50:19,676:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:19,676:INFO:Creating metrics dataframe
2023-12-13 14:50:19,676:INFO:Initializing AdaBoost Regressor
2023-12-13 14:50:19,676:INFO:Total runtime is 0.049385881423950194 minutes
2023-12-13 14:50:19,676:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:19,676:INFO:Initializing create_model()
2023-12-13 14:50:19,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:19,676:INFO:Checking exceptions
2023-12-13 14:50:19,691:INFO:Importing libraries
2023-12-13 14:50:19,691:INFO:Copying training dataset
2023-12-13 14:50:19,691:INFO:Defining folds
2023-12-13 14:50:19,691:INFO:Declaring metric variables
2023-12-13 14:50:19,696:INFO:Importing untrained model
2023-12-13 14:50:19,698:INFO:AdaBoost Regressor Imported successfully
2023-12-13 14:50:19,699:INFO:Starting cross validation
2023-12-13 14:50:19,699:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:19,824:INFO:Calculating mean and std
2023-12-13 14:50:19,824:INFO:Creating metrics dataframe
2023-12-13 14:50:19,824:INFO:Uploading results into container
2023-12-13 14:50:19,824:INFO:Uploading model into container now
2023-12-13 14:50:19,824:INFO:_master_model_container: 15
2023-12-13 14:50:19,824:INFO:_display_container: 2
2023-12-13 14:50:19,824:INFO:AdaBoostRegressor(random_state=1353)
2023-12-13 14:50:19,824:INFO:create_model() successfully completed......................................
2023-12-13 14:50:19,926:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:19,926:INFO:Creating metrics dataframe
2023-12-13 14:50:19,926:INFO:Initializing Gradient Boosting Regressor
2023-12-13 14:50:19,926:INFO:Total runtime is 0.053567457199096676 minutes
2023-12-13 14:50:19,926:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:19,926:INFO:Initializing create_model()
2023-12-13 14:50:19,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:19,926:INFO:Checking exceptions
2023-12-13 14:50:19,926:INFO:Importing libraries
2023-12-13 14:50:19,926:INFO:Copying training dataset
2023-12-13 14:50:19,926:INFO:Defining folds
2023-12-13 14:50:19,942:INFO:Declaring metric variables
2023-12-13 14:50:19,942:INFO:Importing untrained model
2023-12-13 14:50:19,942:INFO:Gradient Boosting Regressor Imported successfully
2023-12-13 14:50:19,942:INFO:Starting cross validation
2023-12-13 14:50:19,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:20,083:INFO:Calculating mean and std
2023-12-13 14:50:20,083:INFO:Creating metrics dataframe
2023-12-13 14:50:20,086:INFO:Uploading results into container
2023-12-13 14:50:20,086:INFO:Uploading model into container now
2023-12-13 14:50:20,087:INFO:_master_model_container: 16
2023-12-13 14:50:20,087:INFO:_display_container: 2
2023-12-13 14:50:20,087:INFO:GradientBoostingRegressor(random_state=1353)
2023-12-13 14:50:20,087:INFO:create_model() successfully completed......................................
2023-12-13 14:50:20,174:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:20,174:INFO:Creating metrics dataframe
2023-12-13 14:50:20,190:INFO:Initializing Light Gradient Boosting Machine
2023-12-13 14:50:20,190:INFO:Total runtime is 0.057958793640136716 minutes
2023-12-13 14:50:20,190:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:20,190:INFO:Initializing create_model()
2023-12-13 14:50:20,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:20,190:INFO:Checking exceptions
2023-12-13 14:50:20,190:INFO:Importing libraries
2023-12-13 14:50:20,190:INFO:Copying training dataset
2023-12-13 14:50:20,202:INFO:Defining folds
2023-12-13 14:50:20,202:INFO:Declaring metric variables
2023-12-13 14:50:20,204:INFO:Importing untrained model
2023-12-13 14:50:20,207:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-13 14:50:20,210:INFO:Starting cross validation
2023-12-13 14:50:20,210:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:20,723:INFO:Calculating mean and std
2023-12-13 14:50:20,723:INFO:Creating metrics dataframe
2023-12-13 14:50:20,723:INFO:Uploading results into container
2023-12-13 14:50:20,723:INFO:Uploading model into container now
2023-12-13 14:50:20,723:INFO:_master_model_container: 17
2023-12-13 14:50:20,723:INFO:_display_container: 2
2023-12-13 14:50:20,723:INFO:LGBMRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:20,723:INFO:create_model() successfully completed......................................
2023-12-13 14:50:20,848:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:20,848:INFO:Creating metrics dataframe
2023-12-13 14:50:20,848:INFO:Initializing Dummy Regressor
2023-12-13 14:50:20,848:INFO:Total runtime is 0.06893458366394042 minutes
2023-12-13 14:50:20,864:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:20,864:INFO:Initializing create_model()
2023-12-13 14:50:20,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B28FDAA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:20,864:INFO:Checking exceptions
2023-12-13 14:50:20,864:INFO:Importing libraries
2023-12-13 14:50:20,864:INFO:Copying training dataset
2023-12-13 14:50:20,868:INFO:Defining folds
2023-12-13 14:50:20,868:INFO:Declaring metric variables
2023-12-13 14:50:20,868:INFO:Importing untrained model
2023-12-13 14:50:20,868:INFO:Dummy Regressor Imported successfully
2023-12-13 14:50:20,868:INFO:Starting cross validation
2023-12-13 14:50:20,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:20,928:INFO:Calculating mean and std
2023-12-13 14:50:20,928:INFO:Creating metrics dataframe
2023-12-13 14:50:20,928:INFO:Uploading results into container
2023-12-13 14:50:20,928:INFO:Uploading model into container now
2023-12-13 14:50:20,928:INFO:_master_model_container: 18
2023-12-13 14:50:20,928:INFO:_display_container: 2
2023-12-13 14:50:20,928:INFO:DummyRegressor()
2023-12-13 14:50:20,928:INFO:create_model() successfully completed......................................
2023-12-13 14:50:21,039:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:21,039:INFO:Creating metrics dataframe
2023-12-13 14:50:21,048:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2023-12-13 14:50:21,055:INFO:Initializing create_model()
2023-12-13 14:50:21,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:21,055:INFO:Checking exceptions
2023-12-13 14:50:21,057:INFO:Importing libraries
2023-12-13 14:50:21,057:INFO:Copying training dataset
2023-12-13 14:50:21,059:INFO:Defining folds
2023-12-13 14:50:21,059:INFO:Declaring metric variables
2023-12-13 14:50:21,059:INFO:Importing untrained model
2023-12-13 14:50:21,059:INFO:Declaring custom model
2023-12-13 14:50:21,060:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:50:21,060:INFO:Cross validation set to False
2023-12-13 14:50:21,060:INFO:Fitting Model
2023-12-13 14:50:21,162:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:21,162:INFO:create_model() successfully completed......................................
2023-12-13 14:50:21,293:INFO:_master_model_container: 18
2023-12-13 14:50:21,293:INFO:_display_container: 2
2023-12-13 14:50:21,293:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:21,293:INFO:compare_models() successfully completed......................................
2023-12-13 14:50:21,358:INFO:Initializing create_model()
2023-12-13 14:50:21,358:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:21,358:INFO:Checking exceptions
2023-12-13 14:50:21,374:INFO:Importing libraries
2023-12-13 14:50:21,374:INFO:Copying training dataset
2023-12-13 14:50:21,380:INFO:Defining folds
2023-12-13 14:50:21,380:INFO:Declaring metric variables
2023-12-13 14:50:21,384:INFO:Importing untrained model
2023-12-13 14:50:21,391:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:50:21,397:INFO:Starting cross validation
2023-12-13 14:50:21,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:21,808:INFO:Calculating mean and std
2023-12-13 14:50:21,808:INFO:Creating metrics dataframe
2023-12-13 14:50:21,812:INFO:Finalizing model
2023-12-13 14:50:21,940:INFO:Uploading results into container
2023-12-13 14:50:21,940:INFO:Uploading model into container now
2023-12-13 14:50:21,949:INFO:_master_model_container: 19
2023-12-13 14:50:21,949:INFO:_display_container: 3
2023-12-13 14:50:21,949:INFO:RandomForestRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:21,950:INFO:create_model() successfully completed......................................
2023-12-13 14:50:22,097:INFO:Initializing create_model()
2023-12-13 14:50:22,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:22,097:INFO:Checking exceptions
2023-12-13 14:50:22,108:INFO:Importing libraries
2023-12-13 14:50:22,108:INFO:Copying training dataset
2023-12-13 14:50:22,108:INFO:Defining folds
2023-12-13 14:50:22,108:INFO:Declaring metric variables
2023-12-13 14:50:22,115:INFO:Importing untrained model
2023-12-13 14:50:22,118:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:50:22,124:INFO:Starting cross validation
2023-12-13 14:50:22,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:22,444:INFO:Calculating mean and std
2023-12-13 14:50:22,444:INFO:Creating metrics dataframe
2023-12-13 14:50:22,449:INFO:Finalizing model
2023-12-13 14:50:22,555:INFO:Uploading results into container
2023-12-13 14:50:22,555:INFO:Uploading model into container now
2023-12-13 14:50:22,564:INFO:_master_model_container: 20
2023-12-13 14:50:22,564:INFO:_display_container: 4
2023-12-13 14:50:22,564:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:22,564:INFO:create_model() successfully completed......................................
2023-12-13 14:50:22,718:INFO:Initializing tune_model()
2023-12-13 14:50:22,720:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:50:22,720:INFO:Checking exceptions
2023-12-13 14:50:22,732:INFO:Copying training dataset
2023-12-13 14:50:22,735:INFO:Checking base model
2023-12-13 14:50:22,735:INFO:Base model : Random Forest Regressor
2023-12-13 14:50:22,738:INFO:Declaring metric variables
2023-12-13 14:50:22,741:INFO:Defining Hyperparameters
2023-12-13 14:50:22,846:INFO:Tuning with n_jobs=-1
2023-12-13 14:50:22,846:INFO:Initializing RandomizedSearchCV
2023-12-13 14:50:29,794:INFO:best_params: {'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:50:29,794:INFO:Hyperparameter search completed
2023-12-13 14:50:29,794:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:29,794:INFO:Initializing create_model()
2023-12-13 14:50:29,794:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B286D9410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 140, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.002, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-13 14:50:29,794:INFO:Checking exceptions
2023-12-13 14:50:29,794:INFO:Importing libraries
2023-12-13 14:50:29,794:INFO:Copying training dataset
2023-12-13 14:50:29,794:INFO:Defining folds
2023-12-13 14:50:29,794:INFO:Declaring metric variables
2023-12-13 14:50:29,794:INFO:Importing untrained model
2023-12-13 14:50:29,794:INFO:Declaring custom model
2023-12-13 14:50:29,806:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:50:29,806:INFO:Starting cross validation
2023-12-13 14:50:29,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:30,193:INFO:Calculating mean and std
2023-12-13 14:50:30,193:INFO:Creating metrics dataframe
2023-12-13 14:50:30,199:INFO:Finalizing model
2023-12-13 14:50:30,352:INFO:Uploading results into container
2023-12-13 14:50:30,352:INFO:Uploading model into container now
2023-12-13 14:50:30,352:INFO:_master_model_container: 21
2023-12-13 14:50:30,352:INFO:_display_container: 5
2023-12-13 14:50:30,352:INFO:RandomForestRegressor(max_depth=9, max_features='sqrt',
                      min_impurity_decrease=0.002, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=140, n_jobs=-1,
                      random_state=1353)
2023-12-13 14:50:30,352:INFO:create_model() successfully completed......................................
2023-12-13 14:50:30,454:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:30,454:INFO:choose_better activated
2023-12-13 14:50:30,454:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:30,454:INFO:Initializing create_model()
2023-12-13 14:50:30,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:30,454:INFO:Checking exceptions
2023-12-13 14:50:30,454:INFO:Importing libraries
2023-12-13 14:50:30,454:INFO:Copying training dataset
2023-12-13 14:50:30,454:INFO:Defining folds
2023-12-13 14:50:30,454:INFO:Declaring metric variables
2023-12-13 14:50:30,454:INFO:Importing untrained model
2023-12-13 14:50:30,454:INFO:Declaring custom model
2023-12-13 14:50:30,454:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:50:30,454:INFO:Starting cross validation
2023-12-13 14:50:30,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:30,788:INFO:Calculating mean and std
2023-12-13 14:50:30,788:INFO:Creating metrics dataframe
2023-12-13 14:50:30,788:INFO:Finalizing model
2023-12-13 14:50:30,923:INFO:Uploading results into container
2023-12-13 14:50:30,924:INFO:Uploading model into container now
2023-12-13 14:50:30,925:INFO:_master_model_container: 22
2023-12-13 14:50:30,925:INFO:_display_container: 6
2023-12-13 14:50:30,926:INFO:RandomForestRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:30,926:INFO:create_model() successfully completed......................................
2023-12-13 14:50:31,027:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:31,027:INFO:RandomForestRegressor(n_jobs=-1, random_state=1353) result for R2 is 0.7204
2023-12-13 14:50:31,027:INFO:RandomForestRegressor(max_depth=9, max_features='sqrt',
                      min_impurity_decrease=0.002, min_samples_leaf=2,
                      min_samples_split=5, n_estimators=140, n_jobs=-1,
                      random_state=1353) result for R2 is 0.7159
2023-12-13 14:50:31,027:INFO:RandomForestRegressor(n_jobs=-1, random_state=1353) is best model
2023-12-13 14:50:31,027:INFO:choose_better completed
2023-12-13 14:50:31,027:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:50:31,043:INFO:_master_model_container: 22
2023-12-13 14:50:31,043:INFO:_display_container: 5
2023-12-13 14:50:31,043:INFO:RandomForestRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:31,043:INFO:tune_model() successfully completed......................................
2023-12-13 14:50:31,154:INFO:Initializing tune_model()
2023-12-13 14:50:31,154:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-13 14:50:31,155:INFO:Checking exceptions
2023-12-13 14:50:31,168:INFO:Copying training dataset
2023-12-13 14:50:31,168:INFO:Checking base model
2023-12-13 14:50:31,168:INFO:Base model : Extra Trees Regressor
2023-12-13 14:50:31,168:INFO:Declaring metric variables
2023-12-13 14:50:31,175:INFO:Defining Hyperparameters
2023-12-13 14:50:31,275:INFO:Tuning with n_jobs=-1
2023-12-13 14:50:31,275:INFO:Initializing RandomizedSearchCV
2023-12-13 14:50:36,804:INFO:best_params: {'actual_estimator__n_estimators': 220, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-13 14:50:36,805:INFO:Hyperparameter search completed
2023-12-13 14:50:36,805:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:36,806:INFO:Initializing create_model()
2023-12-13 14:50:36,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028B277BA710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 220, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-13 14:50:36,806:INFO:Checking exceptions
2023-12-13 14:50:36,806:INFO:Importing libraries
2023-12-13 14:50:36,806:INFO:Copying training dataset
2023-12-13 14:50:36,807:INFO:Defining folds
2023-12-13 14:50:36,807:INFO:Declaring metric variables
2023-12-13 14:50:36,807:INFO:Importing untrained model
2023-12-13 14:50:36,812:INFO:Declaring custom model
2023-12-13 14:50:36,815:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:50:36,820:INFO:Starting cross validation
2023-12-13 14:50:36,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:37,349:INFO:Calculating mean and std
2023-12-13 14:50:37,349:INFO:Creating metrics dataframe
2023-12-13 14:50:37,354:INFO:Finalizing model
2023-12-13 14:50:37,571:INFO:Uploading results into container
2023-12-13 14:50:37,572:INFO:Uploading model into container now
2023-12-13 14:50:37,572:INFO:_master_model_container: 23
2023-12-13 14:50:37,572:INFO:_display_container: 6
2023-12-13 14:50:37,572:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=6, min_impurity_decrease=0.02,
                    min_samples_leaf=2, min_samples_split=9, n_estimators=220,
                    n_jobs=-1, random_state=1353)
2023-12-13 14:50:37,572:INFO:create_model() successfully completed......................................
2023-12-13 14:50:37,662:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:37,662:INFO:choose_better activated
2023-12-13 14:50:37,662:INFO:SubProcess create_model() called ==================================
2023-12-13 14:50:37,662:INFO:Initializing create_model()
2023-12-13 14:50:37,662:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:37,662:INFO:Checking exceptions
2023-12-13 14:50:37,677:INFO:Importing libraries
2023-12-13 14:50:37,677:INFO:Copying training dataset
2023-12-13 14:50:37,680:INFO:Defining folds
2023-12-13 14:50:37,680:INFO:Declaring metric variables
2023-12-13 14:50:37,680:INFO:Importing untrained model
2023-12-13 14:50:37,680:INFO:Declaring custom model
2023-12-13 14:50:37,681:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:50:37,681:INFO:Starting cross validation
2023-12-13 14:50:37,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-13 14:50:37,974:INFO:Calculating mean and std
2023-12-13 14:50:37,974:INFO:Creating metrics dataframe
2023-12-13 14:50:37,974:INFO:Finalizing model
2023-12-13 14:50:38,067:INFO:Uploading results into container
2023-12-13 14:50:38,067:INFO:Uploading model into container now
2023-12-13 14:50:38,067:INFO:_master_model_container: 24
2023-12-13 14:50:38,067:INFO:_display_container: 7
2023-12-13 14:50:38,067:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:38,067:INFO:create_model() successfully completed......................................
2023-12-13 14:50:38,152:INFO:SubProcess create_model() end ==================================
2023-12-13 14:50:38,152:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353) result for R2 is 0.7226
2023-12-13 14:50:38,152:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=6, min_impurity_decrease=0.02,
                    min_samples_leaf=2, min_samples_split=9, n_estimators=220,
                    n_jobs=-1, random_state=1353) result for R2 is 0.6933
2023-12-13 14:50:38,152:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353) is best model
2023-12-13 14:50:38,152:INFO:choose_better completed
2023-12-13 14:50:38,152:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-13 14:50:38,168:INFO:_master_model_container: 24
2023-12-13 14:50:38,168:INFO:_display_container: 6
2023-12-13 14:50:38,168:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:38,168:INFO:tune_model() successfully completed......................................
2023-12-13 14:50:38,280:INFO:Initializing plot_model()
2023-12-13 14:50:38,280:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:50:38,280:INFO:Checking exceptions
2023-12-13 14:50:38,300:INFO:Preloading libraries
2023-12-13 14:50:38,310:INFO:Copying training dataset
2023-12-13 14:50:38,311:INFO:Plot type: residuals
2023-12-13 14:50:38,378:INFO:Fitting Model
2023-12-13 14:50:38,378:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:50:38,445:INFO:Scoring test/hold-out set
2023-12-13 14:50:38,724:INFO:Visual Rendered Successfully
2023-12-13 14:50:38,838:INFO:plot_model() successfully completed......................................
2023-12-13 14:50:38,841:INFO:Initializing plot_model()
2023-12-13 14:50:38,850:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:50:38,850:INFO:Checking exceptions
2023-12-13 14:50:38,866:INFO:Preloading libraries
2023-12-13 14:50:38,879:INFO:Copying training dataset
2023-12-13 14:50:38,879:INFO:Plot type: residuals
2023-12-13 14:50:38,932:INFO:Fitting Model
2023-12-13 14:50:38,932:WARNING:c:\Users\xoryt\OneDrive\Documents\info\SEO\House pricing prediction\env\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2023-12-13 14:50:39,009:INFO:Scoring test/hold-out set
2023-12-13 14:50:39,293:INFO:Visual Rendered Successfully
2023-12-13 14:50:39,403:INFO:plot_model() successfully completed......................................
2023-12-13 14:50:39,417:INFO:Initializing plot_model()
2023-12-13 14:50:39,417:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:50:39,417:INFO:Checking exceptions
2023-12-13 14:50:39,434:INFO:Preloading libraries
2023-12-13 14:50:39,448:INFO:Copying training dataset
2023-12-13 14:50:39,448:INFO:Plot type: feature
2023-12-13 14:50:39,448:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:50:39,574:INFO:Visual Rendered Successfully
2023-12-13 14:50:39,668:INFO:plot_model() successfully completed......................................
2023-12-13 14:50:39,692:INFO:Initializing plot_model()
2023-12-13 14:50:39,692:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2023-12-13 14:50:39,692:INFO:Checking exceptions
2023-12-13 14:50:39,709:INFO:Preloading libraries
2023-12-13 14:50:39,709:INFO:Copying training dataset
2023-12-13 14:50:39,709:INFO:Plot type: feature
2023-12-13 14:50:39,709:WARNING:No coef_ found. Trying feature_importances_
2023-12-13 14:50:39,830:INFO:Visual Rendered Successfully
2023-12-13 14:50:39,932:INFO:plot_model() successfully completed......................................
2023-12-13 14:50:39,948:INFO:Initializing predict_model()
2023-12-13 14:50:39,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B30BC8C20>)
2023-12-13 14:50:39,948:INFO:Checking exceptions
2023-12-13 14:50:39,948:INFO:Preloading libraries
2023-12-13 14:50:40,137:INFO:Initializing predict_model()
2023-12-13 14:50:40,137:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AC305E0>)
2023-12-13 14:50:40,137:INFO:Checking exceptions
2023-12-13 14:50:40,137:INFO:Preloading libraries
2023-12-13 14:50:40,307:INFO:Initializing finalize_model()
2023-12-13 14:50:40,307:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:50:40,308:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:40,309:INFO:Initializing create_model()
2023-12-13 14:50:40,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1353), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:40,309:INFO:Checking exceptions
2023-12-13 14:50:40,312:INFO:Importing libraries
2023-12-13 14:50:40,312:INFO:Copying training dataset
2023-12-13 14:50:40,312:INFO:Defining folds
2023-12-13 14:50:40,312:INFO:Declaring metric variables
2023-12-13 14:50:40,312:INFO:Importing untrained model
2023-12-13 14:50:40,312:INFO:Declaring custom model
2023-12-13 14:50:40,313:INFO:Random Forest Regressor Imported successfully
2023-12-13 14:50:40,314:INFO:Cross validation set to False
2023-12-13 14:50:40,314:INFO:Fitting Model
2023-12-13 14:50:40,437:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1353))])
2023-12-13 14:50:40,437:INFO:create_model() successfully completed......................................
2023-12-13 14:50:40,536:INFO:_master_model_container: 24
2023-12-13 14:50:40,536:INFO:_display_container: 8
2023-12-13 14:50:40,536:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1353))])
2023-12-13 14:50:40,536:INFO:finalize_model() successfully completed......................................
2023-12-13 14:50:40,651:INFO:Initializing finalize_model()
2023-12-13 14:50:40,651:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-13 14:50:40,655:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=1353)
2023-12-13 14:50:40,658:INFO:Initializing create_model()
2023-12-13 14:50:40,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1353), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-13 14:50:40,658:INFO:Checking exceptions
2023-12-13 14:50:40,660:INFO:Importing libraries
2023-12-13 14:50:40,660:INFO:Copying training dataset
2023-12-13 14:50:40,661:INFO:Defining folds
2023-12-13 14:50:40,661:INFO:Declaring metric variables
2023-12-13 14:50:40,661:INFO:Importing untrained model
2023-12-13 14:50:40,661:INFO:Declaring custom model
2023-12-13 14:50:40,662:INFO:Extra Trees Regressor Imported successfully
2023-12-13 14:50:40,663:INFO:Cross validation set to False
2023-12-13 14:50:40,664:INFO:Fitting Model
2023-12-13 14:50:40,769:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1353))])
2023-12-13 14:50:40,769:INFO:create_model() successfully completed......................................
2023-12-13 14:50:40,863:INFO:_master_model_container: 24
2023-12-13 14:50:40,863:INFO:_display_container: 8
2023-12-13 14:50:40,863:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1353))])
2023-12-13 14:50:40,863:INFO:finalize_model() successfully completed......................................
2023-12-13 14:50:41,032:INFO:Initializing predict_model()
2023-12-13 14:50:41,032:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1353))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AC33060>)
2023-12-13 14:50:41,032:INFO:Checking exceptions
2023-12-13 14:50:41,032:INFO:Preloading libraries
2023-12-13 14:50:41,272:INFO:Initializing predict_model()
2023-12-13 14:50:41,272:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1353))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B2AC32160>)
2023-12-13 14:50:41,272:INFO:Checking exceptions
2023-12-13 14:50:41,272:INFO:Preloading libraries
2023-12-13 14:50:41,458:INFO:Initializing predict_model()
2023-12-13 14:50:41,458:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1353))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B665ABB00>)
2023-12-13 14:50:41,458:INFO:Checking exceptions
2023-12-13 14:50:41,458:INFO:Preloading libraries
2023-12-13 14:50:41,458:INFO:Set up data.
2023-12-13 14:50:41,463:INFO:Set up index.
2023-12-13 14:50:41,611:INFO:Initializing predict_model()
2023-12-13 14:50:41,620:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B2ABCBA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1353))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B665ABB00>)
2023-12-13 14:50:41,620:INFO:Checking exceptions
2023-12-13 14:50:41,621:INFO:Preloading libraries
2023-12-13 14:50:41,621:INFO:Set up data.
2023-12-13 14:50:41,621:INFO:Set up index.
