2023-12-14 14:53:07,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:53:07,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:53:07,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:53:07,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:53:07,492:INFO:PyCaret RegressionExperiment
2023-12-14 14:53:07,493:INFO:Logging name: reg-default-name
2023-12-14 14:53:07,493:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 14:53:07,493:INFO:version 3.2.0
2023-12-14 14:53:07,493:INFO:Initializing setup()
2023-12-14 14:53:07,493:INFO:self.USI: cd7d
2023-12-14 14:53:07,493:INFO:self._variable_keys: {'seed', 'y', '_available_plots', 'gpu_n_jobs_param', '_ml_usecase', 'exp_name_log', 'n_jobs_param', 'log_plots_param', 'exp_id', 'pipeline', 'X_test', 'transform_target_param', 'memory', 'fold_groups_param', 'y_train', 'logging_param', 'idx', 'gpu_param', 'fold_shuffle_param', 'X_train', 'data', 'USI', 'X', 'y_test', 'target_param', 'fold_generator', 'html_param'}
2023-12-14 14:53:07,493:INFO:Checking environment
2023-12-14 14:53:07,493:INFO:python_version: 3.11.0
2023-12-14 14:53:07,493:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 14:53:07,493:INFO:machine: AMD64
2023-12-14 14:53:07,503:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 14:53:07,508:INFO:Memory: svmem(total=14877257728, available=3228778496, percent=78.3, used=11648479232, free=3228778496)
2023-12-14 14:53:07,508:INFO:Physical Core: 8
2023-12-14 14:53:07,508:INFO:Logical Core: 16
2023-12-14 14:53:07,508:INFO:Checking libraries
2023-12-14 14:53:07,508:INFO:System:
2023-12-14 14:53:07,508:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 14:53:07,508:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 14:53:07,508:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 14:53:07,509:INFO:PyCaret required dependencies:
2023-12-14 14:53:07,549:INFO:                 pip: 22.3
2023-12-14 14:53:07,549:INFO:          setuptools: 65.5.0
2023-12-14 14:53:07,549:INFO:             pycaret: 3.2.0
2023-12-14 14:53:07,549:INFO:             IPython: 8.18.1
2023-12-14 14:53:07,549:INFO:          ipywidgets: 8.1.1
2023-12-14 14:53:07,549:INFO:                tqdm: 4.66.1
2023-12-14 14:53:07,549:INFO:               numpy: 1.25.2
2023-12-14 14:53:07,549:INFO:              pandas: 1.5.3
2023-12-14 14:53:07,549:INFO:              jinja2: 3.1.2
2023-12-14 14:53:07,549:INFO:               scipy: 1.10.1
2023-12-14 14:53:07,549:INFO:              joblib: 1.3.2
2023-12-14 14:53:07,550:INFO:             sklearn: 1.2.2
2023-12-14 14:53:07,550:INFO:                pyod: 1.1.2
2023-12-14 14:53:07,550:INFO:            imblearn: 0.11.0
2023-12-14 14:53:07,550:INFO:   category_encoders: 2.6.3
2023-12-14 14:53:07,550:INFO:            lightgbm: 4.1.0
2023-12-14 14:53:07,550:INFO:               numba: 0.58.1
2023-12-14 14:53:07,550:INFO:            requests: 2.31.0
2023-12-14 14:53:07,550:INFO:          matplotlib: 3.6.0
2023-12-14 14:53:07,550:INFO:          scikitplot: 0.3.7
2023-12-14 14:53:07,550:INFO:         yellowbrick: 1.5
2023-12-14 14:53:07,550:INFO:              plotly: 5.18.0
2023-12-14 14:53:07,550:INFO:    plotly-resampler: Not installed
2023-12-14 14:53:07,550:INFO:             kaleido: 0.2.1
2023-12-14 14:53:07,550:INFO:           schemdraw: 0.15
2023-12-14 14:53:07,550:INFO:         statsmodels: 0.14.0
2023-12-14 14:53:07,550:INFO:              sktime: 0.21.1
2023-12-14 14:53:07,550:INFO:               tbats: 1.1.3
2023-12-14 14:53:07,550:INFO:            pmdarima: 2.0.4
2023-12-14 14:53:07,550:INFO:              psutil: 5.9.6
2023-12-14 14:53:07,550:INFO:          markupsafe: 2.1.3
2023-12-14 14:53:07,550:INFO:             pickle5: Not installed
2023-12-14 14:53:07,550:INFO:         cloudpickle: 3.0.0
2023-12-14 14:53:07,550:INFO:         deprecation: 2.1.0
2023-12-14 14:53:07,550:INFO:              xxhash: 3.4.1
2023-12-14 14:53:07,550:INFO:           wurlitzer: Not installed
2023-12-14 14:53:07,550:INFO:PyCaret optional dependencies:
2023-12-14 14:53:07,563:INFO:                shap: Not installed
2023-12-14 14:53:07,563:INFO:           interpret: Not installed
2023-12-14 14:53:07,563:INFO:                umap: Not installed
2023-12-14 14:53:07,563:INFO:     ydata_profiling: Not installed
2023-12-14 14:53:07,563:INFO:  explainerdashboard: Not installed
2023-12-14 14:53:07,563:INFO:             autoviz: Not installed
2023-12-14 14:53:07,563:INFO:           fairlearn: Not installed
2023-12-14 14:53:07,563:INFO:          deepchecks: Not installed
2023-12-14 14:53:07,563:INFO:             xgboost: Not installed
2023-12-14 14:53:07,563:INFO:            catboost: Not installed
2023-12-14 14:53:07,563:INFO:              kmodes: Not installed
2023-12-14 14:53:07,563:INFO:             mlxtend: Not installed
2023-12-14 14:53:07,563:INFO:       statsforecast: Not installed
2023-12-14 14:53:07,563:INFO:        tune_sklearn: Not installed
2023-12-14 14:53:07,563:INFO:                 ray: Not installed
2023-12-14 14:53:07,563:INFO:            hyperopt: Not installed
2023-12-14 14:53:07,563:INFO:              optuna: Not installed
2023-12-14 14:53:07,563:INFO:               skopt: Not installed
2023-12-14 14:53:07,563:INFO:              mlflow: Not installed
2023-12-14 14:53:07,563:INFO:              gradio: Not installed
2023-12-14 14:53:07,563:INFO:             fastapi: Not installed
2023-12-14 14:53:07,563:INFO:             uvicorn: Not installed
2023-12-14 14:53:07,563:INFO:              m2cgen: Not installed
2023-12-14 14:53:07,563:INFO:           evidently: Not installed
2023-12-14 14:53:07,563:INFO:               fugue: Not installed
2023-12-14 14:53:07,563:INFO:           streamlit: Not installed
2023-12-14 14:53:07,563:INFO:             prophet: Not installed
2023-12-14 14:53:07,564:INFO:None
2023-12-14 14:53:07,564:INFO:Set up data.
2023-12-14 14:53:07,568:INFO:Set up folding strategy.
2023-12-14 14:53:07,568:INFO:Set up train/test split.
2023-12-14 14:53:07,570:INFO:Set up index.
2023-12-14 14:53:07,570:INFO:Assigning column types.
2023-12-14 14:53:07,572:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 14:53:07,573:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,576:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,580:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,627:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,675:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,679:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,683:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,764:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 14:53:07,767:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,771:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,815:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,855:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:07,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:07,937:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 14:53:07,943:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,093:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,127:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,128:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 14:53:08,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,230:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,282:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,317:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 14:53:08,378:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,465:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:53:08,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,500:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 14:53:08,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,672:INFO:Preparing preprocessing pipeline...
2023-12-14 14:53:08,672:INFO:Set up simple imputation.
2023-12-14 14:53:08,673:INFO:Set up column name cleaning.
2023-12-14 14:53:08,689:INFO:Finished creating preprocessing pipeline.
2023-12-14 14:53:08,693:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 14:53:08,693:INFO:Creating final display dataframe.
2023-12-14 14:53:08,740:INFO:Setup _display_container:                     Description             Value
0                    Session id              2712
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (609, 7)
4        Transformed data shape          (609, 7)
5   Transformed train set shape          (426, 7)
6    Transformed test set shape          (183, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              cd7d
2023-12-14 14:53:08,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:53:08,938:INFO:setup() successfully completed in 1.45s...............
2023-12-14 14:53:08,938:INFO:Initializing create_model()
2023-12-14 14:53:08,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 14:53:08,938:INFO:Checking exceptions
2023-12-14 14:53:08,940:INFO:Importing libraries
2023-12-14 14:53:08,940:INFO:Copying training dataset
2023-12-14 14:53:08,942:INFO:Defining folds
2023-12-14 14:53:08,942:INFO:Declaring metric variables
2023-12-14 14:53:08,942:INFO:Importing untrained model
2023-12-14 14:53:08,942:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:53:08,942:INFO:Starting cross validation
2023-12-14 14:53:08,947:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 14:53:12,879:INFO:Calculating mean and std
2023-12-14 14:53:12,880:INFO:Creating metrics dataframe
2023-12-14 14:53:12,883:INFO:Finalizing model
2023-12-14 14:53:13,004:INFO:Uploading results into container
2023-12-14 14:53:13,005:INFO:Uploading model into container now
2023-12-14 14:53:13,011:INFO:_master_model_container: 1
2023-12-14 14:53:13,011:INFO:_display_container: 2
2023-12-14 14:53:13,011:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2712)
2023-12-14 14:53:13,012:INFO:create_model() successfully completed......................................
2023-12-14 14:53:13,090:INFO:Initializing tune_model()
2023-12-14 14:53:13,090:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2712), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 14:53:13,090:INFO:Checking exceptions
2023-12-14 14:53:13,092:INFO:Copying training dataset
2023-12-14 14:53:13,094:INFO:Checking base model
2023-12-14 14:53:13,094:INFO:Base model : Extra Trees Regressor
2023-12-14 14:53:13,094:INFO:Declaring metric variables
2023-12-14 14:53:13,094:INFO:Defining Hyperparameters
2023-12-14 14:53:13,171:INFO:Tuning with n_jobs=-1
2023-12-14 14:53:13,171:INFO:Initializing RandomizedSearchCV
2023-12-14 14:53:19,958:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-14 14:53:19,958:INFO:Hyperparameter search completed
2023-12-14 14:53:19,959:INFO:SubProcess create_model() called ==================================
2023-12-14 14:53:19,959:INFO:Initializing create_model()
2023-12-14 14:53:19,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2712), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024101AF5F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-14 14:53:19,959:INFO:Checking exceptions
2023-12-14 14:53:19,959:INFO:Importing libraries
2023-12-14 14:53:19,959:INFO:Copying training dataset
2023-12-14 14:53:19,962:INFO:Defining folds
2023-12-14 14:53:19,962:INFO:Declaring metric variables
2023-12-14 14:53:19,962:INFO:Importing untrained model
2023-12-14 14:53:19,962:INFO:Declaring custom model
2023-12-14 14:53:19,962:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:53:19,963:INFO:Starting cross validation
2023-12-14 14:53:19,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 14:53:20,405:INFO:Calculating mean and std
2023-12-14 14:53:20,405:INFO:Creating metrics dataframe
2023-12-14 14:53:20,407:INFO:Finalizing model
2023-12-14 14:53:20,606:INFO:Uploading results into container
2023-12-14 14:53:20,606:INFO:Uploading model into container now
2023-12-14 14:53:20,607:INFO:_master_model_container: 2
2023-12-14 14:53:20,607:INFO:_display_container: 3
2023-12-14 14:53:20,607:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=8, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=7, n_estimators=200,
                    n_jobs=-1, random_state=2712)
2023-12-14 14:53:20,607:INFO:create_model() successfully completed......................................
2023-12-14 14:53:20,680:INFO:SubProcess create_model() end ==================================
2023-12-14 14:53:20,680:INFO:choose_better activated
2023-12-14 14:53:20,680:INFO:SubProcess create_model() called ==================================
2023-12-14 14:53:20,681:INFO:Initializing create_model()
2023-12-14 14:53:20,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2712), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 14:53:20,681:INFO:Checking exceptions
2023-12-14 14:53:20,681:INFO:Importing libraries
2023-12-14 14:53:20,681:INFO:Copying training dataset
2023-12-14 14:53:20,684:INFO:Defining folds
2023-12-14 14:53:20,684:INFO:Declaring metric variables
2023-12-14 14:53:20,684:INFO:Importing untrained model
2023-12-14 14:53:20,684:INFO:Declaring custom model
2023-12-14 14:53:20,684:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:53:20,684:INFO:Starting cross validation
2023-12-14 14:53:20,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 14:53:20,925:INFO:Calculating mean and std
2023-12-14 14:53:20,925:INFO:Creating metrics dataframe
2023-12-14 14:53:20,927:INFO:Finalizing model
2023-12-14 14:53:21,010:INFO:Uploading results into container
2023-12-14 14:53:21,011:INFO:Uploading model into container now
2023-12-14 14:53:21,011:INFO:_master_model_container: 3
2023-12-14 14:53:21,011:INFO:_display_container: 4
2023-12-14 14:53:21,012:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2712)
2023-12-14 14:53:21,012:INFO:create_model() successfully completed......................................
2023-12-14 14:53:21,083:INFO:SubProcess create_model() end ==================================
2023-12-14 14:53:21,083:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2712) result for R2 is 0.75
2023-12-14 14:53:21,084:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=8, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=7, n_estimators=200,
                    n_jobs=-1, random_state=2712) result for R2 is 0.7275
2023-12-14 14:53:21,084:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2712) is best model
2023-12-14 14:53:21,084:INFO:choose_better completed
2023-12-14 14:53:21,084:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 14:53:21,092:INFO:_master_model_container: 3
2023-12-14 14:53:21,092:INFO:_display_container: 3
2023-12-14 14:53:21,092:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2712)
2023-12-14 14:53:21,092:INFO:tune_model() successfully completed......................................
2023-12-14 14:53:21,172:INFO:Initializing predict_model()
2023-12-14 14:53:21,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2712), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024158E0B740>)
2023-12-14 14:53:21,172:INFO:Checking exceptions
2023-12-14 14:53:21,172:INFO:Preloading libraries
2023-12-14 14:53:21,300:INFO:Initializing finalize_model()
2023-12-14 14:53:21,300:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2712), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 14:53:21,300:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=2712)
2023-12-14 14:53:21,302:INFO:Initializing create_model()
2023-12-14 14:53:21,302:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2712), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 14:53:21,302:INFO:Checking exceptions
2023-12-14 14:53:21,303:INFO:Importing libraries
2023-12-14 14:53:21,303:INFO:Copying training dataset
2023-12-14 14:53:21,303:INFO:Defining folds
2023-12-14 14:53:21,303:INFO:Declaring metric variables
2023-12-14 14:53:21,303:INFO:Importing untrained model
2023-12-14 14:53:21,303:INFO:Declaring custom model
2023-12-14 14:53:21,304:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:53:21,304:INFO:Cross validation set to False
2023-12-14 14:53:21,304:INFO:Fitting Model
2023-12-14 14:53:21,400:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2712))])
2023-12-14 14:53:21,400:INFO:create_model() successfully completed......................................
2023-12-14 14:53:21,469:INFO:_master_model_container: 3
2023-12-14 14:53:21,470:INFO:_display_container: 4
2023-12-14 14:53:21,473:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2712))])
2023-12-14 14:53:21,474:INFO:finalize_model() successfully completed......................................
2023-12-14 14:53:21,547:INFO:Initializing predict_model()
2023-12-14 14:53:21,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2712))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000241591113A0>)
2023-12-14 14:53:21,547:INFO:Checking exceptions
2023-12-14 14:53:21,547:INFO:Preloading libraries
2023-12-14 14:53:21,685:INFO:Initializing predict_model()
2023-12-14 14:53:21,685:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002415BA98250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2712))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002415CA3C180>)
2023-12-14 14:53:21,685:INFO:Checking exceptions
2023-12-14 14:53:21,685:INFO:Preloading libraries
2023-12-14 14:53:21,685:INFO:Set up data.
2023-12-14 14:53:21,688:INFO:Set up index.
2023-12-14 14:55:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:55:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:55:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:55:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 14:55:08,729:INFO:PyCaret RegressionExperiment
2023-12-14 14:55:08,729:INFO:Logging name: reg-default-name
2023-12-14 14:55:08,729:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 14:55:08,729:INFO:version 3.2.0
2023-12-14 14:55:08,729:INFO:Initializing setup()
2023-12-14 14:55:08,729:INFO:self.USI: a894
2023-12-14 14:55:08,729:INFO:self._variable_keys: {'pipeline', 'seed', 'n_jobs_param', 'target_param', '_ml_usecase', 'X_train', 'gpu_n_jobs_param', 'exp_name_log', 'exp_id', 'transform_target_param', 'y', 'log_plots_param', 'data', 'memory', 'y_test', 'fold_generator', 'idx', 'fold_groups_param', 'html_param', 'fold_shuffle_param', 'X_test', 'logging_param', 'X', 'y_train', 'USI', 'gpu_param', '_available_plots'}
2023-12-14 14:55:08,731:INFO:Checking environment
2023-12-14 14:55:08,731:INFO:python_version: 3.11.0
2023-12-14 14:55:08,731:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 14:55:08,731:INFO:machine: AMD64
2023-12-14 14:55:08,742:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 14:55:08,746:INFO:Memory: svmem(total=14877257728, available=3344678912, percent=77.5, used=11532578816, free=3344678912)
2023-12-14 14:55:08,746:INFO:Physical Core: 8
2023-12-14 14:55:08,746:INFO:Logical Core: 16
2023-12-14 14:55:08,746:INFO:Checking libraries
2023-12-14 14:55:08,747:INFO:System:
2023-12-14 14:55:08,747:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 14:55:08,747:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 14:55:08,747:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 14:55:08,747:INFO:PyCaret required dependencies:
2023-12-14 14:55:08,763:INFO:                 pip: 22.3
2023-12-14 14:55:08,763:INFO:          setuptools: 65.5.0
2023-12-14 14:55:08,763:INFO:             pycaret: 3.2.0
2023-12-14 14:55:08,763:INFO:             IPython: 8.18.1
2023-12-14 14:55:08,763:INFO:          ipywidgets: 8.1.1
2023-12-14 14:55:08,763:INFO:                tqdm: 4.66.1
2023-12-14 14:55:08,763:INFO:               numpy: 1.25.2
2023-12-14 14:55:08,763:INFO:              pandas: 1.5.3
2023-12-14 14:55:08,763:INFO:              jinja2: 3.1.2
2023-12-14 14:55:08,763:INFO:               scipy: 1.10.1
2023-12-14 14:55:08,763:INFO:              joblib: 1.3.2
2023-12-14 14:55:08,763:INFO:             sklearn: 1.2.2
2023-12-14 14:55:08,763:INFO:                pyod: 1.1.2
2023-12-14 14:55:08,763:INFO:            imblearn: 0.11.0
2023-12-14 14:55:08,763:INFO:   category_encoders: 2.6.3
2023-12-14 14:55:08,763:INFO:            lightgbm: 4.1.0
2023-12-14 14:55:08,763:INFO:               numba: 0.58.1
2023-12-14 14:55:08,763:INFO:            requests: 2.31.0
2023-12-14 14:55:08,763:INFO:          matplotlib: 3.6.0
2023-12-14 14:55:08,763:INFO:          scikitplot: 0.3.7
2023-12-14 14:55:08,763:INFO:         yellowbrick: 1.5
2023-12-14 14:55:08,763:INFO:              plotly: 5.18.0
2023-12-14 14:55:08,763:INFO:    plotly-resampler: Not installed
2023-12-14 14:55:08,763:INFO:             kaleido: 0.2.1
2023-12-14 14:55:08,763:INFO:           schemdraw: 0.15
2023-12-14 14:55:08,764:INFO:         statsmodels: 0.14.0
2023-12-14 14:55:08,764:INFO:              sktime: 0.21.1
2023-12-14 14:55:08,764:INFO:               tbats: 1.1.3
2023-12-14 14:55:08,764:INFO:            pmdarima: 2.0.4
2023-12-14 14:55:08,764:INFO:              psutil: 5.9.6
2023-12-14 14:55:08,764:INFO:          markupsafe: 2.1.3
2023-12-14 14:55:08,764:INFO:             pickle5: Not installed
2023-12-14 14:55:08,764:INFO:         cloudpickle: 3.0.0
2023-12-14 14:55:08,764:INFO:         deprecation: 2.1.0
2023-12-14 14:55:08,764:INFO:              xxhash: 3.4.1
2023-12-14 14:55:08,764:INFO:           wurlitzer: Not installed
2023-12-14 14:55:08,764:INFO:PyCaret optional dependencies:
2023-12-14 14:55:08,776:INFO:                shap: Not installed
2023-12-14 14:55:08,776:INFO:           interpret: Not installed
2023-12-14 14:55:08,776:INFO:                umap: Not installed
2023-12-14 14:55:08,776:INFO:     ydata_profiling: Not installed
2023-12-14 14:55:08,776:INFO:  explainerdashboard: Not installed
2023-12-14 14:55:08,776:INFO:             autoviz: Not installed
2023-12-14 14:55:08,776:INFO:           fairlearn: Not installed
2023-12-14 14:55:08,776:INFO:          deepchecks: Not installed
2023-12-14 14:55:08,776:INFO:             xgboost: Not installed
2023-12-14 14:55:08,776:INFO:            catboost: Not installed
2023-12-14 14:55:08,776:INFO:              kmodes: Not installed
2023-12-14 14:55:08,777:INFO:             mlxtend: Not installed
2023-12-14 14:55:08,777:INFO:       statsforecast: Not installed
2023-12-14 14:55:08,777:INFO:        tune_sklearn: Not installed
2023-12-14 14:55:08,777:INFO:                 ray: Not installed
2023-12-14 14:55:08,777:INFO:            hyperopt: Not installed
2023-12-14 14:55:08,777:INFO:              optuna: Not installed
2023-12-14 14:55:08,777:INFO:               skopt: Not installed
2023-12-14 14:55:08,777:INFO:              mlflow: Not installed
2023-12-14 14:55:08,777:INFO:              gradio: Not installed
2023-12-14 14:55:08,777:INFO:             fastapi: Not installed
2023-12-14 14:55:08,777:INFO:             uvicorn: Not installed
2023-12-14 14:55:08,777:INFO:              m2cgen: Not installed
2023-12-14 14:55:08,777:INFO:           evidently: Not installed
2023-12-14 14:55:08,777:INFO:               fugue: Not installed
2023-12-14 14:55:08,777:INFO:           streamlit: Not installed
2023-12-14 14:55:08,777:INFO:             prophet: Not installed
2023-12-14 14:55:08,777:INFO:None
2023-12-14 14:55:08,777:INFO:Set up data.
2023-12-14 14:55:08,781:INFO:Set up folding strategy.
2023-12-14 14:55:08,781:INFO:Set up train/test split.
2023-12-14 14:55:08,784:INFO:Set up index.
2023-12-14 14:55:08,784:INFO:Assigning column types.
2023-12-14 14:55:08,786:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 14:55:08,786:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,789:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,793:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,875:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:08,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:08,876:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,880:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,884:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,930:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:08,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:08,966:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 14:55:08,970:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:55:08,973:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,017:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,064:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,068:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,111:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,147:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 14:55:09,154:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,208:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,267:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,313:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,354:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 14:55:09,404:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,523:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 14:55:09,574:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 14:55:09,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,705:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 14:55:09,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:09,892:INFO:Preparing preprocessing pipeline...
2023-12-14 14:55:09,892:INFO:Set up simple imputation.
2023-12-14 14:55:09,893:INFO:Set up column name cleaning.
2023-12-14 14:55:09,910:INFO:Finished creating preprocessing pipeline.
2023-12-14 14:55:09,914:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 14:55:09,914:INFO:Creating final display dataframe.
2023-12-14 14:55:09,961:INFO:Setup _display_container:                     Description             Value
0                    Session id              6113
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (609, 7)
4        Transformed data shape          (609, 7)
5   Transformed train set shape          (426, 7)
6    Transformed test set shape          (183, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              a894
2023-12-14 14:55:10,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:10,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:10,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:10,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 14:55:10,158:INFO:setup() successfully completed in 1.43s...............
2023-12-14 14:55:10,158:INFO:Initializing create_model()
2023-12-14 14:55:10,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 14:55:10,158:INFO:Checking exceptions
2023-12-14 14:55:10,160:INFO:Importing libraries
2023-12-14 14:55:10,160:INFO:Copying training dataset
2023-12-14 14:55:10,162:INFO:Defining folds
2023-12-14 14:55:10,163:INFO:Declaring metric variables
2023-12-14 14:55:10,163:INFO:Importing untrained model
2023-12-14 14:55:10,163:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:55:10,163:INFO:Starting cross validation
2023-12-14 14:55:10,167:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 14:55:14,079:INFO:Calculating mean and std
2023-12-14 14:55:14,080:INFO:Creating metrics dataframe
2023-12-14 14:55:14,083:INFO:Finalizing model
2023-12-14 14:55:14,191:INFO:Uploading results into container
2023-12-14 14:55:14,192:INFO:Uploading model into container now
2023-12-14 14:55:14,198:INFO:_master_model_container: 1
2023-12-14 14:55:14,198:INFO:_display_container: 2
2023-12-14 14:55:14,198:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6113)
2023-12-14 14:55:14,198:INFO:create_model() successfully completed......................................
2023-12-14 14:55:14,277:INFO:Initializing tune_model()
2023-12-14 14:55:14,277:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6113), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 14:55:14,277:INFO:Checking exceptions
2023-12-14 14:55:14,280:INFO:Copying training dataset
2023-12-14 14:55:14,281:INFO:Checking base model
2023-12-14 14:55:14,281:INFO:Base model : Extra Trees Regressor
2023-12-14 14:55:14,281:INFO:Declaring metric variables
2023-12-14 14:55:14,281:INFO:Defining Hyperparameters
2023-12-14 14:55:14,355:INFO:Tuning with n_jobs=-1
2023-12-14 14:55:14,355:INFO:Initializing RandomizedSearchCV
2023-12-14 14:55:18,933:INFO:best_params: {'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 14:55:18,933:INFO:Hyperparameter search completed
2023-12-14 14:55:18,933:INFO:SubProcess create_model() called ==================================
2023-12-14 14:55:18,934:INFO:Initializing create_model()
2023-12-14 14:55:18,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6113), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A97881E650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 50, 'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.1, 'max_features': 'log2', 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 14:55:18,934:INFO:Checking exceptions
2023-12-14 14:55:18,934:INFO:Importing libraries
2023-12-14 14:55:18,934:INFO:Copying training dataset
2023-12-14 14:55:18,936:INFO:Defining folds
2023-12-14 14:55:18,936:INFO:Declaring metric variables
2023-12-14 14:55:18,937:INFO:Importing untrained model
2023-12-14 14:55:18,937:INFO:Declaring custom model
2023-12-14 14:55:18,937:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:55:18,937:INFO:Starting cross validation
2023-12-14 14:55:18,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 14:55:19,094:INFO:Calculating mean and std
2023-12-14 14:55:19,094:INFO:Creating metrics dataframe
2023-12-14 14:55:19,096:INFO:Finalizing model
2023-12-14 14:55:19,149:INFO:Uploading results into container
2023-12-14 14:55:19,150:INFO:Uploading model into container now
2023-12-14 14:55:19,150:INFO:_master_model_container: 2
2023-12-14 14:55:19,150:INFO:_display_container: 3
2023-12-14 14:55:19,150:INFO:ExtraTreesRegressor(max_depth=11, max_features='log2',
                    min_impurity_decrease=0.1, min_samples_leaf=2,
                    min_samples_split=7, n_estimators=50, n_jobs=-1,
                    random_state=6113)
2023-12-14 14:55:19,150:INFO:create_model() successfully completed......................................
2023-12-14 14:55:19,225:INFO:SubProcess create_model() end ==================================
2023-12-14 14:55:19,226:INFO:choose_better activated
2023-12-14 14:55:19,226:INFO:SubProcess create_model() called ==================================
2023-12-14 14:55:19,226:INFO:Initializing create_model()
2023-12-14 14:55:19,226:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6113), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 14:55:19,226:INFO:Checking exceptions
2023-12-14 14:55:19,227:INFO:Importing libraries
2023-12-14 14:55:19,227:INFO:Copying training dataset
2023-12-14 14:55:19,229:INFO:Defining folds
2023-12-14 14:55:19,229:INFO:Declaring metric variables
2023-12-14 14:55:19,229:INFO:Importing untrained model
2023-12-14 14:55:19,229:INFO:Declaring custom model
2023-12-14 14:55:19,230:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:55:19,230:INFO:Starting cross validation
2023-12-14 14:55:19,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 14:55:19,475:INFO:Calculating mean and std
2023-12-14 14:55:19,475:INFO:Creating metrics dataframe
2023-12-14 14:55:19,477:INFO:Finalizing model
2023-12-14 14:55:19,569:INFO:Uploading results into container
2023-12-14 14:55:19,570:INFO:Uploading model into container now
2023-12-14 14:55:19,570:INFO:_master_model_container: 3
2023-12-14 14:55:19,570:INFO:_display_container: 4
2023-12-14 14:55:19,570:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6113)
2023-12-14 14:55:19,570:INFO:create_model() successfully completed......................................
2023-12-14 14:55:19,642:INFO:SubProcess create_model() end ==================================
2023-12-14 14:55:19,642:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6113) result for R2 is 0.7568
2023-12-14 14:55:19,642:INFO:ExtraTreesRegressor(max_depth=11, max_features='log2',
                    min_impurity_decrease=0.1, min_samples_leaf=2,
                    min_samples_split=7, n_estimators=50, n_jobs=-1,
                    random_state=6113) result for R2 is 0.7318
2023-12-14 14:55:19,643:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6113) is best model
2023-12-14 14:55:19,643:INFO:choose_better completed
2023-12-14 14:55:19,643:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 14:55:19,650:INFO:_master_model_container: 3
2023-12-14 14:55:19,650:INFO:_display_container: 3
2023-12-14 14:55:19,651:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6113)
2023-12-14 14:55:19,651:INFO:tune_model() successfully completed......................................
2023-12-14 14:55:19,733:INFO:Initializing finalize_model()
2023-12-14 14:55:19,733:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6113), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 14:55:19,733:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6113)
2023-12-14 14:55:19,735:INFO:Initializing create_model()
2023-12-14 14:55:19,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6113), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 14:55:19,735:INFO:Checking exceptions
2023-12-14 14:55:19,736:INFO:Importing libraries
2023-12-14 14:55:19,736:INFO:Copying training dataset
2023-12-14 14:55:19,736:INFO:Defining folds
2023-12-14 14:55:19,736:INFO:Declaring metric variables
2023-12-14 14:55:19,736:INFO:Importing untrained model
2023-12-14 14:55:19,736:INFO:Declaring custom model
2023-12-14 14:55:19,737:INFO:Extra Trees Regressor Imported successfully
2023-12-14 14:55:19,737:INFO:Cross validation set to False
2023-12-14 14:55:19,737:INFO:Fitting Model
2023-12-14 14:55:19,827:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6113))])
2023-12-14 14:55:19,827:INFO:create_model() successfully completed......................................
2023-12-14 14:55:19,897:INFO:_master_model_container: 3
2023-12-14 14:55:19,898:INFO:_display_container: 3
2023-12-14 14:55:19,901:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6113))])
2023-12-14 14:55:19,902:INFO:finalize_model() successfully completed......................................
2023-12-14 14:55:19,976:INFO:Initializing predict_model()
2023-12-14 14:55:19,977:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A9528BAB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6113))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A94F87B740>)
2023-12-14 14:55:19,977:INFO:Checking exceptions
2023-12-14 14:55:19,977:INFO:Preloading libraries
2023-12-14 14:55:19,977:INFO:Set up data.
2023-12-14 14:55:19,980:INFO:Set up index.
2023-12-14 15:00:41,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:00:41,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:00:41,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:00:41,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:00:41,518:INFO:PyCaret RegressionExperiment
2023-12-14 15:00:41,519:INFO:Logging name: reg-default-name
2023-12-14 15:00:41,519:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:00:41,519:INFO:version 3.2.0
2023-12-14 15:00:41,519:INFO:Initializing setup()
2023-12-14 15:00:41,519:INFO:self.USI: 55c7
2023-12-14 15:00:41,519:INFO:self._variable_keys: {'target_param', 'exp_id', '_ml_usecase', 'gpu_n_jobs_param', 'idx', 'html_param', 'memory', 'exp_name_log', 'logging_param', 'fold_groups_param', 'pipeline', 'seed', 'y', 'y_test', 'log_plots_param', 'X', 'X_test', 'y_train', 'X_train', 'n_jobs_param', 'gpu_param', 'USI', 'transform_target_param', 'fold_shuffle_param', '_available_plots', 'data', 'fold_generator'}
2023-12-14 15:00:41,519:INFO:Checking environment
2023-12-14 15:00:41,519:INFO:python_version: 3.11.0
2023-12-14 15:00:41,519:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:00:41,519:INFO:machine: AMD64
2023-12-14 15:00:41,529:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:00:41,534:INFO:Memory: svmem(total=14877257728, available=3434819584, percent=76.9, used=11442438144, free=3434819584)
2023-12-14 15:00:41,534:INFO:Physical Core: 8
2023-12-14 15:00:41,534:INFO:Logical Core: 16
2023-12-14 15:00:41,534:INFO:Checking libraries
2023-12-14 15:00:41,534:INFO:System:
2023-12-14 15:00:41,535:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:00:41,535:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:00:41,535:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:00:41,535:INFO:PyCaret required dependencies:
2023-12-14 15:00:41,552:INFO:                 pip: 22.3
2023-12-14 15:00:41,552:INFO:          setuptools: 65.5.0
2023-12-14 15:00:41,552:INFO:             pycaret: 3.2.0
2023-12-14 15:00:41,553:INFO:             IPython: 8.18.1
2023-12-14 15:00:41,553:INFO:          ipywidgets: 8.1.1
2023-12-14 15:00:41,553:INFO:                tqdm: 4.66.1
2023-12-14 15:00:41,553:INFO:               numpy: 1.25.2
2023-12-14 15:00:41,553:INFO:              pandas: 1.5.3
2023-12-14 15:00:41,553:INFO:              jinja2: 3.1.2
2023-12-14 15:00:41,553:INFO:               scipy: 1.10.1
2023-12-14 15:00:41,553:INFO:              joblib: 1.3.2
2023-12-14 15:00:41,553:INFO:             sklearn: 1.2.2
2023-12-14 15:00:41,553:INFO:                pyod: 1.1.2
2023-12-14 15:00:41,553:INFO:            imblearn: 0.11.0
2023-12-14 15:00:41,553:INFO:   category_encoders: 2.6.3
2023-12-14 15:00:41,553:INFO:            lightgbm: 4.1.0
2023-12-14 15:00:41,553:INFO:               numba: 0.58.1
2023-12-14 15:00:41,553:INFO:            requests: 2.31.0
2023-12-14 15:00:41,553:INFO:          matplotlib: 3.6.0
2023-12-14 15:00:41,553:INFO:          scikitplot: 0.3.7
2023-12-14 15:00:41,553:INFO:         yellowbrick: 1.5
2023-12-14 15:00:41,553:INFO:              plotly: 5.18.0
2023-12-14 15:00:41,553:INFO:    plotly-resampler: Not installed
2023-12-14 15:00:41,553:INFO:             kaleido: 0.2.1
2023-12-14 15:00:41,553:INFO:           schemdraw: 0.15
2023-12-14 15:00:41,553:INFO:         statsmodels: 0.14.0
2023-12-14 15:00:41,553:INFO:              sktime: 0.21.1
2023-12-14 15:00:41,553:INFO:               tbats: 1.1.3
2023-12-14 15:00:41,553:INFO:            pmdarima: 2.0.4
2023-12-14 15:00:41,553:INFO:              psutil: 5.9.6
2023-12-14 15:00:41,553:INFO:          markupsafe: 2.1.3
2023-12-14 15:00:41,553:INFO:             pickle5: Not installed
2023-12-14 15:00:41,553:INFO:         cloudpickle: 3.0.0
2023-12-14 15:00:41,553:INFO:         deprecation: 2.1.0
2023-12-14 15:00:41,553:INFO:              xxhash: 3.4.1
2023-12-14 15:00:41,553:INFO:           wurlitzer: Not installed
2023-12-14 15:00:41,553:INFO:PyCaret optional dependencies:
2023-12-14 15:00:41,566:INFO:                shap: Not installed
2023-12-14 15:00:41,566:INFO:           interpret: Not installed
2023-12-14 15:00:41,566:INFO:                umap: Not installed
2023-12-14 15:00:41,566:INFO:     ydata_profiling: Not installed
2023-12-14 15:00:41,566:INFO:  explainerdashboard: Not installed
2023-12-14 15:00:41,566:INFO:             autoviz: Not installed
2023-12-14 15:00:41,566:INFO:           fairlearn: Not installed
2023-12-14 15:00:41,566:INFO:          deepchecks: Not installed
2023-12-14 15:00:41,566:INFO:             xgboost: Not installed
2023-12-14 15:00:41,566:INFO:            catboost: Not installed
2023-12-14 15:00:41,566:INFO:              kmodes: Not installed
2023-12-14 15:00:41,566:INFO:             mlxtend: Not installed
2023-12-14 15:00:41,566:INFO:       statsforecast: Not installed
2023-12-14 15:00:41,567:INFO:        tune_sklearn: Not installed
2023-12-14 15:00:41,567:INFO:                 ray: Not installed
2023-12-14 15:00:41,567:INFO:            hyperopt: Not installed
2023-12-14 15:00:41,567:INFO:              optuna: Not installed
2023-12-14 15:00:41,567:INFO:               skopt: Not installed
2023-12-14 15:00:41,567:INFO:              mlflow: Not installed
2023-12-14 15:00:41,567:INFO:              gradio: Not installed
2023-12-14 15:00:41,567:INFO:             fastapi: Not installed
2023-12-14 15:00:41,567:INFO:             uvicorn: Not installed
2023-12-14 15:00:41,567:INFO:              m2cgen: Not installed
2023-12-14 15:00:41,567:INFO:           evidently: Not installed
2023-12-14 15:00:41,567:INFO:               fugue: Not installed
2023-12-14 15:00:41,567:INFO:           streamlit: Not installed
2023-12-14 15:00:41,567:INFO:             prophet: Not installed
2023-12-14 15:00:41,567:INFO:None
2023-12-14 15:00:41,567:INFO:Set up data.
2023-12-14 15:00:41,571:INFO:Set up folding strategy.
2023-12-14 15:00:41,571:INFO:Set up train/test split.
2023-12-14 15:00:41,574:INFO:Set up index.
2023-12-14 15:00:41,574:INFO:Assigning column types.
2023-12-14 15:00:41,576:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:00:41,576:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,641:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,680:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,683:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,689:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,742:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,777:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:00:41,781:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,785:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,879:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,883:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,962:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:41,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:41,963:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:00:41,970:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,017:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,056:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,064:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,114:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,150:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:00:42,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,294:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,329:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:00:42,381:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,479:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:00:42,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,516:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:00:42,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,698:INFO:Preparing preprocessing pipeline...
2023-12-14 15:00:42,698:INFO:Set up simple imputation.
2023-12-14 15:00:42,698:INFO:Set up column name cleaning.
2023-12-14 15:00:42,714:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:00:42,720:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:00:42,720:INFO:Creating final display dataframe.
2023-12-14 15:00:42,772:INFO:Setup _display_container:                     Description             Value
0                    Session id              1819
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (609, 7)
4        Transformed data shape          (609, 7)
5   Transformed train set shape          (426, 7)
6    Transformed test set shape          (183, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              55c7
2023-12-14 15:00:42,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:00:42,980:INFO:setup() successfully completed in 1.46s...............
2023-12-14 15:00:42,980:INFO:Initializing create_model()
2023-12-14 15:00:42,980:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:00:42,980:INFO:Checking exceptions
2023-12-14 15:00:42,983:INFO:Importing libraries
2023-12-14 15:00:42,983:INFO:Copying training dataset
2023-12-14 15:00:42,985:INFO:Defining folds
2023-12-14 15:00:42,986:INFO:Declaring metric variables
2023-12-14 15:00:42,986:INFO:Importing untrained model
2023-12-14 15:00:42,986:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:00:42,986:INFO:Starting cross validation
2023-12-14 15:00:42,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:00:47,104:INFO:Calculating mean and std
2023-12-14 15:00:47,105:INFO:Creating metrics dataframe
2023-12-14 15:00:47,107:INFO:Finalizing model
2023-12-14 15:00:47,220:INFO:Uploading results into container
2023-12-14 15:00:47,220:INFO:Uploading model into container now
2023-12-14 15:00:47,227:INFO:_master_model_container: 1
2023-12-14 15:00:47,227:INFO:_display_container: 2
2023-12-14 15:00:47,227:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1819)
2023-12-14 15:00:47,227:INFO:create_model() successfully completed......................................
2023-12-14 15:00:47,309:INFO:Initializing tune_model()
2023-12-14 15:00:47,309:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1819), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:00:47,309:INFO:Checking exceptions
2023-12-14 15:00:47,311:INFO:Copying training dataset
2023-12-14 15:00:47,312:INFO:Checking base model
2023-12-14 15:00:47,312:INFO:Base model : Extra Trees Regressor
2023-12-14 15:00:47,313:INFO:Declaring metric variables
2023-12-14 15:00:47,313:INFO:Defining Hyperparameters
2023-12-14 15:00:47,386:INFO:Tuning with n_jobs=-1
2023-12-14 15:00:47,386:INFO:Initializing RandomizedSearchCV
2023-12-14 15:00:52,774:INFO:best_params: {'actual_estimator__n_estimators': 130, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:00:52,774:INFO:Hyperparameter search completed
2023-12-14 15:00:52,774:INFO:SubProcess create_model() called ==================================
2023-12-14 15:00:52,775:INFO:Initializing create_model()
2023-12-14 15:00:52,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1819), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029438DB8250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 130, 'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.05, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:00:52,775:INFO:Checking exceptions
2023-12-14 15:00:52,775:INFO:Importing libraries
2023-12-14 15:00:52,775:INFO:Copying training dataset
2023-12-14 15:00:52,777:INFO:Defining folds
2023-12-14 15:00:52,777:INFO:Declaring metric variables
2023-12-14 15:00:52,777:INFO:Importing untrained model
2023-12-14 15:00:52,778:INFO:Declaring custom model
2023-12-14 15:00:52,778:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:00:52,778:INFO:Starting cross validation
2023-12-14 15:00:52,779:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:00:53,036:INFO:Calculating mean and std
2023-12-14 15:00:53,038:INFO:Creating metrics dataframe
2023-12-14 15:00:53,039:INFO:Finalizing model
2023-12-14 15:00:53,139:INFO:Uploading results into container
2023-12-14 15:00:53,140:INFO:Uploading model into container now
2023-12-14 15:00:53,140:INFO:_master_model_container: 2
2023-12-14 15:00:53,140:INFO:_display_container: 3
2023-12-14 15:00:53,140:INFO:ExtraTreesRegressor(max_depth=10, min_impurity_decrease=0.05,
                    min_samples_leaf=4, min_samples_split=9, n_estimators=130,
                    n_jobs=-1, random_state=1819)
2023-12-14 15:00:53,140:INFO:create_model() successfully completed......................................
2023-12-14 15:00:53,214:INFO:SubProcess create_model() end ==================================
2023-12-14 15:00:53,214:INFO:choose_better activated
2023-12-14 15:00:53,214:INFO:SubProcess create_model() called ==================================
2023-12-14 15:00:53,214:INFO:Initializing create_model()
2023-12-14 15:00:53,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1819), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:00:53,214:INFO:Checking exceptions
2023-12-14 15:00:53,215:INFO:Importing libraries
2023-12-14 15:00:53,215:INFO:Copying training dataset
2023-12-14 15:00:53,217:INFO:Defining folds
2023-12-14 15:00:53,217:INFO:Declaring metric variables
2023-12-14 15:00:53,217:INFO:Importing untrained model
2023-12-14 15:00:53,217:INFO:Declaring custom model
2023-12-14 15:00:53,218:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:00:53,218:INFO:Starting cross validation
2023-12-14 15:00:53,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:00:53,467:INFO:Calculating mean and std
2023-12-14 15:00:53,468:INFO:Creating metrics dataframe
2023-12-14 15:00:53,469:INFO:Finalizing model
2023-12-14 15:00:53,561:INFO:Uploading results into container
2023-12-14 15:00:53,561:INFO:Uploading model into container now
2023-12-14 15:00:53,561:INFO:_master_model_container: 3
2023-12-14 15:00:53,561:INFO:_display_container: 4
2023-12-14 15:00:53,562:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1819)
2023-12-14 15:00:53,562:INFO:create_model() successfully completed......................................
2023-12-14 15:00:53,628:INFO:SubProcess create_model() end ==================================
2023-12-14 15:00:53,629:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1819) result for R2 is 0.7879
2023-12-14 15:00:53,629:INFO:ExtraTreesRegressor(max_depth=10, min_impurity_decrease=0.05,
                    min_samples_leaf=4, min_samples_split=9, n_estimators=130,
                    n_jobs=-1, random_state=1819) result for R2 is 0.7485
2023-12-14 15:00:53,630:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1819) is best model
2023-12-14 15:00:53,630:INFO:choose_better completed
2023-12-14 15:00:53,630:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:00:53,637:INFO:_master_model_container: 3
2023-12-14 15:00:53,637:INFO:_display_container: 3
2023-12-14 15:00:53,638:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1819)
2023-12-14 15:00:53,638:INFO:tune_model() successfully completed......................................
2023-12-14 15:00:53,718:INFO:Initializing finalize_model()
2023-12-14 15:00:53,718:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1819), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:00:53,718:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=1819)
2023-12-14 15:00:53,720:INFO:Initializing create_model()
2023-12-14 15:00:53,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1819), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:00:53,720:INFO:Checking exceptions
2023-12-14 15:00:53,721:INFO:Importing libraries
2023-12-14 15:00:53,721:INFO:Copying training dataset
2023-12-14 15:00:53,721:INFO:Defining folds
2023-12-14 15:00:53,721:INFO:Declaring metric variables
2023-12-14 15:00:53,721:INFO:Importing untrained model
2023-12-14 15:00:53,721:INFO:Declaring custom model
2023-12-14 15:00:53,722:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:00:53,722:INFO:Cross validation set to False
2023-12-14 15:00:53,722:INFO:Fitting Model
2023-12-14 15:00:53,806:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1819))])
2023-12-14 15:00:53,806:INFO:create_model() successfully completed......................................
2023-12-14 15:00:53,875:INFO:_master_model_container: 3
2023-12-14 15:00:53,876:INFO:_display_container: 3
2023-12-14 15:00:53,880:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1819))])
2023-12-14 15:00:53,880:INFO:finalize_model() successfully completed......................................
2023-12-14 15:00:53,952:INFO:Initializing predict_model()
2023-12-14 15:00:53,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002947FA4F0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1819))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002941022B740>)
2023-12-14 15:00:53,952:INFO:Checking exceptions
2023-12-14 15:00:53,952:INFO:Preloading libraries
2023-12-14 15:00:53,952:INFO:Set up data.
2023-12-14 15:00:53,955:INFO:Set up index.
2023-12-14 15:02:31,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:02:31,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:02:31,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:02:31,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:02:31,552:INFO:PyCaret RegressionExperiment
2023-12-14 15:02:31,552:INFO:Logging name: reg-default-name
2023-12-14 15:02:31,552:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:02:31,553:INFO:version 3.2.0
2023-12-14 15:02:31,553:INFO:Initializing setup()
2023-12-14 15:02:31,553:INFO:self.USI: 3989
2023-12-14 15:02:31,553:INFO:self._variable_keys: {'idx', 'pipeline', 'logging_param', 'exp_name_log', 'gpu_n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'fold_generator', '_ml_usecase', 'fold_groups_param', 'target_param', '_available_plots', 'X_train', 'memory', 'y_test', 'data', 'seed', 'y_train', 'y', 'USI', 'html_param', 'X_test', 'n_jobs_param', 'X', 'log_plots_param', 'transform_target_param', 'exp_id'}
2023-12-14 15:02:31,553:INFO:Checking environment
2023-12-14 15:02:31,553:INFO:python_version: 3.11.0
2023-12-14 15:02:31,553:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:02:31,553:INFO:machine: AMD64
2023-12-14 15:02:31,564:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:02:31,569:INFO:Memory: svmem(total=14877257728, available=3335802880, percent=77.6, used=11541454848, free=3335802880)
2023-12-14 15:02:31,569:INFO:Physical Core: 8
2023-12-14 15:02:31,569:INFO:Logical Core: 16
2023-12-14 15:02:31,569:INFO:Checking libraries
2023-12-14 15:02:31,569:INFO:System:
2023-12-14 15:02:31,570:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:02:31,570:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:02:31,570:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:02:31,570:INFO:PyCaret required dependencies:
2023-12-14 15:02:31,586:INFO:                 pip: 22.3
2023-12-14 15:02:31,586:INFO:          setuptools: 65.5.0
2023-12-14 15:02:31,586:INFO:             pycaret: 3.2.0
2023-12-14 15:02:31,586:INFO:             IPython: 8.18.1
2023-12-14 15:02:31,586:INFO:          ipywidgets: 8.1.1
2023-12-14 15:02:31,586:INFO:                tqdm: 4.66.1
2023-12-14 15:02:31,586:INFO:               numpy: 1.25.2
2023-12-14 15:02:31,586:INFO:              pandas: 1.5.3
2023-12-14 15:02:31,586:INFO:              jinja2: 3.1.2
2023-12-14 15:02:31,587:INFO:               scipy: 1.10.1
2023-12-14 15:02:31,587:INFO:              joblib: 1.3.2
2023-12-14 15:02:31,587:INFO:             sklearn: 1.2.2
2023-12-14 15:02:31,587:INFO:                pyod: 1.1.2
2023-12-14 15:02:31,587:INFO:            imblearn: 0.11.0
2023-12-14 15:02:31,587:INFO:   category_encoders: 2.6.3
2023-12-14 15:02:31,587:INFO:            lightgbm: 4.1.0
2023-12-14 15:02:31,587:INFO:               numba: 0.58.1
2023-12-14 15:02:31,587:INFO:            requests: 2.31.0
2023-12-14 15:02:31,587:INFO:          matplotlib: 3.6.0
2023-12-14 15:02:31,587:INFO:          scikitplot: 0.3.7
2023-12-14 15:02:31,587:INFO:         yellowbrick: 1.5
2023-12-14 15:02:31,587:INFO:              plotly: 5.18.0
2023-12-14 15:02:31,587:INFO:    plotly-resampler: Not installed
2023-12-14 15:02:31,587:INFO:             kaleido: 0.2.1
2023-12-14 15:02:31,587:INFO:           schemdraw: 0.15
2023-12-14 15:02:31,587:INFO:         statsmodels: 0.14.0
2023-12-14 15:02:31,587:INFO:              sktime: 0.21.1
2023-12-14 15:02:31,587:INFO:               tbats: 1.1.3
2023-12-14 15:02:31,587:INFO:            pmdarima: 2.0.4
2023-12-14 15:02:31,587:INFO:              psutil: 5.9.6
2023-12-14 15:02:31,587:INFO:          markupsafe: 2.1.3
2023-12-14 15:02:31,587:INFO:             pickle5: Not installed
2023-12-14 15:02:31,587:INFO:         cloudpickle: 3.0.0
2023-12-14 15:02:31,587:INFO:         deprecation: 2.1.0
2023-12-14 15:02:31,587:INFO:              xxhash: 3.4.1
2023-12-14 15:02:31,587:INFO:           wurlitzer: Not installed
2023-12-14 15:02:31,587:INFO:PyCaret optional dependencies:
2023-12-14 15:02:31,600:INFO:                shap: Not installed
2023-12-14 15:02:31,600:INFO:           interpret: Not installed
2023-12-14 15:02:31,600:INFO:                umap: Not installed
2023-12-14 15:02:31,600:INFO:     ydata_profiling: Not installed
2023-12-14 15:02:31,600:INFO:  explainerdashboard: Not installed
2023-12-14 15:02:31,600:INFO:             autoviz: Not installed
2023-12-14 15:02:31,600:INFO:           fairlearn: Not installed
2023-12-14 15:02:31,600:INFO:          deepchecks: Not installed
2023-12-14 15:02:31,600:INFO:             xgboost: Not installed
2023-12-14 15:02:31,600:INFO:            catboost: Not installed
2023-12-14 15:02:31,600:INFO:              kmodes: Not installed
2023-12-14 15:02:31,601:INFO:             mlxtend: Not installed
2023-12-14 15:02:31,601:INFO:       statsforecast: Not installed
2023-12-14 15:02:31,601:INFO:        tune_sklearn: Not installed
2023-12-14 15:02:31,601:INFO:                 ray: Not installed
2023-12-14 15:02:31,601:INFO:            hyperopt: Not installed
2023-12-14 15:02:31,601:INFO:              optuna: Not installed
2023-12-14 15:02:31,601:INFO:               skopt: Not installed
2023-12-14 15:02:31,601:INFO:              mlflow: Not installed
2023-12-14 15:02:31,601:INFO:              gradio: Not installed
2023-12-14 15:02:31,601:INFO:             fastapi: Not installed
2023-12-14 15:02:31,601:INFO:             uvicorn: Not installed
2023-12-14 15:02:31,601:INFO:              m2cgen: Not installed
2023-12-14 15:02:31,601:INFO:           evidently: Not installed
2023-12-14 15:02:31,601:INFO:               fugue: Not installed
2023-12-14 15:02:31,601:INFO:           streamlit: Not installed
2023-12-14 15:02:31,601:INFO:             prophet: Not installed
2023-12-14 15:02:31,601:INFO:None
2023-12-14 15:02:31,601:INFO:Set up data.
2023-12-14 15:02:31,605:INFO:Set up folding strategy.
2023-12-14 15:02:31,605:INFO:Set up train/test split.
2023-12-14 15:02:31,608:INFO:Set up index.
2023-12-14 15:02:31,608:INFO:Assigning column types.
2023-12-14 15:02:31,610:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:02:31,610:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,614:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,617:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,662:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,704:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,708:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,712:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,758:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,795:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:02:31,798:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,802:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,901:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,907:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,956:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:31,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:31,992:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:02:31,999:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,115:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,216:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,217:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:02:32,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,414:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:02:32,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,566:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:02:32,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,606:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:02:32,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:32,801:INFO:Preparing preprocessing pipeline...
2023-12-14 15:02:32,801:INFO:Set up simple imputation.
2023-12-14 15:02:32,802:INFO:Set up column name cleaning.
2023-12-14 15:02:32,832:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:02:32,840:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:02:32,841:INFO:Creating final display dataframe.
2023-12-14 15:02:32,949:INFO:Setup _display_container:                     Description             Value
0                    Session id              6137
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (609, 7)
4        Transformed data shape          (609, 7)
5   Transformed train set shape          (426, 7)
6    Transformed test set shape          (183, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3989
2023-12-14 15:02:33,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:33,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:33,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:33,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:02:33,183:INFO:setup() successfully completed in 1.63s...............
2023-12-14 15:03:21,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:03:21,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:03:21,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:03:21,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:03:22,101:INFO:PyCaret RegressionExperiment
2023-12-14 15:03:22,101:INFO:Logging name: reg-default-name
2023-12-14 15:03:22,101:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:03:22,101:INFO:version 3.2.0
2023-12-14 15:03:22,101:INFO:Initializing setup()
2023-12-14 15:03:22,101:INFO:self.USI: 0a19
2023-12-14 15:03:22,101:INFO:self._variable_keys: {'_available_plots', '_ml_usecase', 'fold_generator', 'fold_shuffle_param', 'gpu_param', 'X', 'target_param', 'exp_name_log', 'n_jobs_param', 'USI', 'logging_param', 'memory', 'gpu_n_jobs_param', 'X_train', 'y', 'fold_groups_param', 'idx', 'seed', 'X_test', 'log_plots_param', 'y_test', 'y_train', 'transform_target_param', 'exp_id', 'pipeline', 'html_param', 'data'}
2023-12-14 15:03:22,101:INFO:Checking environment
2023-12-14 15:03:22,101:INFO:python_version: 3.11.0
2023-12-14 15:03:22,101:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:03:22,102:INFO:machine: AMD64
2023-12-14 15:03:22,111:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:03:22,116:INFO:Memory: svmem(total=14877257728, available=3198443520, percent=78.5, used=11678814208, free=3198443520)
2023-12-14 15:03:22,116:INFO:Physical Core: 8
2023-12-14 15:03:22,116:INFO:Logical Core: 16
2023-12-14 15:03:22,116:INFO:Checking libraries
2023-12-14 15:03:22,116:INFO:System:
2023-12-14 15:03:22,116:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:03:22,116:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:03:22,116:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:03:22,116:INFO:PyCaret required dependencies:
2023-12-14 15:03:22,132:INFO:                 pip: 22.3
2023-12-14 15:03:22,133:INFO:          setuptools: 65.5.0
2023-12-14 15:03:22,133:INFO:             pycaret: 3.2.0
2023-12-14 15:03:22,133:INFO:             IPython: 8.18.1
2023-12-14 15:03:22,133:INFO:          ipywidgets: 8.1.1
2023-12-14 15:03:22,133:INFO:                tqdm: 4.66.1
2023-12-14 15:03:22,133:INFO:               numpy: 1.25.2
2023-12-14 15:03:22,133:INFO:              pandas: 1.5.3
2023-12-14 15:03:22,133:INFO:              jinja2: 3.1.2
2023-12-14 15:03:22,133:INFO:               scipy: 1.10.1
2023-12-14 15:03:22,133:INFO:              joblib: 1.3.2
2023-12-14 15:03:22,133:INFO:             sklearn: 1.2.2
2023-12-14 15:03:22,133:INFO:                pyod: 1.1.2
2023-12-14 15:03:22,133:INFO:            imblearn: 0.11.0
2023-12-14 15:03:22,133:INFO:   category_encoders: 2.6.3
2023-12-14 15:03:22,133:INFO:            lightgbm: 4.1.0
2023-12-14 15:03:22,133:INFO:               numba: 0.58.1
2023-12-14 15:03:22,133:INFO:            requests: 2.31.0
2023-12-14 15:03:22,133:INFO:          matplotlib: 3.6.0
2023-12-14 15:03:22,133:INFO:          scikitplot: 0.3.7
2023-12-14 15:03:22,133:INFO:         yellowbrick: 1.5
2023-12-14 15:03:22,133:INFO:              plotly: 5.18.0
2023-12-14 15:03:22,133:INFO:    plotly-resampler: Not installed
2023-12-14 15:03:22,133:INFO:             kaleido: 0.2.1
2023-12-14 15:03:22,133:INFO:           schemdraw: 0.15
2023-12-14 15:03:22,133:INFO:         statsmodels: 0.14.0
2023-12-14 15:03:22,133:INFO:              sktime: 0.21.1
2023-12-14 15:03:22,133:INFO:               tbats: 1.1.3
2023-12-14 15:03:22,133:INFO:            pmdarima: 2.0.4
2023-12-14 15:03:22,133:INFO:              psutil: 5.9.6
2023-12-14 15:03:22,133:INFO:          markupsafe: 2.1.3
2023-12-14 15:03:22,133:INFO:             pickle5: Not installed
2023-12-14 15:03:22,133:INFO:         cloudpickle: 3.0.0
2023-12-14 15:03:22,134:INFO:         deprecation: 2.1.0
2023-12-14 15:03:22,134:INFO:              xxhash: 3.4.1
2023-12-14 15:03:22,134:INFO:           wurlitzer: Not installed
2023-12-14 15:03:22,134:INFO:PyCaret optional dependencies:
2023-12-14 15:03:22,146:INFO:                shap: Not installed
2023-12-14 15:03:22,146:INFO:           interpret: Not installed
2023-12-14 15:03:22,146:INFO:                umap: Not installed
2023-12-14 15:03:22,146:INFO:     ydata_profiling: Not installed
2023-12-14 15:03:22,146:INFO:  explainerdashboard: Not installed
2023-12-14 15:03:22,146:INFO:             autoviz: Not installed
2023-12-14 15:03:22,146:INFO:           fairlearn: Not installed
2023-12-14 15:03:22,146:INFO:          deepchecks: Not installed
2023-12-14 15:03:22,147:INFO:             xgboost: Not installed
2023-12-14 15:03:22,147:INFO:            catboost: Not installed
2023-12-14 15:03:22,147:INFO:              kmodes: Not installed
2023-12-14 15:03:22,147:INFO:             mlxtend: Not installed
2023-12-14 15:03:22,147:INFO:       statsforecast: Not installed
2023-12-14 15:03:22,147:INFO:        tune_sklearn: Not installed
2023-12-14 15:03:22,147:INFO:                 ray: Not installed
2023-12-14 15:03:22,147:INFO:            hyperopt: Not installed
2023-12-14 15:03:22,147:INFO:              optuna: Not installed
2023-12-14 15:03:22,147:INFO:               skopt: Not installed
2023-12-14 15:03:22,147:INFO:              mlflow: Not installed
2023-12-14 15:03:22,147:INFO:              gradio: Not installed
2023-12-14 15:03:22,147:INFO:             fastapi: Not installed
2023-12-14 15:03:22,147:INFO:             uvicorn: Not installed
2023-12-14 15:03:22,147:INFO:              m2cgen: Not installed
2023-12-14 15:03:22,147:INFO:           evidently: Not installed
2023-12-14 15:03:22,147:INFO:               fugue: Not installed
2023-12-14 15:03:22,147:INFO:           streamlit: Not installed
2023-12-14 15:03:22,147:INFO:             prophet: Not installed
2023-12-14 15:03:22,147:INFO:None
2023-12-14 15:03:22,147:INFO:Set up data.
2023-12-14 15:03:22,151:INFO:Set up folding strategy.
2023-12-14 15:03:22,151:INFO:Set up train/test split.
2023-12-14 15:03:22,153:INFO:Set up index.
2023-12-14 15:03:22,154:INFO:Assigning column types.
2023-12-14 15:03:22,156:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:03:22,156:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,159:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,163:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,249:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,253:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,257:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,345:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,346:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:03:22,350:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,354:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,398:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,442:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,446:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,490:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,526:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:03:22,532:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,580:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,616:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,624:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,707:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:03:22,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,884:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:03:22,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:22,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:22,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,027:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:03:23,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,065:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:03:23,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,247:INFO:Preparing preprocessing pipeline...
2023-12-14 15:03:23,247:INFO:Set up simple imputation.
2023-12-14 15:03:23,248:INFO:Set up column name cleaning.
2023-12-14 15:03:23,264:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:03:23,268:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:03:23,268:INFO:Creating final display dataframe.
2023-12-14 15:03:23,321:INFO:Setup _display_container:                     Description             Value
0                    Session id              4499
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              0a19
2023-12-14 15:03:23,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:03:23,531:INFO:setup() successfully completed in 1.43s...............
2023-12-14 15:04:54,673:INFO:Initializing create_model()
2023-12-14 15:04:54,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:04:54,673:INFO:Checking exceptions
2023-12-14 15:04:54,674:INFO:Importing libraries
2023-12-14 15:04:54,675:INFO:Copying training dataset
2023-12-14 15:04:54,677:INFO:Defining folds
2023-12-14 15:04:54,677:INFO:Declaring metric variables
2023-12-14 15:04:54,677:INFO:Importing untrained model
2023-12-14 15:04:54,677:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:04:54,677:INFO:Starting cross validation
2023-12-14 15:04:54,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:04:58,554:INFO:Calculating mean and std
2023-12-14 15:04:58,555:INFO:Creating metrics dataframe
2023-12-14 15:04:58,558:INFO:Finalizing model
2023-12-14 15:04:58,678:INFO:Uploading results into container
2023-12-14 15:04:58,678:INFO:Uploading model into container now
2023-12-14 15:04:58,685:INFO:_master_model_container: 1
2023-12-14 15:04:58,685:INFO:_display_container: 2
2023-12-14 15:04:58,685:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4499)
2023-12-14 15:04:58,685:INFO:create_model() successfully completed......................................
2023-12-14 15:04:58,765:INFO:Initializing tune_model()
2023-12-14 15:04:58,765:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4499), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:04:58,765:INFO:Checking exceptions
2023-12-14 15:04:58,767:INFO:Copying training dataset
2023-12-14 15:04:58,769:INFO:Checking base model
2023-12-14 15:04:58,769:INFO:Base model : Extra Trees Regressor
2023-12-14 15:04:58,769:INFO:Declaring metric variables
2023-12-14 15:04:58,769:INFO:Defining Hyperparameters
2023-12-14 15:04:58,841:INFO:Tuning with n_jobs=-1
2023-12-14 15:04:58,841:INFO:Initializing RandomizedSearchCV
2023-12-14 15:05:03,808:INFO:best_params: {'actual_estimator__n_estimators': 70, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:05:03,809:INFO:Hyperparameter search completed
2023-12-14 15:05:03,809:INFO:SubProcess create_model() called ==================================
2023-12-14 15:05:03,810:INFO:Initializing create_model()
2023-12-14 15:05:03,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4499), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165FF3FE710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 70, 'min_samples_split': 7, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 8, 'criterion': 'absolute_error', 'bootstrap': False})
2023-12-14 15:05:03,810:INFO:Checking exceptions
2023-12-14 15:05:03,810:INFO:Importing libraries
2023-12-14 15:05:03,810:INFO:Copying training dataset
2023-12-14 15:05:03,813:INFO:Defining folds
2023-12-14 15:05:03,813:INFO:Declaring metric variables
2023-12-14 15:05:03,813:INFO:Importing untrained model
2023-12-14 15:05:03,813:INFO:Declaring custom model
2023-12-14 15:05:03,814:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:05:03,814:INFO:Starting cross validation
2023-12-14 15:05:03,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:05:04,108:INFO:Calculating mean and std
2023-12-14 15:05:04,108:INFO:Creating metrics dataframe
2023-12-14 15:05:04,110:INFO:Finalizing model
2023-12-14 15:05:04,218:INFO:Uploading results into container
2023-12-14 15:05:04,219:INFO:Uploading model into container now
2023-12-14 15:05:04,219:INFO:_master_model_container: 2
2023-12-14 15:05:04,219:INFO:_display_container: 3
2023-12-14 15:05:04,220:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=8,
                    max_features='log2', min_impurity_decrease=0.0002,
                    min_samples_leaf=6, min_samples_split=7, n_estimators=70,
                    n_jobs=-1, random_state=4499)
2023-12-14 15:05:04,220:INFO:create_model() successfully completed......................................
2023-12-14 15:05:04,294:INFO:SubProcess create_model() end ==================================
2023-12-14 15:05:04,294:INFO:choose_better activated
2023-12-14 15:05:04,294:INFO:SubProcess create_model() called ==================================
2023-12-14 15:05:04,294:INFO:Initializing create_model()
2023-12-14 15:05:04,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4499), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:05:04,294:INFO:Checking exceptions
2023-12-14 15:05:04,295:INFO:Importing libraries
2023-12-14 15:05:04,295:INFO:Copying training dataset
2023-12-14 15:05:04,297:INFO:Defining folds
2023-12-14 15:05:04,297:INFO:Declaring metric variables
2023-12-14 15:05:04,298:INFO:Importing untrained model
2023-12-14 15:05:04,298:INFO:Declaring custom model
2023-12-14 15:05:04,298:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:05:04,298:INFO:Starting cross validation
2023-12-14 15:05:04,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:05:04,569:INFO:Calculating mean and std
2023-12-14 15:05:04,569:INFO:Creating metrics dataframe
2023-12-14 15:05:04,571:INFO:Finalizing model
2023-12-14 15:05:04,664:INFO:Uploading results into container
2023-12-14 15:05:04,664:INFO:Uploading model into container now
2023-12-14 15:05:04,665:INFO:_master_model_container: 3
2023-12-14 15:05:04,665:INFO:_display_container: 4
2023-12-14 15:05:04,665:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4499)
2023-12-14 15:05:04,665:INFO:create_model() successfully completed......................................
2023-12-14 15:05:04,733:INFO:SubProcess create_model() end ==================================
2023-12-14 15:05:04,734:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4499) result for R2 is 0.7151
2023-12-14 15:05:04,734:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=8,
                    max_features='log2', min_impurity_decrease=0.0002,
                    min_samples_leaf=6, min_samples_split=7, n_estimators=70,
                    n_jobs=-1, random_state=4499) result for R2 is 0.6305
2023-12-14 15:05:04,734:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4499) is best model
2023-12-14 15:05:04,734:INFO:choose_better completed
2023-12-14 15:05:04,735:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:05:04,741:INFO:_master_model_container: 3
2023-12-14 15:05:04,741:INFO:_display_container: 3
2023-12-14 15:05:04,741:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4499)
2023-12-14 15:05:04,741:INFO:tune_model() successfully completed......................................
2023-12-14 15:05:04,820:INFO:Initializing finalize_model()
2023-12-14 15:05:04,820:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4499), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:05:04,820:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=4499)
2023-12-14 15:05:04,822:INFO:Initializing create_model()
2023-12-14 15:05:04,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4499), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:05:04,822:INFO:Checking exceptions
2023-12-14 15:05:04,823:INFO:Importing libraries
2023-12-14 15:05:04,823:INFO:Copying training dataset
2023-12-14 15:05:04,823:INFO:Defining folds
2023-12-14 15:05:04,823:INFO:Declaring metric variables
2023-12-14 15:05:04,823:INFO:Importing untrained model
2023-12-14 15:05:04,823:INFO:Declaring custom model
2023-12-14 15:05:04,823:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:05:04,824:INFO:Cross validation set to False
2023-12-14 15:05:04,824:INFO:Fitting Model
2023-12-14 15:05:04,919:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4499))])
2023-12-14 15:05:04,919:INFO:create_model() successfully completed......................................
2023-12-14 15:05:04,989:INFO:_master_model_container: 3
2023-12-14 15:05:04,989:INFO:_display_container: 3
2023-12-14 15:05:04,993:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4499))])
2023-12-14 15:05:04,993:INFO:finalize_model() successfully completed......................................
2023-12-14 15:05:05,068:INFO:Initializing predict_model()
2023-12-14 15:05:05,068:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000165D6D31F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4499))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000165FD8BA700>)
2023-12-14 15:05:05,068:INFO:Checking exceptions
2023-12-14 15:05:05,068:INFO:Preloading libraries
2023-12-14 15:05:05,068:INFO:Set up data.
2023-12-14 15:05:05,073:INFO:Set up index.
2023-12-14 15:08:12,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:08:12,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:08:12,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:08:12,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:08:12,279:INFO:PyCaret RegressionExperiment
2023-12-14 15:08:12,279:INFO:Logging name: reg-default-name
2023-12-14 15:08:12,279:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:08:12,279:INFO:version 3.2.0
2023-12-14 15:08:12,279:INFO:Initializing setup()
2023-12-14 15:08:12,279:INFO:self.USI: dc4b
2023-12-14 15:08:12,279:INFO:self._variable_keys: {'gpu_n_jobs_param', 'pipeline', 'y_test', 'exp_name_log', 'exp_id', '_available_plots', 'X', 'gpu_param', 'seed', 'target_param', 'USI', 'transform_target_param', 'n_jobs_param', 'y', 'data', 'memory', 'log_plots_param', 'fold_shuffle_param', 'X_test', 'fold_groups_param', '_ml_usecase', 'X_train', 'html_param', 'fold_generator', 'y_train', 'idx', 'logging_param'}
2023-12-14 15:08:12,280:INFO:Checking environment
2023-12-14 15:08:12,280:INFO:python_version: 3.11.0
2023-12-14 15:08:12,280:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:08:12,280:INFO:machine: AMD64
2023-12-14 15:08:12,290:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:08:12,296:INFO:Memory: svmem(total=14877257728, available=3071078400, percent=79.4, used=11806179328, free=3071078400)
2023-12-14 15:08:12,296:INFO:Physical Core: 8
2023-12-14 15:08:12,296:INFO:Logical Core: 16
2023-12-14 15:08:12,296:INFO:Checking libraries
2023-12-14 15:08:12,296:INFO:System:
2023-12-14 15:08:12,296:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:08:12,296:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:08:12,296:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:08:12,296:INFO:PyCaret required dependencies:
2023-12-14 15:08:12,316:INFO:                 pip: 22.3
2023-12-14 15:08:12,316:INFO:          setuptools: 65.5.0
2023-12-14 15:08:12,316:INFO:             pycaret: 3.2.0
2023-12-14 15:08:12,316:INFO:             IPython: 8.18.1
2023-12-14 15:08:12,316:INFO:          ipywidgets: 8.1.1
2023-12-14 15:08:12,316:INFO:                tqdm: 4.66.1
2023-12-14 15:08:12,316:INFO:               numpy: 1.25.2
2023-12-14 15:08:12,316:INFO:              pandas: 1.5.3
2023-12-14 15:08:12,316:INFO:              jinja2: 3.1.2
2023-12-14 15:08:12,316:INFO:               scipy: 1.10.1
2023-12-14 15:08:12,316:INFO:              joblib: 1.3.2
2023-12-14 15:08:12,316:INFO:             sklearn: 1.2.2
2023-12-14 15:08:12,316:INFO:                pyod: 1.1.2
2023-12-14 15:08:12,316:INFO:            imblearn: 0.11.0
2023-12-14 15:08:12,316:INFO:   category_encoders: 2.6.3
2023-12-14 15:08:12,316:INFO:            lightgbm: 4.1.0
2023-12-14 15:08:12,316:INFO:               numba: 0.58.1
2023-12-14 15:08:12,316:INFO:            requests: 2.31.0
2023-12-14 15:08:12,316:INFO:          matplotlib: 3.6.0
2023-12-14 15:08:12,316:INFO:          scikitplot: 0.3.7
2023-12-14 15:08:12,317:INFO:         yellowbrick: 1.5
2023-12-14 15:08:12,317:INFO:              plotly: 5.18.0
2023-12-14 15:08:12,317:INFO:    plotly-resampler: Not installed
2023-12-14 15:08:12,317:INFO:             kaleido: 0.2.1
2023-12-14 15:08:12,317:INFO:           schemdraw: 0.15
2023-12-14 15:08:12,317:INFO:         statsmodels: 0.14.0
2023-12-14 15:08:12,317:INFO:              sktime: 0.21.1
2023-12-14 15:08:12,317:INFO:               tbats: 1.1.3
2023-12-14 15:08:12,317:INFO:            pmdarima: 2.0.4
2023-12-14 15:08:12,317:INFO:              psutil: 5.9.6
2023-12-14 15:08:12,317:INFO:          markupsafe: 2.1.3
2023-12-14 15:08:12,317:INFO:             pickle5: Not installed
2023-12-14 15:08:12,317:INFO:         cloudpickle: 3.0.0
2023-12-14 15:08:12,317:INFO:         deprecation: 2.1.0
2023-12-14 15:08:12,317:INFO:              xxhash: 3.4.1
2023-12-14 15:08:12,317:INFO:           wurlitzer: Not installed
2023-12-14 15:08:12,317:INFO:PyCaret optional dependencies:
2023-12-14 15:08:12,330:INFO:                shap: Not installed
2023-12-14 15:08:12,330:INFO:           interpret: Not installed
2023-12-14 15:08:12,330:INFO:                umap: Not installed
2023-12-14 15:08:12,330:INFO:     ydata_profiling: Not installed
2023-12-14 15:08:12,330:INFO:  explainerdashboard: Not installed
2023-12-14 15:08:12,330:INFO:             autoviz: Not installed
2023-12-14 15:08:12,330:INFO:           fairlearn: Not installed
2023-12-14 15:08:12,330:INFO:          deepchecks: Not installed
2023-12-14 15:08:12,330:INFO:             xgboost: Not installed
2023-12-14 15:08:12,330:INFO:            catboost: Not installed
2023-12-14 15:08:12,330:INFO:              kmodes: Not installed
2023-12-14 15:08:12,330:INFO:             mlxtend: Not installed
2023-12-14 15:08:12,330:INFO:       statsforecast: Not installed
2023-12-14 15:08:12,330:INFO:        tune_sklearn: Not installed
2023-12-14 15:08:12,331:INFO:                 ray: Not installed
2023-12-14 15:08:12,331:INFO:            hyperopt: Not installed
2023-12-14 15:08:12,331:INFO:              optuna: Not installed
2023-12-14 15:08:12,331:INFO:               skopt: Not installed
2023-12-14 15:08:12,331:INFO:              mlflow: Not installed
2023-12-14 15:08:12,331:INFO:              gradio: Not installed
2023-12-14 15:08:12,331:INFO:             fastapi: Not installed
2023-12-14 15:08:12,331:INFO:             uvicorn: Not installed
2023-12-14 15:08:12,331:INFO:              m2cgen: Not installed
2023-12-14 15:08:12,331:INFO:           evidently: Not installed
2023-12-14 15:08:12,331:INFO:               fugue: Not installed
2023-12-14 15:08:12,331:INFO:           streamlit: Not installed
2023-12-14 15:08:12,331:INFO:             prophet: Not installed
2023-12-14 15:08:12,331:INFO:None
2023-12-14 15:08:12,331:INFO:Set up data.
2023-12-14 15:08:12,336:INFO:Set up folding strategy.
2023-12-14 15:08:12,336:INFO:Set up train/test split.
2023-12-14 15:08:12,339:INFO:Set up index.
2023-12-14 15:08:12,339:INFO:Assigning column types.
2023-12-14 15:08:12,342:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:08:12,342:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,346:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,349:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,397:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,444:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,449:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,453:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,542:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,543:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:08:12,549:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,555:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,653:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,658:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,701:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,738:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:08:12,746:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,850:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,900:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:12,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:12,936:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:08:12,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:13,025:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:13,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,082:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:13,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:08:13,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,117:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:08:13,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:13,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,269:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:08:13,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,306:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:08:13,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,492:INFO:Preparing preprocessing pipeline...
2023-12-14 15:08:13,492:INFO:Set up simple imputation.
2023-12-14 15:08:13,493:INFO:Set up column name cleaning.
2023-12-14 15:08:13,508:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:08:13,513:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:08:13,513:INFO:Creating final display dataframe.
2023-12-14 15:08:13,571:INFO:Setup _display_container:                     Description             Value
0                    Session id              3187
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              dc4b
2023-12-14 15:08:13,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:08:13,772:INFO:setup() successfully completed in 1.49s...............
2023-12-14 15:08:33,113:INFO:Initializing create_model()
2023-12-14 15:08:33,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:08:33,113:INFO:Checking exceptions
2023-12-14 15:08:33,115:INFO:Importing libraries
2023-12-14 15:08:33,115:INFO:Copying training dataset
2023-12-14 15:08:33,118:INFO:Defining folds
2023-12-14 15:08:33,118:INFO:Declaring metric variables
2023-12-14 15:08:33,118:INFO:Importing untrained model
2023-12-14 15:08:33,118:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:08:33,118:INFO:Starting cross validation
2023-12-14 15:08:33,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:08:37,036:INFO:Calculating mean and std
2023-12-14 15:08:37,038:INFO:Creating metrics dataframe
2023-12-14 15:08:37,041:INFO:Finalizing model
2023-12-14 15:08:37,157:INFO:Uploading results into container
2023-12-14 15:08:37,158:INFO:Uploading model into container now
2023-12-14 15:08:37,164:INFO:_master_model_container: 1
2023-12-14 15:08:37,164:INFO:_display_container: 2
2023-12-14 15:08:37,164:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3187)
2023-12-14 15:08:37,165:INFO:create_model() successfully completed......................................
2023-12-14 15:08:37,248:INFO:Initializing tune_model()
2023-12-14 15:08:37,248:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3187), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:08:37,248:INFO:Checking exceptions
2023-12-14 15:08:37,250:INFO:Copying training dataset
2023-12-14 15:08:37,251:INFO:Checking base model
2023-12-14 15:08:37,251:INFO:Base model : Extra Trees Regressor
2023-12-14 15:08:37,252:INFO:Declaring metric variables
2023-12-14 15:08:37,252:INFO:Defining Hyperparameters
2023-12-14 15:08:37,325:INFO:Tuning with n_jobs=-1
2023-12-14 15:08:37,326:INFO:Initializing RandomizedSearchCV
2023-12-14 15:08:42,557:INFO:best_params: {'actual_estimator__n_estimators': 170, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:08:42,557:INFO:Hyperparameter search completed
2023-12-14 15:08:42,557:INFO:SubProcess create_model() called ==================================
2023-12-14 15:08:42,558:INFO:Initializing create_model()
2023-12-14 15:08:42,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3187), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A07218A550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 170, 'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:08:42,558:INFO:Checking exceptions
2023-12-14 15:08:42,558:INFO:Importing libraries
2023-12-14 15:08:42,558:INFO:Copying training dataset
2023-12-14 15:08:42,562:INFO:Defining folds
2023-12-14 15:08:42,562:INFO:Declaring metric variables
2023-12-14 15:08:42,562:INFO:Importing untrained model
2023-12-14 15:08:42,562:INFO:Declaring custom model
2023-12-14 15:08:42,563:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:08:42,564:INFO:Starting cross validation
2023-12-14 15:08:42,564:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:08:42,908:INFO:Calculating mean and std
2023-12-14 15:08:42,909:INFO:Creating metrics dataframe
2023-12-14 15:08:42,910:INFO:Finalizing model
2023-12-14 15:08:43,037:INFO:Uploading results into container
2023-12-14 15:08:43,037:INFO:Uploading model into container now
2023-12-14 15:08:43,038:INFO:_master_model_container: 2
2023-12-14 15:08:43,038:INFO:_display_container: 3
2023-12-14 15:08:43,038:INFO:ExtraTreesRegressor(max_depth=8, min_impurity_decrease=0, min_samples_leaf=2,
                    min_samples_split=10, n_estimators=170, n_jobs=-1,
                    random_state=3187)
2023-12-14 15:08:43,038:INFO:create_model() successfully completed......................................
2023-12-14 15:08:43,115:INFO:SubProcess create_model() end ==================================
2023-12-14 15:08:43,115:INFO:choose_better activated
2023-12-14 15:08:43,115:INFO:SubProcess create_model() called ==================================
2023-12-14 15:08:43,115:INFO:Initializing create_model()
2023-12-14 15:08:43,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3187), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:08:43,115:INFO:Checking exceptions
2023-12-14 15:08:43,116:INFO:Importing libraries
2023-12-14 15:08:43,116:INFO:Copying training dataset
2023-12-14 15:08:43,119:INFO:Defining folds
2023-12-14 15:08:43,119:INFO:Declaring metric variables
2023-12-14 15:08:43,119:INFO:Importing untrained model
2023-12-14 15:08:43,119:INFO:Declaring custom model
2023-12-14 15:08:43,119:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:08:43,119:INFO:Starting cross validation
2023-12-14 15:08:43,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:08:43,380:INFO:Calculating mean and std
2023-12-14 15:08:43,381:INFO:Creating metrics dataframe
2023-12-14 15:08:43,383:INFO:Finalizing model
2023-12-14 15:08:43,492:INFO:Uploading results into container
2023-12-14 15:08:43,492:INFO:Uploading model into container now
2023-12-14 15:08:43,493:INFO:_master_model_container: 3
2023-12-14 15:08:43,493:INFO:_display_container: 4
2023-12-14 15:08:43,493:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3187)
2023-12-14 15:08:43,493:INFO:create_model() successfully completed......................................
2023-12-14 15:08:43,566:INFO:SubProcess create_model() end ==================================
2023-12-14 15:08:43,566:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3187) result for R2 is 0.7187
2023-12-14 15:08:43,567:INFO:ExtraTreesRegressor(max_depth=8, min_impurity_decrease=0, min_samples_leaf=2,
                    min_samples_split=10, n_estimators=170, n_jobs=-1,
                    random_state=3187) result for R2 is 0.7163
2023-12-14 15:08:43,567:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3187) is best model
2023-12-14 15:08:43,567:INFO:choose_better completed
2023-12-14 15:08:43,567:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:08:43,574:INFO:_master_model_container: 3
2023-12-14 15:08:43,574:INFO:_display_container: 3
2023-12-14 15:08:43,574:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3187)
2023-12-14 15:08:43,574:INFO:tune_model() successfully completed......................................
2023-12-14 15:08:43,655:INFO:Initializing finalize_model()
2023-12-14 15:08:43,655:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3187), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:08:43,655:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=3187)
2023-12-14 15:08:43,657:INFO:Initializing create_model()
2023-12-14 15:08:43,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3187), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:08:43,657:INFO:Checking exceptions
2023-12-14 15:08:43,658:INFO:Importing libraries
2023-12-14 15:08:43,658:INFO:Copying training dataset
2023-12-14 15:08:43,658:INFO:Defining folds
2023-12-14 15:08:43,658:INFO:Declaring metric variables
2023-12-14 15:08:43,658:INFO:Importing untrained model
2023-12-14 15:08:43,658:INFO:Declaring custom model
2023-12-14 15:08:43,659:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:08:43,659:INFO:Cross validation set to False
2023-12-14 15:08:43,659:INFO:Fitting Model
2023-12-14 15:08:43,757:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3187))])
2023-12-14 15:08:43,757:INFO:create_model() successfully completed......................................
2023-12-14 15:08:43,827:INFO:_master_model_container: 3
2023-12-14 15:08:43,827:INFO:_display_container: 3
2023-12-14 15:08:43,832:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3187))])
2023-12-14 15:08:43,832:INFO:finalize_model() successfully completed......................................
2023-12-14 15:08:43,905:INFO:Initializing predict_model()
2023-12-14 15:08:43,905:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A04BE73590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3187))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A04CBA4180>)
2023-12-14 15:08:43,905:INFO:Checking exceptions
2023-12-14 15:08:43,905:INFO:Preloading libraries
2023-12-14 15:08:43,905:INFO:Set up data.
2023-12-14 15:08:43,908:INFO:Set up index.
2023-12-14 15:13:38,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:13:38,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:13:38,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:13:38,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:13:38,364:INFO:PyCaret RegressionExperiment
2023-12-14 15:13:38,364:INFO:Logging name: reg-default-name
2023-12-14 15:13:38,364:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:13:38,364:INFO:version 3.2.0
2023-12-14 15:13:38,364:INFO:Initializing setup()
2023-12-14 15:13:38,364:INFO:self.USI: f39d
2023-12-14 15:13:38,364:INFO:self._variable_keys: {'transform_target_param', 'logging_param', 'log_plots_param', 'y_train', 'pipeline', 'X', 'data', 'fold_shuffle_param', 'gpu_n_jobs_param', '_available_plots', 'n_jobs_param', 'gpu_param', 'fold_generator', 'USI', 'X_train', 'y_test', 'fold_groups_param', 'html_param', 'idx', 'memory', 'target_param', 'X_test', 'exp_name_log', 'seed', 'y', '_ml_usecase', 'exp_id'}
2023-12-14 15:13:38,365:INFO:Checking environment
2023-12-14 15:13:38,365:INFO:python_version: 3.11.0
2023-12-14 15:13:38,365:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:13:38,365:INFO:machine: AMD64
2023-12-14 15:13:38,374:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:13:38,379:INFO:Memory: svmem(total=14877257728, available=3090018304, percent=79.2, used=11787239424, free=3090018304)
2023-12-14 15:13:38,379:INFO:Physical Core: 8
2023-12-14 15:13:38,379:INFO:Logical Core: 16
2023-12-14 15:13:38,379:INFO:Checking libraries
2023-12-14 15:13:38,379:INFO:System:
2023-12-14 15:13:38,379:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:13:38,379:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:13:38,379:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:13:38,379:INFO:PyCaret required dependencies:
2023-12-14 15:13:38,395:INFO:                 pip: 22.3
2023-12-14 15:13:38,395:INFO:          setuptools: 65.5.0
2023-12-14 15:13:38,395:INFO:             pycaret: 3.2.0
2023-12-14 15:13:38,395:INFO:             IPython: 8.18.1
2023-12-14 15:13:38,395:INFO:          ipywidgets: 8.1.1
2023-12-14 15:13:38,396:INFO:                tqdm: 4.66.1
2023-12-14 15:13:38,396:INFO:               numpy: 1.25.2
2023-12-14 15:13:38,396:INFO:              pandas: 1.5.3
2023-12-14 15:13:38,396:INFO:              jinja2: 3.1.2
2023-12-14 15:13:38,396:INFO:               scipy: 1.10.1
2023-12-14 15:13:38,396:INFO:              joblib: 1.3.2
2023-12-14 15:13:38,396:INFO:             sklearn: 1.2.2
2023-12-14 15:13:38,396:INFO:                pyod: 1.1.2
2023-12-14 15:13:38,396:INFO:            imblearn: 0.11.0
2023-12-14 15:13:38,396:INFO:   category_encoders: 2.6.3
2023-12-14 15:13:38,396:INFO:            lightgbm: 4.1.0
2023-12-14 15:13:38,396:INFO:               numba: 0.58.1
2023-12-14 15:13:38,396:INFO:            requests: 2.31.0
2023-12-14 15:13:38,396:INFO:          matplotlib: 3.6.0
2023-12-14 15:13:38,396:INFO:          scikitplot: 0.3.7
2023-12-14 15:13:38,396:INFO:         yellowbrick: 1.5
2023-12-14 15:13:38,396:INFO:              plotly: 5.18.0
2023-12-14 15:13:38,396:INFO:    plotly-resampler: Not installed
2023-12-14 15:13:38,396:INFO:             kaleido: 0.2.1
2023-12-14 15:13:38,396:INFO:           schemdraw: 0.15
2023-12-14 15:13:38,396:INFO:         statsmodels: 0.14.0
2023-12-14 15:13:38,396:INFO:              sktime: 0.21.1
2023-12-14 15:13:38,396:INFO:               tbats: 1.1.3
2023-12-14 15:13:38,396:INFO:            pmdarima: 2.0.4
2023-12-14 15:13:38,396:INFO:              psutil: 5.9.6
2023-12-14 15:13:38,396:INFO:          markupsafe: 2.1.3
2023-12-14 15:13:38,396:INFO:             pickle5: Not installed
2023-12-14 15:13:38,396:INFO:         cloudpickle: 3.0.0
2023-12-14 15:13:38,396:INFO:         deprecation: 2.1.0
2023-12-14 15:13:38,396:INFO:              xxhash: 3.4.1
2023-12-14 15:13:38,396:INFO:           wurlitzer: Not installed
2023-12-14 15:13:38,396:INFO:PyCaret optional dependencies:
2023-12-14 15:13:38,409:INFO:                shap: Not installed
2023-12-14 15:13:38,409:INFO:           interpret: Not installed
2023-12-14 15:13:38,409:INFO:                umap: Not installed
2023-12-14 15:13:38,409:INFO:     ydata_profiling: Not installed
2023-12-14 15:13:38,409:INFO:  explainerdashboard: Not installed
2023-12-14 15:13:38,409:INFO:             autoviz: Not installed
2023-12-14 15:13:38,409:INFO:           fairlearn: Not installed
2023-12-14 15:13:38,409:INFO:          deepchecks: Not installed
2023-12-14 15:13:38,409:INFO:             xgboost: Not installed
2023-12-14 15:13:38,409:INFO:            catboost: Not installed
2023-12-14 15:13:38,409:INFO:              kmodes: Not installed
2023-12-14 15:13:38,409:INFO:             mlxtend: Not installed
2023-12-14 15:13:38,409:INFO:       statsforecast: Not installed
2023-12-14 15:13:38,409:INFO:        tune_sklearn: Not installed
2023-12-14 15:13:38,409:INFO:                 ray: Not installed
2023-12-14 15:13:38,409:INFO:            hyperopt: Not installed
2023-12-14 15:13:38,409:INFO:              optuna: Not installed
2023-12-14 15:13:38,410:INFO:               skopt: Not installed
2023-12-14 15:13:38,410:INFO:              mlflow: Not installed
2023-12-14 15:13:38,410:INFO:              gradio: Not installed
2023-12-14 15:13:38,410:INFO:             fastapi: Not installed
2023-12-14 15:13:38,410:INFO:             uvicorn: Not installed
2023-12-14 15:13:38,410:INFO:              m2cgen: Not installed
2023-12-14 15:13:38,410:INFO:           evidently: Not installed
2023-12-14 15:13:38,410:INFO:               fugue: Not installed
2023-12-14 15:13:38,410:INFO:           streamlit: Not installed
2023-12-14 15:13:38,410:INFO:             prophet: Not installed
2023-12-14 15:13:38,410:INFO:None
2023-12-14 15:13:38,410:INFO:Set up data.
2023-12-14 15:13:38,414:INFO:Set up folding strategy.
2023-12-14 15:13:38,414:INFO:Set up train/test split.
2023-12-14 15:13:38,416:INFO:Set up index.
2023-12-14 15:13:38,416:INFO:Assigning column types.
2023-12-14 15:13:38,419:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:13:38,419:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,422:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,426:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,518:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,522:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,525:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,578:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,613:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:13:38,616:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,620:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,712:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,715:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,795:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:13:38,802:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,894:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,940:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,974:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:38,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:38,975:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:13:39,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:39,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:39,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,128:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:39,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:13:39,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,163:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:13:39,214:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:39,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:13:39,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,340:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:13:39,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,513:INFO:Preparing preprocessing pipeline...
2023-12-14 15:13:39,513:INFO:Set up simple imputation.
2023-12-14 15:13:39,514:INFO:Set up column name cleaning.
2023-12-14 15:13:39,529:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:13:39,533:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:13:39,533:INFO:Creating final display dataframe.
2023-12-14 15:13:39,579:INFO:Setup _display_container:                     Description             Value
0                    Session id              6277
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f39d
2023-12-14 15:13:39,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:13:39,771:INFO:setup() successfully completed in 1.41s...............
2023-12-14 15:14:59,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:14:59,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:14:59,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:14:59,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:14:59,372:INFO:PyCaret RegressionExperiment
2023-12-14 15:14:59,372:INFO:Logging name: reg-default-name
2023-12-14 15:14:59,372:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:14:59,372:INFO:version 3.2.0
2023-12-14 15:14:59,372:INFO:Initializing setup()
2023-12-14 15:14:59,372:INFO:self.USI: a715
2023-12-14 15:14:59,373:INFO:self._variable_keys: {'html_param', 'seed', 'exp_id', 'memory', 'gpu_n_jobs_param', 'n_jobs_param', 'X_test', 'y_test', 'data', 'X', 'logging_param', 'exp_name_log', 'y_train', 'fold_groups_param', 'USI', 'pipeline', 'fold_generator', 'target_param', 'idx', 'X_train', 'log_plots_param', '_available_plots', 'y', 'fold_shuffle_param', 'transform_target_param', '_ml_usecase', 'gpu_param'}
2023-12-14 15:14:59,373:INFO:Checking environment
2023-12-14 15:14:59,373:INFO:python_version: 3.11.0
2023-12-14 15:14:59,373:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:14:59,373:INFO:machine: AMD64
2023-12-14 15:14:59,382:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:14:59,387:INFO:Memory: svmem(total=14877257728, available=2931929088, percent=80.3, used=11945328640, free=2931929088)
2023-12-14 15:14:59,387:INFO:Physical Core: 8
2023-12-14 15:14:59,387:INFO:Logical Core: 16
2023-12-14 15:14:59,387:INFO:Checking libraries
2023-12-14 15:14:59,387:INFO:System:
2023-12-14 15:14:59,387:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:14:59,387:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:14:59,387:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:14:59,387:INFO:PyCaret required dependencies:
2023-12-14 15:14:59,403:INFO:                 pip: 22.3
2023-12-14 15:14:59,403:INFO:          setuptools: 65.5.0
2023-12-14 15:14:59,403:INFO:             pycaret: 3.2.0
2023-12-14 15:14:59,403:INFO:             IPython: 8.18.1
2023-12-14 15:14:59,403:INFO:          ipywidgets: 8.1.1
2023-12-14 15:14:59,403:INFO:                tqdm: 4.66.1
2023-12-14 15:14:59,403:INFO:               numpy: 1.25.2
2023-12-14 15:14:59,403:INFO:              pandas: 1.5.3
2023-12-14 15:14:59,403:INFO:              jinja2: 3.1.2
2023-12-14 15:14:59,403:INFO:               scipy: 1.10.1
2023-12-14 15:14:59,403:INFO:              joblib: 1.3.2
2023-12-14 15:14:59,403:INFO:             sklearn: 1.2.2
2023-12-14 15:14:59,403:INFO:                pyod: 1.1.2
2023-12-14 15:14:59,403:INFO:            imblearn: 0.11.0
2023-12-14 15:14:59,403:INFO:   category_encoders: 2.6.3
2023-12-14 15:14:59,403:INFO:            lightgbm: 4.1.0
2023-12-14 15:14:59,403:INFO:               numba: 0.58.1
2023-12-14 15:14:59,403:INFO:            requests: 2.31.0
2023-12-14 15:14:59,403:INFO:          matplotlib: 3.6.0
2023-12-14 15:14:59,403:INFO:          scikitplot: 0.3.7
2023-12-14 15:14:59,403:INFO:         yellowbrick: 1.5
2023-12-14 15:14:59,403:INFO:              plotly: 5.18.0
2023-12-14 15:14:59,403:INFO:    plotly-resampler: Not installed
2023-12-14 15:14:59,403:INFO:             kaleido: 0.2.1
2023-12-14 15:14:59,403:INFO:           schemdraw: 0.15
2023-12-14 15:14:59,403:INFO:         statsmodels: 0.14.0
2023-12-14 15:14:59,403:INFO:              sktime: 0.21.1
2023-12-14 15:14:59,403:INFO:               tbats: 1.1.3
2023-12-14 15:14:59,403:INFO:            pmdarima: 2.0.4
2023-12-14 15:14:59,403:INFO:              psutil: 5.9.6
2023-12-14 15:14:59,403:INFO:          markupsafe: 2.1.3
2023-12-14 15:14:59,403:INFO:             pickle5: Not installed
2023-12-14 15:14:59,403:INFO:         cloudpickle: 3.0.0
2023-12-14 15:14:59,403:INFO:         deprecation: 2.1.0
2023-12-14 15:14:59,403:INFO:              xxhash: 3.4.1
2023-12-14 15:14:59,403:INFO:           wurlitzer: Not installed
2023-12-14 15:14:59,403:INFO:PyCaret optional dependencies:
2023-12-14 15:14:59,416:INFO:                shap: Not installed
2023-12-14 15:14:59,416:INFO:           interpret: Not installed
2023-12-14 15:14:59,416:INFO:                umap: Not installed
2023-12-14 15:14:59,416:INFO:     ydata_profiling: Not installed
2023-12-14 15:14:59,416:INFO:  explainerdashboard: Not installed
2023-12-14 15:14:59,416:INFO:             autoviz: Not installed
2023-12-14 15:14:59,416:INFO:           fairlearn: Not installed
2023-12-14 15:14:59,416:INFO:          deepchecks: Not installed
2023-12-14 15:14:59,416:INFO:             xgboost: Not installed
2023-12-14 15:14:59,416:INFO:            catboost: Not installed
2023-12-14 15:14:59,416:INFO:              kmodes: Not installed
2023-12-14 15:14:59,416:INFO:             mlxtend: Not installed
2023-12-14 15:14:59,416:INFO:       statsforecast: Not installed
2023-12-14 15:14:59,416:INFO:        tune_sklearn: Not installed
2023-12-14 15:14:59,416:INFO:                 ray: Not installed
2023-12-14 15:14:59,416:INFO:            hyperopt: Not installed
2023-12-14 15:14:59,416:INFO:              optuna: Not installed
2023-12-14 15:14:59,416:INFO:               skopt: Not installed
2023-12-14 15:14:59,416:INFO:              mlflow: Not installed
2023-12-14 15:14:59,416:INFO:              gradio: Not installed
2023-12-14 15:14:59,416:INFO:             fastapi: Not installed
2023-12-14 15:14:59,416:INFO:             uvicorn: Not installed
2023-12-14 15:14:59,416:INFO:              m2cgen: Not installed
2023-12-14 15:14:59,416:INFO:           evidently: Not installed
2023-12-14 15:14:59,416:INFO:               fugue: Not installed
2023-12-14 15:14:59,416:INFO:           streamlit: Not installed
2023-12-14 15:14:59,416:INFO:             prophet: Not installed
2023-12-14 15:14:59,416:INFO:None
2023-12-14 15:14:59,416:INFO:Set up data.
2023-12-14 15:14:59,421:INFO:Set up folding strategy.
2023-12-14 15:14:59,421:INFO:Set up train/test split.
2023-12-14 15:14:59,423:INFO:Set up index.
2023-12-14 15:14:59,423:INFO:Assigning column types.
2023-12-14 15:14:59,425:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:14:59,425:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,428:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,432:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,512:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,518:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,525:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,572:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,606:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,607:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:14:59,610:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,614:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,658:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,696:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,700:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,779:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:14:59,786:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,872:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,881:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,970:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:14:59,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:14:59,971:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:15:00,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:15:00,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:15:00,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,114:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:15:00,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:15:00,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,150:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:15:00,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:15:00,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,289:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:15:00,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,337:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:15:00,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,509:INFO:Preparing preprocessing pipeline...
2023-12-14 15:15:00,509:INFO:Set up simple imputation.
2023-12-14 15:15:00,510:INFO:Set up column name cleaning.
2023-12-14 15:15:00,526:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:15:00,530:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:15:00,530:INFO:Creating final display dataframe.
2023-12-14 15:15:00,577:INFO:Setup _display_container:                     Description             Value
0                    Session id              5651
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              a715
2023-12-14 15:15:00,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:15:00,757:INFO:setup() successfully completed in 1.39s...............
2023-12-14 15:15:00,762:INFO:Initializing create_model()
2023-12-14 15:15:00,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:15:00,762:INFO:Checking exceptions
2023-12-14 15:15:00,764:INFO:Importing libraries
2023-12-14 15:15:00,764:INFO:Copying training dataset
2023-12-14 15:15:00,767:INFO:Defining folds
2023-12-14 15:15:00,767:INFO:Declaring metric variables
2023-12-14 15:15:00,767:INFO:Importing untrained model
2023-12-14 15:15:00,767:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:15:00,767:INFO:Starting cross validation
2023-12-14 15:15:00,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:15:04,578:INFO:Calculating mean and std
2023-12-14 15:15:04,579:INFO:Creating metrics dataframe
2023-12-14 15:15:04,581:INFO:Finalizing model
2023-12-14 15:15:04,676:INFO:Uploading results into container
2023-12-14 15:15:04,676:INFO:Uploading model into container now
2023-12-14 15:15:04,683:INFO:_master_model_container: 1
2023-12-14 15:15:04,683:INFO:_display_container: 2
2023-12-14 15:15:04,683:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:04,683:INFO:create_model() successfully completed......................................
2023-12-14 15:15:04,754:INFO:Initializing tune_model()
2023-12-14 15:15:04,754:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5651), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:15:04,754:INFO:Checking exceptions
2023-12-14 15:15:04,757:INFO:Copying training dataset
2023-12-14 15:15:04,758:INFO:Checking base model
2023-12-14 15:15:04,759:INFO:Base model : Extra Trees Regressor
2023-12-14 15:15:04,759:INFO:Declaring metric variables
2023-12-14 15:15:04,759:INFO:Defining Hyperparameters
2023-12-14 15:15:04,831:INFO:Tuning with n_jobs=-1
2023-12-14 15:15:04,831:INFO:Initializing RandomizedSearchCV
2023-12-14 15:15:10,533:INFO:best_params: {'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:15:10,533:INFO:Hyperparameter search completed
2023-12-14 15:15:10,534:INFO:SubProcess create_model() called ==================================
2023-12-14 15:15:10,534:INFO:Initializing create_model()
2023-12-14 15:15:10,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5651), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002608EAC58D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 140, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.02, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:15:10,534:INFO:Checking exceptions
2023-12-14 15:15:10,534:INFO:Importing libraries
2023-12-14 15:15:10,534:INFO:Copying training dataset
2023-12-14 15:15:10,537:INFO:Defining folds
2023-12-14 15:15:10,537:INFO:Declaring metric variables
2023-12-14 15:15:10,537:INFO:Importing untrained model
2023-12-14 15:15:10,537:INFO:Declaring custom model
2023-12-14 15:15:10,538:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:15:10,538:INFO:Starting cross validation
2023-12-14 15:15:10,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:15:10,808:INFO:Calculating mean and std
2023-12-14 15:15:10,808:INFO:Creating metrics dataframe
2023-12-14 15:15:10,810:INFO:Finalizing model
2023-12-14 15:15:10,919:INFO:Uploading results into container
2023-12-14 15:15:10,920:INFO:Uploading model into container now
2023-12-14 15:15:10,920:INFO:_master_model_container: 2
2023-12-14 15:15:10,920:INFO:_display_container: 3
2023-12-14 15:15:10,920:INFO:ExtraTreesRegressor(max_depth=10, max_features='sqrt',
                    min_impurity_decrease=0.02, min_samples_leaf=3,
                    min_samples_split=7, n_estimators=140, n_jobs=-1,
                    random_state=5651)
2023-12-14 15:15:10,920:INFO:create_model() successfully completed......................................
2023-12-14 15:15:10,992:INFO:SubProcess create_model() end ==================================
2023-12-14 15:15:10,992:INFO:choose_better activated
2023-12-14 15:15:10,992:INFO:SubProcess create_model() called ==================================
2023-12-14 15:15:10,992:INFO:Initializing create_model()
2023-12-14 15:15:10,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5651), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:15:10,992:INFO:Checking exceptions
2023-12-14 15:15:10,993:INFO:Importing libraries
2023-12-14 15:15:10,993:INFO:Copying training dataset
2023-12-14 15:15:10,995:INFO:Defining folds
2023-12-14 15:15:10,995:INFO:Declaring metric variables
2023-12-14 15:15:10,996:INFO:Importing untrained model
2023-12-14 15:15:10,996:INFO:Declaring custom model
2023-12-14 15:15:10,996:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:15:10,996:INFO:Starting cross validation
2023-12-14 15:15:10,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:15:11,246:INFO:Calculating mean and std
2023-12-14 15:15:11,246:INFO:Creating metrics dataframe
2023-12-14 15:15:11,248:INFO:Finalizing model
2023-12-14 15:15:11,331:INFO:Uploading results into container
2023-12-14 15:15:11,331:INFO:Uploading model into container now
2023-12-14 15:15:11,331:INFO:_master_model_container: 3
2023-12-14 15:15:11,331:INFO:_display_container: 4
2023-12-14 15:15:11,332:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:11,332:INFO:create_model() successfully completed......................................
2023-12-14 15:15:11,395:INFO:SubProcess create_model() end ==================================
2023-12-14 15:15:11,395:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5651) result for R2 is 0.7727
2023-12-14 15:15:11,396:INFO:ExtraTreesRegressor(max_depth=10, max_features='sqrt',
                    min_impurity_decrease=0.02, min_samples_leaf=3,
                    min_samples_split=7, n_estimators=140, n_jobs=-1,
                    random_state=5651) result for R2 is 0.727
2023-12-14 15:15:11,396:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5651) is best model
2023-12-14 15:15:11,396:INFO:choose_better completed
2023-12-14 15:15:11,397:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:15:11,403:INFO:_master_model_container: 3
2023-12-14 15:15:11,403:INFO:_display_container: 3
2023-12-14 15:15:11,404:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:11,404:INFO:tune_model() successfully completed......................................
2023-12-14 15:15:11,482:INFO:Initializing finalize_model()
2023-12-14 15:15:11,482:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5651), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:15:11,482:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:11,484:INFO:Initializing create_model()
2023-12-14 15:15:11,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5651), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:15:11,484:INFO:Checking exceptions
2023-12-14 15:15:11,485:INFO:Importing libraries
2023-12-14 15:15:11,485:INFO:Copying training dataset
2023-12-14 15:15:11,485:INFO:Defining folds
2023-12-14 15:15:11,485:INFO:Declaring metric variables
2023-12-14 15:15:11,485:INFO:Importing untrained model
2023-12-14 15:15:11,485:INFO:Declaring custom model
2023-12-14 15:15:11,486:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:15:11,486:INFO:Cross validation set to False
2023-12-14 15:15:11,486:INFO:Fitting Model
2023-12-14 15:15:11,572:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5651))])
2023-12-14 15:15:11,572:INFO:create_model() successfully completed......................................
2023-12-14 15:15:11,638:INFO:_master_model_container: 3
2023-12-14 15:15:11,638:INFO:_display_container: 3
2023-12-14 15:15:11,642:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5651))])
2023-12-14 15:15:11,642:INFO:finalize_model() successfully completed......................................
2023-12-14 15:15:11,708:INFO:Initializing create_model()
2023-12-14 15:15:11,709:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:15:11,709:INFO:Checking exceptions
2023-12-14 15:15:11,710:INFO:Importing libraries
2023-12-14 15:15:11,710:INFO:Copying training dataset
2023-12-14 15:15:11,712:INFO:Defining folds
2023-12-14 15:15:11,712:INFO:Declaring metric variables
2023-12-14 15:15:11,712:INFO:Importing untrained model
2023-12-14 15:15:11,713:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:15:11,713:INFO:Starting cross validation
2023-12-14 15:15:11,713:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:15:12,029:INFO:Calculating mean and std
2023-12-14 15:15:12,030:INFO:Creating metrics dataframe
2023-12-14 15:15:12,031:INFO:Finalizing model
2023-12-14 15:15:12,148:INFO:Uploading results into container
2023-12-14 15:15:12,149:INFO:Uploading model into container now
2023-12-14 15:15:12,155:INFO:_master_model_container: 4
2023-12-14 15:15:12,155:INFO:_display_container: 4
2023-12-14 15:15:12,155:INFO:RandomForestRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:12,155:INFO:create_model() successfully completed......................................
2023-12-14 15:15:12,231:INFO:Initializing tune_model()
2023-12-14 15:15:12,231:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5651), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:15:12,231:INFO:Checking exceptions
2023-12-14 15:15:12,234:INFO:Copying training dataset
2023-12-14 15:15:12,235:INFO:Checking base model
2023-12-14 15:15:12,235:INFO:Base model : Random Forest Regressor
2023-12-14 15:15:12,235:INFO:Declaring metric variables
2023-12-14 15:15:12,235:INFO:Defining Hyperparameters
2023-12-14 15:15:12,309:INFO:Tuning with n_jobs=-1
2023-12-14 15:15:12,309:INFO:Initializing RandomizedSearchCV
2023-12-14 15:15:17,092:INFO:best_params: {'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:15:17,092:INFO:Hyperparameter search completed
2023-12-14 15:15:17,092:INFO:SubProcess create_model() called ==================================
2023-12-14 15:15:17,092:INFO:Initializing create_model()
2023-12-14 15:15:17,093:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5651), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002608E267B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 140, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.02, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:15:17,093:INFO:Checking exceptions
2023-12-14 15:15:17,093:INFO:Importing libraries
2023-12-14 15:15:17,093:INFO:Copying training dataset
2023-12-14 15:15:17,095:INFO:Defining folds
2023-12-14 15:15:17,095:INFO:Declaring metric variables
2023-12-14 15:15:17,095:INFO:Importing untrained model
2023-12-14 15:15:17,095:INFO:Declaring custom model
2023-12-14 15:15:17,096:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:15:17,096:INFO:Starting cross validation
2023-12-14 15:15:17,096:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:15:17,374:INFO:Calculating mean and std
2023-12-14 15:15:17,374:INFO:Creating metrics dataframe
2023-12-14 15:15:17,376:INFO:Finalizing model
2023-12-14 15:15:17,487:INFO:Uploading results into container
2023-12-14 15:15:17,487:INFO:Uploading model into container now
2023-12-14 15:15:17,487:INFO:_master_model_container: 5
2023-12-14 15:15:17,487:INFO:_display_container: 5
2023-12-14 15:15:17,488:INFO:RandomForestRegressor(bootstrap=False, max_depth=10, max_features='sqrt',
                      min_impurity_decrease=0.02, min_samples_leaf=3,
                      min_samples_split=7, n_estimators=140, n_jobs=-1,
                      random_state=5651)
2023-12-14 15:15:17,488:INFO:create_model() successfully completed......................................
2023-12-14 15:15:17,559:INFO:SubProcess create_model() end ==================================
2023-12-14 15:15:17,559:INFO:choose_better activated
2023-12-14 15:15:17,559:INFO:SubProcess create_model() called ==================================
2023-12-14 15:15:17,559:INFO:Initializing create_model()
2023-12-14 15:15:17,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5651), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:15:17,559:INFO:Checking exceptions
2023-12-14 15:15:17,560:INFO:Importing libraries
2023-12-14 15:15:17,560:INFO:Copying training dataset
2023-12-14 15:15:17,562:INFO:Defining folds
2023-12-14 15:15:17,562:INFO:Declaring metric variables
2023-12-14 15:15:17,563:INFO:Importing untrained model
2023-12-14 15:15:17,563:INFO:Declaring custom model
2023-12-14 15:15:17,563:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:15:17,563:INFO:Starting cross validation
2023-12-14 15:15:17,564:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:15:17,879:INFO:Calculating mean and std
2023-12-14 15:15:17,879:INFO:Creating metrics dataframe
2023-12-14 15:15:17,880:INFO:Finalizing model
2023-12-14 15:15:17,995:INFO:Uploading results into container
2023-12-14 15:15:17,995:INFO:Uploading model into container now
2023-12-14 15:15:17,996:INFO:_master_model_container: 6
2023-12-14 15:15:17,996:INFO:_display_container: 6
2023-12-14 15:15:17,996:INFO:RandomForestRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:17,996:INFO:create_model() successfully completed......................................
2023-12-14 15:15:18,065:INFO:SubProcess create_model() end ==================================
2023-12-14 15:15:18,066:INFO:RandomForestRegressor(n_jobs=-1, random_state=5651) result for R2 is 0.7787
2023-12-14 15:15:18,066:INFO:RandomForestRegressor(bootstrap=False, max_depth=10, max_features='sqrt',
                      min_impurity_decrease=0.02, min_samples_leaf=3,
                      min_samples_split=7, n_estimators=140, n_jobs=-1,
                      random_state=5651) result for R2 is 0.778
2023-12-14 15:15:18,066:INFO:RandomForestRegressor(n_jobs=-1, random_state=5651) is best model
2023-12-14 15:15:18,066:INFO:choose_better completed
2023-12-14 15:15:18,067:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:15:18,074:INFO:_master_model_container: 6
2023-12-14 15:15:18,074:INFO:_display_container: 5
2023-12-14 15:15:18,074:INFO:RandomForestRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:18,074:INFO:tune_model() successfully completed......................................
2023-12-14 15:15:18,151:INFO:Initializing finalize_model()
2023-12-14 15:15:18,151:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5651), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:15:18,151:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=5651)
2023-12-14 15:15:18,153:INFO:Initializing create_model()
2023-12-14 15:15:18,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5651), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:15:18,153:INFO:Checking exceptions
2023-12-14 15:15:18,154:INFO:Importing libraries
2023-12-14 15:15:18,154:INFO:Copying training dataset
2023-12-14 15:15:18,154:INFO:Defining folds
2023-12-14 15:15:18,154:INFO:Declaring metric variables
2023-12-14 15:15:18,154:INFO:Importing untrained model
2023-12-14 15:15:18,154:INFO:Declaring custom model
2023-12-14 15:15:18,155:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:15:18,155:INFO:Cross validation set to False
2023-12-14 15:15:18,155:INFO:Fitting Model
2023-12-14 15:15:18,274:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5651))])
2023-12-14 15:15:18,274:INFO:create_model() successfully completed......................................
2023-12-14 15:15:18,345:INFO:_master_model_container: 6
2023-12-14 15:15:18,345:INFO:_display_container: 5
2023-12-14 15:15:18,349:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5651))])
2023-12-14 15:15:18,349:INFO:finalize_model() successfully completed......................................
2023-12-14 15:15:46,244:INFO:Initializing predict_model()
2023-12-14 15:15:46,244:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5651))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002608E704400>)
2023-12-14 15:15:46,244:INFO:Checking exceptions
2023-12-14 15:15:46,244:INFO:Preloading libraries
2023-12-14 15:15:46,245:INFO:Set up data.
2023-12-14 15:15:46,247:INFO:Set up index.
2023-12-14 15:15:46,344:INFO:Initializing predict_model()
2023-12-14 15:15:46,344:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000260E570D7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5651))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000260E58513A0>)
2023-12-14 15:15:46,345:INFO:Checking exceptions
2023-12-14 15:15:46,345:INFO:Preloading libraries
2023-12-14 15:15:46,345:INFO:Set up data.
2023-12-14 15:15:46,347:INFO:Set up index.
2023-12-14 15:16:25,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:16:25,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:16:25,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:16:25,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:16:25,872:INFO:PyCaret RegressionExperiment
2023-12-14 15:16:25,872:INFO:Logging name: reg-default-name
2023-12-14 15:16:25,872:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:16:25,872:INFO:version 3.2.0
2023-12-14 15:16:25,873:INFO:Initializing setup()
2023-12-14 15:16:25,873:INFO:self.USI: e937
2023-12-14 15:16:25,873:INFO:self._variable_keys: {'y_test', 'html_param', 'y_train', 'USI', 'X_test', 'y', '_ml_usecase', 'memory', 'data', 'n_jobs_param', 'seed', 'idx', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', 'gpu_param', '_available_plots', 'exp_name_log', 'log_plots_param', 'exp_id', 'X_train', 'target_param', 'fold_shuffle_param', 'fold_generator', 'fold_groups_param', 'logging_param'}
2023-12-14 15:16:25,873:INFO:Checking environment
2023-12-14 15:16:25,873:INFO:python_version: 3.11.0
2023-12-14 15:16:25,873:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:16:25,873:INFO:machine: AMD64
2023-12-14 15:16:25,884:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:16:25,889:INFO:Memory: svmem(total=14877257728, available=3068661760, percent=79.4, used=11808595968, free=3068661760)
2023-12-14 15:16:25,891:INFO:Physical Core: 8
2023-12-14 15:16:25,891:INFO:Logical Core: 16
2023-12-14 15:16:25,891:INFO:Checking libraries
2023-12-14 15:16:25,891:INFO:System:
2023-12-14 15:16:25,891:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:16:25,891:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:16:25,891:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:16:25,891:INFO:PyCaret required dependencies:
2023-12-14 15:16:25,909:INFO:                 pip: 22.3
2023-12-14 15:16:25,909:INFO:          setuptools: 65.5.0
2023-12-14 15:16:25,910:INFO:             pycaret: 3.2.0
2023-12-14 15:16:25,910:INFO:             IPython: 8.18.1
2023-12-14 15:16:25,910:INFO:          ipywidgets: 8.1.1
2023-12-14 15:16:25,910:INFO:                tqdm: 4.66.1
2023-12-14 15:16:25,910:INFO:               numpy: 1.25.2
2023-12-14 15:16:25,910:INFO:              pandas: 1.5.3
2023-12-14 15:16:25,910:INFO:              jinja2: 3.1.2
2023-12-14 15:16:25,910:INFO:               scipy: 1.10.1
2023-12-14 15:16:25,910:INFO:              joblib: 1.3.2
2023-12-14 15:16:25,910:INFO:             sklearn: 1.2.2
2023-12-14 15:16:25,910:INFO:                pyod: 1.1.2
2023-12-14 15:16:25,910:INFO:            imblearn: 0.11.0
2023-12-14 15:16:25,910:INFO:   category_encoders: 2.6.3
2023-12-14 15:16:25,910:INFO:            lightgbm: 4.1.0
2023-12-14 15:16:25,910:INFO:               numba: 0.58.1
2023-12-14 15:16:25,910:INFO:            requests: 2.31.0
2023-12-14 15:16:25,910:INFO:          matplotlib: 3.6.0
2023-12-14 15:16:25,910:INFO:          scikitplot: 0.3.7
2023-12-14 15:16:25,910:INFO:         yellowbrick: 1.5
2023-12-14 15:16:25,910:INFO:              plotly: 5.18.0
2023-12-14 15:16:25,910:INFO:    plotly-resampler: Not installed
2023-12-14 15:16:25,910:INFO:             kaleido: 0.2.1
2023-12-14 15:16:25,910:INFO:           schemdraw: 0.15
2023-12-14 15:16:25,910:INFO:         statsmodels: 0.14.0
2023-12-14 15:16:25,910:INFO:              sktime: 0.21.1
2023-12-14 15:16:25,910:INFO:               tbats: 1.1.3
2023-12-14 15:16:25,910:INFO:            pmdarima: 2.0.4
2023-12-14 15:16:25,910:INFO:              psutil: 5.9.6
2023-12-14 15:16:25,910:INFO:          markupsafe: 2.1.3
2023-12-14 15:16:25,910:INFO:             pickle5: Not installed
2023-12-14 15:16:25,910:INFO:         cloudpickle: 3.0.0
2023-12-14 15:16:25,910:INFO:         deprecation: 2.1.0
2023-12-14 15:16:25,910:INFO:              xxhash: 3.4.1
2023-12-14 15:16:25,910:INFO:           wurlitzer: Not installed
2023-12-14 15:16:25,911:INFO:PyCaret optional dependencies:
2023-12-14 15:16:25,923:INFO:                shap: Not installed
2023-12-14 15:16:25,923:INFO:           interpret: Not installed
2023-12-14 15:16:25,923:INFO:                umap: Not installed
2023-12-14 15:16:25,923:INFO:     ydata_profiling: Not installed
2023-12-14 15:16:25,923:INFO:  explainerdashboard: Not installed
2023-12-14 15:16:25,923:INFO:             autoviz: Not installed
2023-12-14 15:16:25,923:INFO:           fairlearn: Not installed
2023-12-14 15:16:25,924:INFO:          deepchecks: Not installed
2023-12-14 15:16:25,924:INFO:             xgboost: Not installed
2023-12-14 15:16:25,924:INFO:            catboost: Not installed
2023-12-14 15:16:25,924:INFO:              kmodes: Not installed
2023-12-14 15:16:25,924:INFO:             mlxtend: Not installed
2023-12-14 15:16:25,924:INFO:       statsforecast: Not installed
2023-12-14 15:16:25,924:INFO:        tune_sklearn: Not installed
2023-12-14 15:16:25,924:INFO:                 ray: Not installed
2023-12-14 15:16:25,924:INFO:            hyperopt: Not installed
2023-12-14 15:16:25,924:INFO:              optuna: Not installed
2023-12-14 15:16:25,924:INFO:               skopt: Not installed
2023-12-14 15:16:25,924:INFO:              mlflow: Not installed
2023-12-14 15:16:25,924:INFO:              gradio: Not installed
2023-12-14 15:16:25,924:INFO:             fastapi: Not installed
2023-12-14 15:16:25,924:INFO:             uvicorn: Not installed
2023-12-14 15:16:25,924:INFO:              m2cgen: Not installed
2023-12-14 15:16:25,924:INFO:           evidently: Not installed
2023-12-14 15:16:25,924:INFO:               fugue: Not installed
2023-12-14 15:16:25,924:INFO:           streamlit: Not installed
2023-12-14 15:16:25,924:INFO:             prophet: Not installed
2023-12-14 15:16:25,924:INFO:None
2023-12-14 15:16:25,924:INFO:Set up data.
2023-12-14 15:16:25,929:INFO:Set up folding strategy.
2023-12-14 15:16:25,929:INFO:Set up train/test split.
2023-12-14 15:16:25,931:INFO:Set up index.
2023-12-14 15:16:25,931:INFO:Assigning column types.
2023-12-14 15:16:25,934:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:16:25,934:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:16:25,938:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:16:25,941:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:16:25,988:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,056:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,061:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,065:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,124:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,162:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:16:26,166:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,170:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,218:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,254:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,259:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,263:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,351:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:16:26,361:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,453:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,461:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,511:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,548:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,549:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:16:26,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,686:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,721:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:16:26,776:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:16:26,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:26,913:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:16:27,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,089:INFO:Preparing preprocessing pipeline...
2023-12-14 15:16:27,089:INFO:Set up simple imputation.
2023-12-14 15:16:27,089:INFO:Set up column name cleaning.
2023-12-14 15:16:27,104:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:16:27,108:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:16:27,108:INFO:Creating final display dataframe.
2023-12-14 15:16:27,164:INFO:Setup _display_container:                     Description             Value
0                    Session id              1973
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              e937
2023-12-14 15:16:27,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:16:27,351:INFO:setup() successfully completed in 1.48s...............
2023-12-14 15:16:27,356:INFO:Initializing create_model()
2023-12-14 15:16:27,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:16:27,356:INFO:Checking exceptions
2023-12-14 15:16:27,358:INFO:Importing libraries
2023-12-14 15:16:27,358:INFO:Copying training dataset
2023-12-14 15:16:27,360:INFO:Defining folds
2023-12-14 15:16:27,360:INFO:Declaring metric variables
2023-12-14 15:16:27,361:INFO:Importing untrained model
2023-12-14 15:16:27,361:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:16:27,361:INFO:Starting cross validation
2023-12-14 15:16:27,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:16:31,294:INFO:Calculating mean and std
2023-12-14 15:16:31,295:INFO:Creating metrics dataframe
2023-12-14 15:16:31,297:INFO:Finalizing model
2023-12-14 15:16:31,407:INFO:Uploading results into container
2023-12-14 15:16:31,407:INFO:Uploading model into container now
2023-12-14 15:16:31,414:INFO:_master_model_container: 1
2023-12-14 15:16:31,414:INFO:_display_container: 2
2023-12-14 15:16:31,414:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:31,414:INFO:create_model() successfully completed......................................
2023-12-14 15:16:31,490:INFO:Initializing tune_model()
2023-12-14 15:16:31,490:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1973), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:16:31,490:INFO:Checking exceptions
2023-12-14 15:16:31,492:INFO:Copying training dataset
2023-12-14 15:16:31,493:INFO:Checking base model
2023-12-14 15:16:31,494:INFO:Base model : Extra Trees Regressor
2023-12-14 15:16:31,494:INFO:Declaring metric variables
2023-12-14 15:16:31,494:INFO:Defining Hyperparameters
2023-12-14 15:16:31,568:INFO:Tuning with n_jobs=-1
2023-12-14 15:16:31,568:INFO:Initializing RandomizedSearchCV
2023-12-14 15:16:35,920:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-14 15:16:35,921:INFO:Hyperparameter search completed
2023-12-14 15:16:35,921:INFO:SubProcess create_model() called ==================================
2023-12-14 15:16:35,921:INFO:Initializing create_model()
2023-12-14 15:16:35,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1973), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0DEB2B590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0002, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-14 15:16:35,921:INFO:Checking exceptions
2023-12-14 15:16:35,921:INFO:Importing libraries
2023-12-14 15:16:35,921:INFO:Copying training dataset
2023-12-14 15:16:35,924:INFO:Defining folds
2023-12-14 15:16:35,924:INFO:Declaring metric variables
2023-12-14 15:16:35,924:INFO:Importing untrained model
2023-12-14 15:16:35,924:INFO:Declaring custom model
2023-12-14 15:16:35,925:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:16:35,925:INFO:Starting cross validation
2023-12-14 15:16:35,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:16:36,079:INFO:Calculating mean and std
2023-12-14 15:16:36,080:INFO:Creating metrics dataframe
2023-12-14 15:16:36,081:INFO:Finalizing model
2023-12-14 15:16:36,133:INFO:Uploading results into container
2023-12-14 15:16:36,133:INFO:Uploading model into container now
2023-12-14 15:16:36,134:INFO:_master_model_container: 2
2023-12-14 15:16:36,134:INFO:_display_container: 3
2023-12-14 15:16:36,134:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.0002,
                    min_samples_leaf=3, min_samples_split=7, n_estimators=40,
                    n_jobs=-1, random_state=1973)
2023-12-14 15:16:36,134:INFO:create_model() successfully completed......................................
2023-12-14 15:16:36,206:INFO:SubProcess create_model() end ==================================
2023-12-14 15:16:36,207:INFO:choose_better activated
2023-12-14 15:16:36,207:INFO:SubProcess create_model() called ==================================
2023-12-14 15:16:36,207:INFO:Initializing create_model()
2023-12-14 15:16:36,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1973), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:16:36,207:INFO:Checking exceptions
2023-12-14 15:16:36,208:INFO:Importing libraries
2023-12-14 15:16:36,208:INFO:Copying training dataset
2023-12-14 15:16:36,210:INFO:Defining folds
2023-12-14 15:16:36,210:INFO:Declaring metric variables
2023-12-14 15:16:36,210:INFO:Importing untrained model
2023-12-14 15:16:36,210:INFO:Declaring custom model
2023-12-14 15:16:36,210:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:16:36,211:INFO:Starting cross validation
2023-12-14 15:16:36,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:16:36,453:INFO:Calculating mean and std
2023-12-14 15:16:36,454:INFO:Creating metrics dataframe
2023-12-14 15:16:36,455:INFO:Finalizing model
2023-12-14 15:16:36,538:INFO:Uploading results into container
2023-12-14 15:16:36,538:INFO:Uploading model into container now
2023-12-14 15:16:36,538:INFO:_master_model_container: 3
2023-12-14 15:16:36,538:INFO:_display_container: 4
2023-12-14 15:16:36,539:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:36,539:INFO:create_model() successfully completed......................................
2023-12-14 15:16:36,607:INFO:SubProcess create_model() end ==================================
2023-12-14 15:16:36,608:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1973) result for R2 is 0.7448
2023-12-14 15:16:36,608:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.0002,
                    min_samples_leaf=3, min_samples_split=7, n_estimators=40,
                    n_jobs=-1, random_state=1973) result for R2 is 0.7114
2023-12-14 15:16:36,608:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1973) is best model
2023-12-14 15:16:36,609:INFO:choose_better completed
2023-12-14 15:16:36,609:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:16:36,616:INFO:_master_model_container: 3
2023-12-14 15:16:36,616:INFO:_display_container: 3
2023-12-14 15:16:36,617:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:36,617:INFO:tune_model() successfully completed......................................
2023-12-14 15:16:36,696:INFO:Initializing finalize_model()
2023-12-14 15:16:36,697:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1973), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:16:36,697:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:36,699:INFO:Initializing create_model()
2023-12-14 15:16:36,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1973), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:16:36,699:INFO:Checking exceptions
2023-12-14 15:16:36,699:INFO:Importing libraries
2023-12-14 15:16:36,699:INFO:Copying training dataset
2023-12-14 15:16:36,699:INFO:Defining folds
2023-12-14 15:16:36,699:INFO:Declaring metric variables
2023-12-14 15:16:36,700:INFO:Importing untrained model
2023-12-14 15:16:36,700:INFO:Declaring custom model
2023-12-14 15:16:36,700:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:16:36,700:INFO:Cross validation set to False
2023-12-14 15:16:36,700:INFO:Fitting Model
2023-12-14 15:16:36,786:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1973))])
2023-12-14 15:16:36,786:INFO:create_model() successfully completed......................................
2023-12-14 15:16:36,854:INFO:_master_model_container: 3
2023-12-14 15:16:36,854:INFO:_display_container: 3
2023-12-14 15:16:36,858:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1973))])
2023-12-14 15:16:36,859:INFO:finalize_model() successfully completed......................................
2023-12-14 15:16:36,922:INFO:Initializing create_model()
2023-12-14 15:16:36,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:16:36,922:INFO:Checking exceptions
2023-12-14 15:16:36,923:INFO:Importing libraries
2023-12-14 15:16:36,923:INFO:Copying training dataset
2023-12-14 15:16:36,926:INFO:Defining folds
2023-12-14 15:16:36,926:INFO:Declaring metric variables
2023-12-14 15:16:36,926:INFO:Importing untrained model
2023-12-14 15:16:36,926:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:16:36,926:INFO:Starting cross validation
2023-12-14 15:16:36,927:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:16:37,254:INFO:Calculating mean and std
2023-12-14 15:16:37,254:INFO:Creating metrics dataframe
2023-12-14 15:16:37,256:INFO:Finalizing model
2023-12-14 15:16:37,373:INFO:Uploading results into container
2023-12-14 15:16:37,373:INFO:Uploading model into container now
2023-12-14 15:16:37,380:INFO:_master_model_container: 4
2023-12-14 15:16:37,380:INFO:_display_container: 4
2023-12-14 15:16:37,380:INFO:RandomForestRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:37,380:INFO:create_model() successfully completed......................................
2023-12-14 15:16:37,459:INFO:Initializing tune_model()
2023-12-14 15:16:37,459:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1973), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:16:37,459:INFO:Checking exceptions
2023-12-14 15:16:37,461:INFO:Copying training dataset
2023-12-14 15:16:37,462:INFO:Checking base model
2023-12-14 15:16:37,462:INFO:Base model : Random Forest Regressor
2023-12-14 15:16:37,463:INFO:Declaring metric variables
2023-12-14 15:16:37,463:INFO:Defining Hyperparameters
2023-12-14 15:16:37,538:INFO:Tuning with n_jobs=-1
2023-12-14 15:16:37,538:INFO:Initializing RandomizedSearchCV
2023-12-14 15:16:40,198:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-14 15:16:40,198:INFO:Hyperparameter search completed
2023-12-14 15:16:40,198:INFO:SubProcess create_model() called ==================================
2023-12-14 15:16:40,199:INFO:Initializing create_model()
2023-12-14 15:16:40,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1973), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0DEC4F790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0002, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-14 15:16:40,199:INFO:Checking exceptions
2023-12-14 15:16:40,199:INFO:Importing libraries
2023-12-14 15:16:40,199:INFO:Copying training dataset
2023-12-14 15:16:40,201:INFO:Defining folds
2023-12-14 15:16:40,201:INFO:Declaring metric variables
2023-12-14 15:16:40,201:INFO:Importing untrained model
2023-12-14 15:16:40,201:INFO:Declaring custom model
2023-12-14 15:16:40,202:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:16:40,202:INFO:Starting cross validation
2023-12-14 15:16:40,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:16:40,378:INFO:Calculating mean and std
2023-12-14 15:16:40,378:INFO:Creating metrics dataframe
2023-12-14 15:16:40,380:INFO:Finalizing model
2023-12-14 15:16:40,430:INFO:Uploading results into container
2023-12-14 15:16:40,430:INFO:Uploading model into container now
2023-12-14 15:16:40,430:INFO:_master_model_container: 5
2023-12-14 15:16:40,430:INFO:_display_container: 5
2023-12-14 15:16:40,431:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.0002,
                      min_samples_leaf=3, min_samples_split=7, n_estimators=40,
                      n_jobs=-1, random_state=1973)
2023-12-14 15:16:40,431:INFO:create_model() successfully completed......................................
2023-12-14 15:16:40,502:INFO:SubProcess create_model() end ==================================
2023-12-14 15:16:40,503:INFO:choose_better activated
2023-12-14 15:16:40,503:INFO:SubProcess create_model() called ==================================
2023-12-14 15:16:40,503:INFO:Initializing create_model()
2023-12-14 15:16:40,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1973), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:16:40,503:INFO:Checking exceptions
2023-12-14 15:16:40,504:INFO:Importing libraries
2023-12-14 15:16:40,504:INFO:Copying training dataset
2023-12-14 15:16:40,506:INFO:Defining folds
2023-12-14 15:16:40,506:INFO:Declaring metric variables
2023-12-14 15:16:40,506:INFO:Importing untrained model
2023-12-14 15:16:40,506:INFO:Declaring custom model
2023-12-14 15:16:40,507:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:16:40,507:INFO:Starting cross validation
2023-12-14 15:16:40,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:16:40,830:INFO:Calculating mean and std
2023-12-14 15:16:40,830:INFO:Creating metrics dataframe
2023-12-14 15:16:40,832:INFO:Finalizing model
2023-12-14 15:16:40,939:INFO:Uploading results into container
2023-12-14 15:16:40,939:INFO:Uploading model into container now
2023-12-14 15:16:40,939:INFO:_master_model_container: 6
2023-12-14 15:16:40,939:INFO:_display_container: 6
2023-12-14 15:16:40,940:INFO:RandomForestRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:40,940:INFO:create_model() successfully completed......................................
2023-12-14 15:16:41,005:INFO:SubProcess create_model() end ==================================
2023-12-14 15:16:41,006:INFO:RandomForestRegressor(n_jobs=-1, random_state=1973) result for R2 is 0.7669
2023-12-14 15:16:41,006:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.0002,
                      min_samples_leaf=3, min_samples_split=7, n_estimators=40,
                      n_jobs=-1, random_state=1973) result for R2 is 0.7372
2023-12-14 15:16:41,006:INFO:RandomForestRegressor(n_jobs=-1, random_state=1973) is best model
2023-12-14 15:16:41,006:INFO:choose_better completed
2023-12-14 15:16:41,008:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:16:41,015:INFO:_master_model_container: 6
2023-12-14 15:16:41,015:INFO:_display_container: 5
2023-12-14 15:16:41,016:INFO:RandomForestRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:41,016:INFO:tune_model() successfully completed......................................
2023-12-14 15:16:41,094:INFO:Initializing finalize_model()
2023-12-14 15:16:41,094:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1973), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:16:41,094:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=1973)
2023-12-14 15:16:41,096:INFO:Initializing create_model()
2023-12-14 15:16:41,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1973), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:16:41,096:INFO:Checking exceptions
2023-12-14 15:16:41,096:INFO:Importing libraries
2023-12-14 15:16:41,096:INFO:Copying training dataset
2023-12-14 15:16:41,096:INFO:Defining folds
2023-12-14 15:16:41,097:INFO:Declaring metric variables
2023-12-14 15:16:41,097:INFO:Importing untrained model
2023-12-14 15:16:41,097:INFO:Declaring custom model
2023-12-14 15:16:41,097:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:16:41,097:INFO:Cross validation set to False
2023-12-14 15:16:41,098:INFO:Fitting Model
2023-12-14 15:16:41,215:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1973))])
2023-12-14 15:16:41,216:INFO:create_model() successfully completed......................................
2023-12-14 15:16:41,285:INFO:_master_model_container: 6
2023-12-14 15:16:41,285:INFO:_display_container: 5
2023-12-14 15:16:41,289:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1973))])
2023-12-14 15:16:41,289:INFO:finalize_model() successfully completed......................................
2023-12-14 15:16:43,119:INFO:Initializing predict_model()
2023-12-14 15:16:43,119:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1973))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0E04499E0>)
2023-12-14 15:16:43,119:INFO:Checking exceptions
2023-12-14 15:16:43,120:INFO:Preloading libraries
2023-12-14 15:16:43,120:INFO:Set up data.
2023-12-14 15:16:43,122:INFO:Set up index.
2023-12-14 15:16:43,215:INFO:Initializing predict_model()
2023-12-14 15:16:43,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F0B8A355D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1973))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0B73CB740>)
2023-12-14 15:16:43,216:INFO:Checking exceptions
2023-12-14 15:16:43,216:INFO:Preloading libraries
2023-12-14 15:16:43,216:INFO:Set up data.
2023-12-14 15:16:43,218:INFO:Set up index.
2023-12-14 15:18:06,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:18:06,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:18:06,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:18:06,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:18:06,857:INFO:PyCaret RegressionExperiment
2023-12-14 15:18:06,857:INFO:Logging name: reg-default-name
2023-12-14 15:18:06,858:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:18:06,858:INFO:version 3.2.0
2023-12-14 15:18:06,858:INFO:Initializing setup()
2023-12-14 15:18:06,858:INFO:self.USI: 1e80
2023-12-14 15:18:06,858:INFO:self._variable_keys: {'memory', 'gpu_n_jobs_param', 'USI', 'seed', 'fold_groups_param', 'exp_id', 'log_plots_param', 'fold_shuffle_param', 'X_test', 'n_jobs_param', 'gpu_param', 'X', 'y_train', 'pipeline', 'y_test', 'logging_param', 'target_param', 'transform_target_param', '_available_plots', 'X_train', 'y', 'exp_name_log', 'html_param', '_ml_usecase', 'idx', 'data', 'fold_generator'}
2023-12-14 15:18:06,858:INFO:Checking environment
2023-12-14 15:18:06,858:INFO:python_version: 3.11.0
2023-12-14 15:18:06,858:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:18:06,858:INFO:machine: AMD64
2023-12-14 15:18:06,868:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:18:06,873:INFO:Memory: svmem(total=14877257728, available=3109646336, percent=79.1, used=11767611392, free=3109646336)
2023-12-14 15:18:06,873:INFO:Physical Core: 8
2023-12-14 15:18:06,873:INFO:Logical Core: 16
2023-12-14 15:18:06,873:INFO:Checking libraries
2023-12-14 15:18:06,873:INFO:System:
2023-12-14 15:18:06,873:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:18:06,873:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:18:06,873:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:18:06,873:INFO:PyCaret required dependencies:
2023-12-14 15:18:06,889:INFO:                 pip: 22.3
2023-12-14 15:18:06,889:INFO:          setuptools: 65.5.0
2023-12-14 15:18:06,889:INFO:             pycaret: 3.2.0
2023-12-14 15:18:06,889:INFO:             IPython: 8.18.1
2023-12-14 15:18:06,889:INFO:          ipywidgets: 8.1.1
2023-12-14 15:18:06,889:INFO:                tqdm: 4.66.1
2023-12-14 15:18:06,889:INFO:               numpy: 1.25.2
2023-12-14 15:18:06,889:INFO:              pandas: 1.5.3
2023-12-14 15:18:06,889:INFO:              jinja2: 3.1.2
2023-12-14 15:18:06,889:INFO:               scipy: 1.10.1
2023-12-14 15:18:06,889:INFO:              joblib: 1.3.2
2023-12-14 15:18:06,890:INFO:             sklearn: 1.2.2
2023-12-14 15:18:06,890:INFO:                pyod: 1.1.2
2023-12-14 15:18:06,890:INFO:            imblearn: 0.11.0
2023-12-14 15:18:06,890:INFO:   category_encoders: 2.6.3
2023-12-14 15:18:06,890:INFO:            lightgbm: 4.1.0
2023-12-14 15:18:06,890:INFO:               numba: 0.58.1
2023-12-14 15:18:06,890:INFO:            requests: 2.31.0
2023-12-14 15:18:06,890:INFO:          matplotlib: 3.6.0
2023-12-14 15:18:06,890:INFO:          scikitplot: 0.3.7
2023-12-14 15:18:06,890:INFO:         yellowbrick: 1.5
2023-12-14 15:18:06,890:INFO:              plotly: 5.18.0
2023-12-14 15:18:06,890:INFO:    plotly-resampler: Not installed
2023-12-14 15:18:06,890:INFO:             kaleido: 0.2.1
2023-12-14 15:18:06,890:INFO:           schemdraw: 0.15
2023-12-14 15:18:06,890:INFO:         statsmodels: 0.14.0
2023-12-14 15:18:06,890:INFO:              sktime: 0.21.1
2023-12-14 15:18:06,890:INFO:               tbats: 1.1.3
2023-12-14 15:18:06,890:INFO:            pmdarima: 2.0.4
2023-12-14 15:18:06,890:INFO:              psutil: 5.9.6
2023-12-14 15:18:06,890:INFO:          markupsafe: 2.1.3
2023-12-14 15:18:06,890:INFO:             pickle5: Not installed
2023-12-14 15:18:06,890:INFO:         cloudpickle: 3.0.0
2023-12-14 15:18:06,890:INFO:         deprecation: 2.1.0
2023-12-14 15:18:06,890:INFO:              xxhash: 3.4.1
2023-12-14 15:18:06,890:INFO:           wurlitzer: Not installed
2023-12-14 15:18:06,890:INFO:PyCaret optional dependencies:
2023-12-14 15:18:06,902:INFO:                shap: Not installed
2023-12-14 15:18:06,902:INFO:           interpret: Not installed
2023-12-14 15:18:06,902:INFO:                umap: Not installed
2023-12-14 15:18:06,902:INFO:     ydata_profiling: Not installed
2023-12-14 15:18:06,902:INFO:  explainerdashboard: Not installed
2023-12-14 15:18:06,902:INFO:             autoviz: Not installed
2023-12-14 15:18:06,902:INFO:           fairlearn: Not installed
2023-12-14 15:18:06,902:INFO:          deepchecks: Not installed
2023-12-14 15:18:06,902:INFO:             xgboost: Not installed
2023-12-14 15:18:06,903:INFO:            catboost: Not installed
2023-12-14 15:18:06,903:INFO:              kmodes: Not installed
2023-12-14 15:18:06,903:INFO:             mlxtend: Not installed
2023-12-14 15:18:06,903:INFO:       statsforecast: Not installed
2023-12-14 15:18:06,903:INFO:        tune_sklearn: Not installed
2023-12-14 15:18:06,903:INFO:                 ray: Not installed
2023-12-14 15:18:06,903:INFO:            hyperopt: Not installed
2023-12-14 15:18:06,903:INFO:              optuna: Not installed
2023-12-14 15:18:06,903:INFO:               skopt: Not installed
2023-12-14 15:18:06,903:INFO:              mlflow: Not installed
2023-12-14 15:18:06,903:INFO:              gradio: Not installed
2023-12-14 15:18:06,903:INFO:             fastapi: Not installed
2023-12-14 15:18:06,903:INFO:             uvicorn: Not installed
2023-12-14 15:18:06,903:INFO:              m2cgen: Not installed
2023-12-14 15:18:06,903:INFO:           evidently: Not installed
2023-12-14 15:18:06,903:INFO:               fugue: Not installed
2023-12-14 15:18:06,903:INFO:           streamlit: Not installed
2023-12-14 15:18:06,903:INFO:             prophet: Not installed
2023-12-14 15:18:06,903:INFO:None
2023-12-14 15:18:06,903:INFO:Set up data.
2023-12-14 15:18:06,907:INFO:Set up folding strategy.
2023-12-14 15:18:06,907:INFO:Set up train/test split.
2023-12-14 15:18:06,910:INFO:Set up index.
2023-12-14 15:18:06,910:INFO:Assigning column types.
2023-12-14 15:18:06,912:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:18:06,912:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:18:06,915:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:18:06,919:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:18:06,960:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,002:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,006:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,010:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,055:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,093:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:18:07,096:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,100:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,142:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,179:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,184:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,270:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:18:07,277:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,319:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,362:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,371:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,466:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:18:07,520:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,644:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,645:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:18:07,695:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:18:07,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,819:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:18:07,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:07,992:INFO:Preparing preprocessing pipeline...
2023-12-14 15:18:07,992:INFO:Set up simple imputation.
2023-12-14 15:18:07,992:INFO:Set up column name cleaning.
2023-12-14 15:18:08,008:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:18:08,012:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:18:08,012:INFO:Creating final display dataframe.
2023-12-14 15:18:08,059:INFO:Setup _display_container:                     Description             Value
0                    Session id              5709
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1e80
2023-12-14 15:18:08,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:08,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:08,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:08,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:18:08,239:INFO:setup() successfully completed in 1.38s...............
2023-12-14 15:18:08,244:INFO:Initializing create_model()
2023-12-14 15:18:08,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:18:08,244:INFO:Checking exceptions
2023-12-14 15:18:08,246:INFO:Importing libraries
2023-12-14 15:18:08,246:INFO:Copying training dataset
2023-12-14 15:18:08,248:INFO:Defining folds
2023-12-14 15:18:08,248:INFO:Declaring metric variables
2023-12-14 15:18:08,248:INFO:Importing untrained model
2023-12-14 15:18:08,248:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:18:08,248:INFO:Starting cross validation
2023-12-14 15:18:08,252:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:18:12,056:INFO:Calculating mean and std
2023-12-14 15:18:12,057:INFO:Creating metrics dataframe
2023-12-14 15:18:12,060:INFO:Finalizing model
2023-12-14 15:18:12,169:INFO:Uploading results into container
2023-12-14 15:18:12,170:INFO:Uploading model into container now
2023-12-14 15:18:12,176:INFO:_master_model_container: 1
2023-12-14 15:18:12,176:INFO:_display_container: 2
2023-12-14 15:18:12,177:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5709)
2023-12-14 15:18:12,177:INFO:create_model() successfully completed......................................
2023-12-14 15:18:12,259:INFO:Initializing tune_model()
2023-12-14 15:18:12,259:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5709), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:18:12,259:INFO:Checking exceptions
2023-12-14 15:18:12,261:INFO:Copying training dataset
2023-12-14 15:18:12,263:INFO:Checking base model
2023-12-14 15:18:12,263:INFO:Base model : Extra Trees Regressor
2023-12-14 15:18:12,263:INFO:Declaring metric variables
2023-12-14 15:18:12,263:INFO:Defining Hyperparameters
2023-12-14 15:18:12,336:INFO:Tuning with n_jobs=-1
2023-12-14 15:18:12,336:INFO:Initializing RandomizedSearchCV
2023-12-14 15:18:17,379:INFO:best_params: {'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:18:17,380:INFO:Hyperparameter search completed
2023-12-14 15:18:17,380:INFO:SubProcess create_model() called ==================================
2023-12-14 15:18:17,380:INFO:Initializing create_model()
2023-12-14 15:18:17,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5709), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AC3A18C710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 250, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 11, 'criterion': 'absolute_error', 'bootstrap': False})
2023-12-14 15:18:17,380:INFO:Checking exceptions
2023-12-14 15:18:17,380:INFO:Importing libraries
2023-12-14 15:18:17,380:INFO:Copying training dataset
2023-12-14 15:18:17,383:INFO:Defining folds
2023-12-14 15:18:17,383:INFO:Declaring metric variables
2023-12-14 15:18:17,383:INFO:Importing untrained model
2023-12-14 15:18:17,383:INFO:Declaring custom model
2023-12-14 15:18:17,384:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:18:17,384:INFO:Starting cross validation
2023-12-14 15:18:17,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:18:18,601:INFO:Calculating mean and std
2023-12-14 15:18:18,602:INFO:Creating metrics dataframe
2023-12-14 15:18:18,603:INFO:Finalizing model
2023-12-14 15:18:19,183:INFO:Uploading results into container
2023-12-14 15:18:19,183:INFO:Uploading model into container now
2023-12-14 15:18:19,184:INFO:_master_model_container: 2
2023-12-14 15:18:19,184:INFO:_display_container: 3
2023-12-14 15:18:19,184:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=11,
                    max_features='sqrt', min_impurity_decrease=0.2,
                    min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                    random_state=5709)
2023-12-14 15:18:19,184:INFO:create_model() successfully completed......................................
2023-12-14 15:18:19,263:INFO:SubProcess create_model() end ==================================
2023-12-14 15:18:19,263:INFO:choose_better activated
2023-12-14 15:18:19,263:INFO:SubProcess create_model() called ==================================
2023-12-14 15:18:19,263:INFO:Initializing create_model()
2023-12-14 15:18:19,263:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5709), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:18:19,264:INFO:Checking exceptions
2023-12-14 15:18:19,264:INFO:Importing libraries
2023-12-14 15:18:19,264:INFO:Copying training dataset
2023-12-14 15:18:19,266:INFO:Defining folds
2023-12-14 15:18:19,266:INFO:Declaring metric variables
2023-12-14 15:18:19,266:INFO:Importing untrained model
2023-12-14 15:18:19,266:INFO:Declaring custom model
2023-12-14 15:18:19,267:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:18:19,267:INFO:Starting cross validation
2023-12-14 15:18:19,267:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:18:19,563:INFO:Calculating mean and std
2023-12-14 15:18:19,563:INFO:Creating metrics dataframe
2023-12-14 15:18:19,565:INFO:Finalizing model
2023-12-14 15:18:19,647:INFO:Uploading results into container
2023-12-14 15:18:19,648:INFO:Uploading model into container now
2023-12-14 15:18:19,648:INFO:_master_model_container: 3
2023-12-14 15:18:19,648:INFO:_display_container: 4
2023-12-14 15:18:19,648:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5709)
2023-12-14 15:18:19,648:INFO:create_model() successfully completed......................................
2023-12-14 15:18:19,717:INFO:SubProcess create_model() end ==================================
2023-12-14 15:18:19,718:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5709) result for R2 is 0.7584
2023-12-14 15:18:19,718:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=11,
                    max_features='sqrt', min_impurity_decrease=0.2,
                    min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                    random_state=5709) result for R2 is 0.7428
2023-12-14 15:18:19,718:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5709) is best model
2023-12-14 15:18:19,718:INFO:choose_better completed
2023-12-14 15:18:19,719:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:18:19,725:INFO:_master_model_container: 3
2023-12-14 15:18:19,725:INFO:_display_container: 3
2023-12-14 15:18:19,726:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5709)
2023-12-14 15:18:19,726:INFO:tune_model() successfully completed......................................
2023-12-14 15:18:19,804:INFO:Initializing finalize_model()
2023-12-14 15:18:19,804:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:18:19,805:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=5709)
2023-12-14 15:18:19,806:INFO:Initializing create_model()
2023-12-14 15:18:19,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:18:19,807:INFO:Checking exceptions
2023-12-14 15:18:19,807:INFO:Importing libraries
2023-12-14 15:18:19,807:INFO:Copying training dataset
2023-12-14 15:18:19,807:INFO:Defining folds
2023-12-14 15:18:19,807:INFO:Declaring metric variables
2023-12-14 15:18:19,807:INFO:Importing untrained model
2023-12-14 15:18:19,807:INFO:Declaring custom model
2023-12-14 15:18:19,808:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:18:19,808:INFO:Cross validation set to False
2023-12-14 15:18:19,808:INFO:Fitting Model
2023-12-14 15:18:19,904:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5709))])
2023-12-14 15:18:19,905:INFO:create_model() successfully completed......................................
2023-12-14 15:18:19,974:INFO:_master_model_container: 3
2023-12-14 15:18:19,975:INFO:_display_container: 3
2023-12-14 15:18:19,978:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5709))])
2023-12-14 15:18:19,978:INFO:finalize_model() successfully completed......................................
2023-12-14 15:18:20,048:INFO:Initializing create_model()
2023-12-14 15:18:20,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:18:20,048:INFO:Checking exceptions
2023-12-14 15:18:20,049:INFO:Importing libraries
2023-12-14 15:18:20,049:INFO:Copying training dataset
2023-12-14 15:18:20,051:INFO:Defining folds
2023-12-14 15:18:20,051:INFO:Declaring metric variables
2023-12-14 15:18:20,051:INFO:Importing untrained model
2023-12-14 15:18:20,052:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:18:20,052:INFO:Starting cross validation
2023-12-14 15:18:20,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:18:20,356:INFO:Calculating mean and std
2023-12-14 15:18:20,356:INFO:Creating metrics dataframe
2023-12-14 15:18:20,357:INFO:Finalizing model
2023-12-14 15:18:20,472:INFO:Uploading results into container
2023-12-14 15:18:20,473:INFO:Uploading model into container now
2023-12-14 15:18:20,479:INFO:_master_model_container: 4
2023-12-14 15:18:20,479:INFO:_display_container: 4
2023-12-14 15:18:20,480:INFO:RandomForestRegressor(n_jobs=-1, random_state=5709)
2023-12-14 15:18:20,480:INFO:create_model() successfully completed......................................
2023-12-14 15:18:20,559:INFO:Initializing tune_model()
2023-12-14 15:18:20,559:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5709), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:18:20,559:INFO:Checking exceptions
2023-12-14 15:18:20,561:INFO:Copying training dataset
2023-12-14 15:18:20,562:INFO:Checking base model
2023-12-14 15:18:20,562:INFO:Base model : Random Forest Regressor
2023-12-14 15:18:20,563:INFO:Declaring metric variables
2023-12-14 15:18:20,563:INFO:Defining Hyperparameters
2023-12-14 15:18:20,635:INFO:Tuning with n_jobs=-1
2023-12-14 15:18:20,635:INFO:Initializing RandomizedSearchCV
2023-12-14 15:18:24,864:INFO:best_params: {'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:18:24,864:INFO:Hyperparameter search completed
2023-12-14 15:18:24,864:INFO:SubProcess create_model() called ==================================
2023-12-14 15:18:24,864:INFO:Initializing create_model()
2023-12-14 15:18:24,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5709), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AC399B2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 250, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 11, 'criterion': 'absolute_error', 'bootstrap': False})
2023-12-14 15:18:24,865:INFO:Checking exceptions
2023-12-14 15:18:24,865:INFO:Importing libraries
2023-12-14 15:18:24,865:INFO:Copying training dataset
2023-12-14 15:18:24,867:INFO:Defining folds
2023-12-14 15:18:24,867:INFO:Declaring metric variables
2023-12-14 15:18:24,867:INFO:Importing untrained model
2023-12-14 15:18:24,867:INFO:Declaring custom model
2023-12-14 15:18:24,867:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:18:24,868:INFO:Starting cross validation
2023-12-14 15:18:24,868:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:18:26,730:INFO:Calculating mean and std
2023-12-14 15:18:26,731:INFO:Creating metrics dataframe
2023-12-14 15:18:26,732:INFO:Finalizing model
2023-12-14 15:18:27,709:INFO:Uploading results into container
2023-12-14 15:18:27,709:INFO:Uploading model into container now
2023-12-14 15:18:27,710:INFO:_master_model_container: 5
2023-12-14 15:18:27,710:INFO:_display_container: 5
2023-12-14 15:18:27,710:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709)
2023-12-14 15:18:27,710:INFO:create_model() successfully completed......................................
2023-12-14 15:18:27,782:INFO:SubProcess create_model() end ==================================
2023-12-14 15:18:27,782:INFO:choose_better activated
2023-12-14 15:18:27,782:INFO:SubProcess create_model() called ==================================
2023-12-14 15:18:27,782:INFO:Initializing create_model()
2023-12-14 15:18:27,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5709), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:18:27,783:INFO:Checking exceptions
2023-12-14 15:18:27,783:INFO:Importing libraries
2023-12-14 15:18:27,783:INFO:Copying training dataset
2023-12-14 15:18:27,785:INFO:Defining folds
2023-12-14 15:18:27,785:INFO:Declaring metric variables
2023-12-14 15:18:27,786:INFO:Importing untrained model
2023-12-14 15:18:27,786:INFO:Declaring custom model
2023-12-14 15:18:27,786:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:18:27,786:INFO:Starting cross validation
2023-12-14 15:18:27,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:18:28,100:INFO:Calculating mean and std
2023-12-14 15:18:28,100:INFO:Creating metrics dataframe
2023-12-14 15:18:28,102:INFO:Finalizing model
2023-12-14 15:18:28,219:INFO:Uploading results into container
2023-12-14 15:18:28,219:INFO:Uploading model into container now
2023-12-14 15:18:28,220:INFO:_master_model_container: 6
2023-12-14 15:18:28,220:INFO:_display_container: 6
2023-12-14 15:18:28,220:INFO:RandomForestRegressor(n_jobs=-1, random_state=5709)
2023-12-14 15:18:28,220:INFO:create_model() successfully completed......................................
2023-12-14 15:18:28,289:INFO:SubProcess create_model() end ==================================
2023-12-14 15:18:28,289:INFO:RandomForestRegressor(n_jobs=-1, random_state=5709) result for R2 is 0.7678
2023-12-14 15:18:28,290:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709) result for R2 is 0.7779
2023-12-14 15:18:28,290:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709) is best model
2023-12-14 15:18:28,290:INFO:choose_better completed
2023-12-14 15:18:28,297:INFO:_master_model_container: 6
2023-12-14 15:18:28,297:INFO:_display_container: 5
2023-12-14 15:18:28,297:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709)
2023-12-14 15:18:28,297:INFO:tune_model() successfully completed......................................
2023-12-14 15:18:28,373:INFO:Initializing finalize_model()
2023-12-14 15:18:28,373:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:18:28,374:INFO:Finalizing RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709)
2023-12-14 15:18:28,375:INFO:Initializing create_model()
2023-12-14 15:18:28,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=11,
                      max_features='sqrt', min_impurity_decrease=0.2,
                      min_samples_leaf=2, n_estimators=250, n_jobs=-1,
                      random_state=5709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:18:28,376:INFO:Checking exceptions
2023-12-14 15:18:28,376:INFO:Importing libraries
2023-12-14 15:18:28,376:INFO:Copying training dataset
2023-12-14 15:18:28,377:INFO:Defining folds
2023-12-14 15:18:28,377:INFO:Declaring metric variables
2023-12-14 15:18:28,377:INFO:Importing untrained model
2023-12-14 15:18:28,377:INFO:Declaring custom model
2023-12-14 15:18:28,377:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:18:28,378:INFO:Cross validation set to False
2023-12-14 15:18:28,378:INFO:Fitting Model
2023-12-14 15:18:29,568:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False,
                                       criterion='absolute_error', max_depth=11,
                                       max_features='sqrt',
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=2, n_estimators=250,
                                       n_jobs=-1, random_state=5709))])
2023-12-14 15:18:29,568:INFO:create_model() successfully completed......................................
2023-12-14 15:18:29,637:INFO:_master_model_container: 6
2023-12-14 15:18:29,637:INFO:_display_container: 5
2023-12-14 15:18:29,641:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False,
                                       criterion='absolute_error', max_depth=11,
                                       max_features='sqrt',
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=2, n_estimators=250,
                                       n_jobs=-1, random_state=5709))])
2023-12-14 15:18:29,641:INFO:finalize_model() successfully completed......................................
2023-12-14 15:18:49,941:INFO:Initializing predict_model()
2023-12-14 15:18:49,941:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC3A250E00>)
2023-12-14 15:18:49,941:INFO:Checking exceptions
2023-12-14 15:18:49,941:INFO:Preloading libraries
2023-12-14 15:18:49,942:INFO:Set up data.
2023-12-14 15:18:49,944:INFO:Set up index.
2023-12-14 15:18:50,040:INFO:Initializing predict_model()
2023-12-14 15:18:50,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False,
                                       criterion='absolute_error', max_depth=11,
                                       max_features='sqrt',
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=2, n_estimators=250,
                                       n_jobs=-1, random_state=5709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC14A940E0>)
2023-12-14 15:18:50,040:INFO:Checking exceptions
2023-12-14 15:18:50,040:INFO:Preloading libraries
2023-12-14 15:18:50,040:INFO:Set up data.
2023-12-14 15:18:50,043:INFO:Set up index.
2023-12-14 15:20:16,714:INFO:Initializing predict_model()
2023-12-14 15:20:16,714:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC39B70900>)
2023-12-14 15:20:16,714:INFO:Checking exceptions
2023-12-14 15:20:16,714:INFO:Preloading libraries
2023-12-14 15:20:16,714:INFO:Set up data.
2023-12-14 15:20:16,716:INFO:Set up index.
2023-12-14 15:20:16,814:INFO:Initializing predict_model()
2023-12-14 15:20:16,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AC12529050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(bootstrap=False,
                                       criterion='absolute_error', max_depth=11,
                                       max_features='sqrt',
                                       min_impurity_decrease=0.2,
                                       min_samples_leaf=2, n_estimators=250,
                                       n_jobs=-1, random_state=5709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC3A250F40>)
2023-12-14 15:20:16,814:INFO:Checking exceptions
2023-12-14 15:20:16,814:INFO:Preloading libraries
2023-12-14 15:20:16,814:INFO:Set up data.
2023-12-14 15:20:16,817:INFO:Set up index.
2023-12-14 15:20:45,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:20:45,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:20:45,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:20:45,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:20:46,042:INFO:PyCaret RegressionExperiment
2023-12-14 15:20:46,042:INFO:Logging name: reg-default-name
2023-12-14 15:20:46,042:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:20:46,042:INFO:version 3.2.0
2023-12-14 15:20:46,042:INFO:Initializing setup()
2023-12-14 15:20:46,042:INFO:self.USI: 70f2
2023-12-14 15:20:46,042:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'y_train', 'X_train', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'X', 'target_param', '_ml_usecase', 'gpu_param', 'n_jobs_param', 'gpu_n_jobs_param', 'log_plots_param', 'html_param', 'idx', 'USI', 'pipeline', 'y', 'memory', 'exp_name_log', 'fold_shuffle_param', 'data', 'fold_groups_param', 'y_test', 'seed'}
2023-12-14 15:20:46,042:INFO:Checking environment
2023-12-14 15:20:46,042:INFO:python_version: 3.11.0
2023-12-14 15:20:46,042:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:20:46,043:INFO:machine: AMD64
2023-12-14 15:20:46,054:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:20:46,059:INFO:Memory: svmem(total=14877257728, available=3107893248, percent=79.1, used=11769364480, free=3107893248)
2023-12-14 15:20:46,059:INFO:Physical Core: 8
2023-12-14 15:20:46,059:INFO:Logical Core: 16
2023-12-14 15:20:46,059:INFO:Checking libraries
2023-12-14 15:20:46,059:INFO:System:
2023-12-14 15:20:46,059:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:20:46,059:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:20:46,059:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:20:46,059:INFO:PyCaret required dependencies:
2023-12-14 15:20:46,076:INFO:                 pip: 22.3
2023-12-14 15:20:46,077:INFO:          setuptools: 65.5.0
2023-12-14 15:20:46,077:INFO:             pycaret: 3.2.0
2023-12-14 15:20:46,077:INFO:             IPython: 8.18.1
2023-12-14 15:20:46,077:INFO:          ipywidgets: 8.1.1
2023-12-14 15:20:46,077:INFO:                tqdm: 4.66.1
2023-12-14 15:20:46,077:INFO:               numpy: 1.25.2
2023-12-14 15:20:46,077:INFO:              pandas: 1.5.3
2023-12-14 15:20:46,077:INFO:              jinja2: 3.1.2
2023-12-14 15:20:46,077:INFO:               scipy: 1.10.1
2023-12-14 15:20:46,077:INFO:              joblib: 1.3.2
2023-12-14 15:20:46,077:INFO:             sklearn: 1.2.2
2023-12-14 15:20:46,077:INFO:                pyod: 1.1.2
2023-12-14 15:20:46,077:INFO:            imblearn: 0.11.0
2023-12-14 15:20:46,077:INFO:   category_encoders: 2.6.3
2023-12-14 15:20:46,077:INFO:            lightgbm: 4.1.0
2023-12-14 15:20:46,077:INFO:               numba: 0.58.1
2023-12-14 15:20:46,077:INFO:            requests: 2.31.0
2023-12-14 15:20:46,077:INFO:          matplotlib: 3.6.0
2023-12-14 15:20:46,077:INFO:          scikitplot: 0.3.7
2023-12-14 15:20:46,077:INFO:         yellowbrick: 1.5
2023-12-14 15:20:46,077:INFO:              plotly: 5.18.0
2023-12-14 15:20:46,077:INFO:    plotly-resampler: Not installed
2023-12-14 15:20:46,077:INFO:             kaleido: 0.2.1
2023-12-14 15:20:46,077:INFO:           schemdraw: 0.15
2023-12-14 15:20:46,077:INFO:         statsmodels: 0.14.0
2023-12-14 15:20:46,077:INFO:              sktime: 0.21.1
2023-12-14 15:20:46,077:INFO:               tbats: 1.1.3
2023-12-14 15:20:46,077:INFO:            pmdarima: 2.0.4
2023-12-14 15:20:46,077:INFO:              psutil: 5.9.6
2023-12-14 15:20:46,077:INFO:          markupsafe: 2.1.3
2023-12-14 15:20:46,077:INFO:             pickle5: Not installed
2023-12-14 15:20:46,077:INFO:         cloudpickle: 3.0.0
2023-12-14 15:20:46,077:INFO:         deprecation: 2.1.0
2023-12-14 15:20:46,077:INFO:              xxhash: 3.4.1
2023-12-14 15:20:46,077:INFO:           wurlitzer: Not installed
2023-12-14 15:20:46,077:INFO:PyCaret optional dependencies:
2023-12-14 15:20:46,090:INFO:                shap: Not installed
2023-12-14 15:20:46,090:INFO:           interpret: Not installed
2023-12-14 15:20:46,090:INFO:                umap: Not installed
2023-12-14 15:20:46,090:INFO:     ydata_profiling: Not installed
2023-12-14 15:20:46,090:INFO:  explainerdashboard: Not installed
2023-12-14 15:20:46,090:INFO:             autoviz: Not installed
2023-12-14 15:20:46,090:INFO:           fairlearn: Not installed
2023-12-14 15:20:46,091:INFO:          deepchecks: Not installed
2023-12-14 15:20:46,091:INFO:             xgboost: Not installed
2023-12-14 15:20:46,091:INFO:            catboost: Not installed
2023-12-14 15:20:46,091:INFO:              kmodes: Not installed
2023-12-14 15:20:46,091:INFO:             mlxtend: Not installed
2023-12-14 15:20:46,091:INFO:       statsforecast: Not installed
2023-12-14 15:20:46,091:INFO:        tune_sklearn: Not installed
2023-12-14 15:20:46,091:INFO:                 ray: Not installed
2023-12-14 15:20:46,091:INFO:            hyperopt: Not installed
2023-12-14 15:20:46,091:INFO:              optuna: Not installed
2023-12-14 15:20:46,091:INFO:               skopt: Not installed
2023-12-14 15:20:46,091:INFO:              mlflow: Not installed
2023-12-14 15:20:46,091:INFO:              gradio: Not installed
2023-12-14 15:20:46,091:INFO:             fastapi: Not installed
2023-12-14 15:20:46,091:INFO:             uvicorn: Not installed
2023-12-14 15:20:46,091:INFO:              m2cgen: Not installed
2023-12-14 15:20:46,091:INFO:           evidently: Not installed
2023-12-14 15:20:46,091:INFO:               fugue: Not installed
2023-12-14 15:20:46,091:INFO:           streamlit: Not installed
2023-12-14 15:20:46,091:INFO:             prophet: Not installed
2023-12-14 15:20:46,091:INFO:None
2023-12-14 15:20:46,091:INFO:Set up data.
2023-12-14 15:20:46,095:INFO:Set up folding strategy.
2023-12-14 15:20:46,095:INFO:Set up train/test split.
2023-12-14 15:20:46,098:INFO:Set up index.
2023-12-14 15:20:46,098:INFO:Assigning column types.
2023-12-14 15:20:46,100:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:20:46,100:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,103:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,107:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,150:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,190:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,192:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,195:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,199:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,260:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,311:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:20:46,315:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,408:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,414:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,418:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,466:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,500:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,501:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:20:46,508:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,558:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,610:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,673:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,710:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,711:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:20:46,777:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,811:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,868:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:20:46,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:46,902:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:20:46,964:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:47,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:20:47,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,102:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:20:47,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,279:INFO:Preparing preprocessing pipeline...
2023-12-14 15:20:47,279:INFO:Set up simple imputation.
2023-12-14 15:20:47,280:INFO:Set up column name cleaning.
2023-12-14 15:20:47,296:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:20:47,300:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:20:47,300:INFO:Creating final display dataframe.
2023-12-14 15:20:47,357:INFO:Setup _display_container:                     Description             Value
0                    Session id              3569
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              70f2
2023-12-14 15:20:47,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:20:47,575:INFO:setup() successfully completed in 1.54s...............
2023-12-14 15:20:47,580:INFO:Initializing create_model()
2023-12-14 15:20:47,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:20:47,580:INFO:Checking exceptions
2023-12-14 15:20:47,582:INFO:Importing libraries
2023-12-14 15:20:47,582:INFO:Copying training dataset
2023-12-14 15:20:47,584:INFO:Defining folds
2023-12-14 15:20:47,585:INFO:Declaring metric variables
2023-12-14 15:20:47,585:INFO:Importing untrained model
2023-12-14 15:20:47,585:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:20:47,585:INFO:Starting cross validation
2023-12-14 15:20:47,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:20:51,423:INFO:Calculating mean and std
2023-12-14 15:20:51,424:INFO:Creating metrics dataframe
2023-12-14 15:20:51,426:INFO:Finalizing model
2023-12-14 15:20:51,530:INFO:Uploading results into container
2023-12-14 15:20:51,531:INFO:Uploading model into container now
2023-12-14 15:20:51,537:INFO:_master_model_container: 1
2023-12-14 15:20:51,537:INFO:_display_container: 2
2023-12-14 15:20:51,537:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:20:51,537:INFO:create_model() successfully completed......................................
2023-12-14 15:20:51,606:INFO:Initializing tune_model()
2023-12-14 15:20:51,606:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3569), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:20:51,606:INFO:Checking exceptions
2023-12-14 15:20:51,608:INFO:Copying training dataset
2023-12-14 15:20:51,609:INFO:Checking base model
2023-12-14 15:20:51,609:INFO:Base model : Extra Trees Regressor
2023-12-14 15:20:51,609:INFO:Declaring metric variables
2023-12-14 15:20:51,610:INFO:Defining Hyperparameters
2023-12-14 15:20:51,679:INFO:Tuning with n_jobs=-1
2023-12-14 15:20:51,679:INFO:Initializing RandomizedSearchCV
2023-12-14 15:20:56,772:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:20:56,773:INFO:Hyperparameter search completed
2023-12-14 15:20:56,773:INFO:SubProcess create_model() called ==================================
2023-12-14 15:20:56,773:INFO:Initializing create_model()
2023-12-14 15:20:56,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3569), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C434BCB810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:20:56,773:INFO:Checking exceptions
2023-12-14 15:20:56,773:INFO:Importing libraries
2023-12-14 15:20:56,774:INFO:Copying training dataset
2023-12-14 15:20:56,776:INFO:Defining folds
2023-12-14 15:20:56,776:INFO:Declaring metric variables
2023-12-14 15:20:56,776:INFO:Importing untrained model
2023-12-14 15:20:56,776:INFO:Declaring custom model
2023-12-14 15:20:56,776:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:20:56,777:INFO:Starting cross validation
2023-12-14 15:20:56,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:20:57,305:INFO:Calculating mean and std
2023-12-14 15:20:57,305:INFO:Creating metrics dataframe
2023-12-14 15:20:57,307:INFO:Finalizing model
2023-12-14 15:20:57,511:INFO:Uploading results into container
2023-12-14 15:20:57,512:INFO:Uploading model into container now
2023-12-14 15:20:57,512:INFO:_master_model_container: 2
2023-12-14 15:20:57,512:INFO:_display_container: 3
2023-12-14 15:20:57,512:INFO:ExtraTreesRegressor(max_depth=11, min_impurity_decrease=0.005,
                    min_samples_leaf=3, min_samples_split=7, n_estimators=290,
                    n_jobs=-1, random_state=3569)
2023-12-14 15:20:57,512:INFO:create_model() successfully completed......................................
2023-12-14 15:20:57,583:INFO:SubProcess create_model() end ==================================
2023-12-14 15:20:57,583:INFO:choose_better activated
2023-12-14 15:20:57,583:INFO:SubProcess create_model() called ==================================
2023-12-14 15:20:57,584:INFO:Initializing create_model()
2023-12-14 15:20:57,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3569), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:20:57,584:INFO:Checking exceptions
2023-12-14 15:20:57,584:INFO:Importing libraries
2023-12-14 15:20:57,584:INFO:Copying training dataset
2023-12-14 15:20:57,586:INFO:Defining folds
2023-12-14 15:20:57,586:INFO:Declaring metric variables
2023-12-14 15:20:57,587:INFO:Importing untrained model
2023-12-14 15:20:57,587:INFO:Declaring custom model
2023-12-14 15:20:57,587:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:20:57,587:INFO:Starting cross validation
2023-12-14 15:20:57,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:20:57,837:INFO:Calculating mean and std
2023-12-14 15:20:57,837:INFO:Creating metrics dataframe
2023-12-14 15:20:57,839:INFO:Finalizing model
2023-12-14 15:20:57,922:INFO:Uploading results into container
2023-12-14 15:20:57,922:INFO:Uploading model into container now
2023-12-14 15:20:57,922:INFO:_master_model_container: 3
2023-12-14 15:20:57,923:INFO:_display_container: 4
2023-12-14 15:20:57,923:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:20:57,923:INFO:create_model() successfully completed......................................
2023-12-14 15:20:57,991:INFO:SubProcess create_model() end ==================================
2023-12-14 15:20:57,991:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3569) result for R2 is 0.7522
2023-12-14 15:20:57,992:INFO:ExtraTreesRegressor(max_depth=11, min_impurity_decrease=0.005,
                    min_samples_leaf=3, min_samples_split=7, n_estimators=290,
                    n_jobs=-1, random_state=3569) result for R2 is 0.7384
2023-12-14 15:20:57,992:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3569) is best model
2023-12-14 15:20:57,992:INFO:choose_better completed
2023-12-14 15:20:57,992:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:20:57,999:INFO:_master_model_container: 3
2023-12-14 15:20:57,999:INFO:_display_container: 3
2023-12-14 15:20:58,000:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:20:58,000:INFO:tune_model() successfully completed......................................
2023-12-14 15:20:58,071:INFO:Initializing finalize_model()
2023-12-14 15:20:58,072:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3569), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:20:58,072:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:20:58,073:INFO:Initializing create_model()
2023-12-14 15:20:58,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3569), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:20:58,074:INFO:Checking exceptions
2023-12-14 15:20:58,074:INFO:Importing libraries
2023-12-14 15:20:58,074:INFO:Copying training dataset
2023-12-14 15:20:58,074:INFO:Defining folds
2023-12-14 15:20:58,074:INFO:Declaring metric variables
2023-12-14 15:20:58,074:INFO:Importing untrained model
2023-12-14 15:20:58,074:INFO:Declaring custom model
2023-12-14 15:20:58,075:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:20:58,075:INFO:Cross validation set to False
2023-12-14 15:20:58,075:INFO:Fitting Model
2023-12-14 15:20:58,171:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3569))])
2023-12-14 15:20:58,171:INFO:create_model() successfully completed......................................
2023-12-14 15:20:58,240:INFO:_master_model_container: 3
2023-12-14 15:20:58,240:INFO:_display_container: 3
2023-12-14 15:20:58,244:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3569))])
2023-12-14 15:20:58,244:INFO:finalize_model() successfully completed......................................
2023-12-14 15:20:58,310:INFO:Initializing create_model()
2023-12-14 15:20:58,310:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:20:58,310:INFO:Checking exceptions
2023-12-14 15:20:58,311:INFO:Importing libraries
2023-12-14 15:20:58,311:INFO:Copying training dataset
2023-12-14 15:20:58,313:INFO:Defining folds
2023-12-14 15:20:58,313:INFO:Declaring metric variables
2023-12-14 15:20:58,313:INFO:Importing untrained model
2023-12-14 15:20:58,314:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:20:58,314:INFO:Starting cross validation
2023-12-14 15:20:58,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:20:58,668:INFO:Calculating mean and std
2023-12-14 15:20:58,668:INFO:Creating metrics dataframe
2023-12-14 15:20:58,670:INFO:Finalizing model
2023-12-14 15:20:58,786:INFO:Uploading results into container
2023-12-14 15:20:58,786:INFO:Uploading model into container now
2023-12-14 15:20:58,793:INFO:_master_model_container: 4
2023-12-14 15:20:58,793:INFO:_display_container: 4
2023-12-14 15:20:58,793:INFO:RandomForestRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:20:58,793:INFO:create_model() successfully completed......................................
2023-12-14 15:20:58,866:INFO:Initializing tune_model()
2023-12-14 15:20:58,866:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3569), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:20:58,866:INFO:Checking exceptions
2023-12-14 15:20:58,868:INFO:Copying training dataset
2023-12-14 15:20:58,870:INFO:Checking base model
2023-12-14 15:20:58,870:INFO:Base model : Random Forest Regressor
2023-12-14 15:20:58,870:INFO:Declaring metric variables
2023-12-14 15:20:58,870:INFO:Defining Hyperparameters
2023-12-14 15:20:58,935:INFO:Tuning with n_jobs=-1
2023-12-14 15:20:58,935:INFO:Initializing RandomizedSearchCV
2023-12-14 15:21:03,341:INFO:best_params: {'actual_estimator__n_estimators': 130, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:21:03,342:INFO:Hyperparameter search completed
2023-12-14 15:21:03,342:INFO:SubProcess create_model() called ==================================
2023-12-14 15:21:03,342:INFO:Initializing create_model()
2023-12-14 15:21:03,342:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3569), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C4368BC110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 130, 'min_samples_split': 7, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:21:03,342:INFO:Checking exceptions
2023-12-14 15:21:03,342:INFO:Importing libraries
2023-12-14 15:21:03,342:INFO:Copying training dataset
2023-12-14 15:21:03,345:INFO:Defining folds
2023-12-14 15:21:03,345:INFO:Declaring metric variables
2023-12-14 15:21:03,345:INFO:Importing untrained model
2023-12-14 15:21:03,345:INFO:Declaring custom model
2023-12-14 15:21:03,346:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:21:03,346:INFO:Starting cross validation
2023-12-14 15:21:03,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:21:03,599:INFO:Calculating mean and std
2023-12-14 15:21:03,600:INFO:Creating metrics dataframe
2023-12-14 15:21:03,602:INFO:Finalizing model
2023-12-14 15:21:03,700:INFO:Uploading results into container
2023-12-14 15:21:03,700:INFO:Uploading model into container now
2023-12-14 15:21:03,700:INFO:_master_model_container: 5
2023-12-14 15:21:03,701:INFO:_display_container: 5
2023-12-14 15:21:03,701:INFO:RandomForestRegressor(bootstrap=False, max_depth=9, max_features='log2',
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=130, n_jobs=-1,
                      random_state=3569)
2023-12-14 15:21:03,701:INFO:create_model() successfully completed......................................
2023-12-14 15:21:03,772:INFO:SubProcess create_model() end ==================================
2023-12-14 15:21:03,772:INFO:choose_better activated
2023-12-14 15:21:03,773:INFO:SubProcess create_model() called ==================================
2023-12-14 15:21:03,773:INFO:Initializing create_model()
2023-12-14 15:21:03,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3569), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:21:03,773:INFO:Checking exceptions
2023-12-14 15:21:03,774:INFO:Importing libraries
2023-12-14 15:21:03,774:INFO:Copying training dataset
2023-12-14 15:21:03,776:INFO:Defining folds
2023-12-14 15:21:03,776:INFO:Declaring metric variables
2023-12-14 15:21:03,776:INFO:Importing untrained model
2023-12-14 15:21:03,776:INFO:Declaring custom model
2023-12-14 15:21:03,777:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:21:03,777:INFO:Starting cross validation
2023-12-14 15:21:03,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:21:04,089:INFO:Calculating mean and std
2023-12-14 15:21:04,089:INFO:Creating metrics dataframe
2023-12-14 15:21:04,091:INFO:Finalizing model
2023-12-14 15:21:04,205:INFO:Uploading results into container
2023-12-14 15:21:04,206:INFO:Uploading model into container now
2023-12-14 15:21:04,206:INFO:_master_model_container: 6
2023-12-14 15:21:04,206:INFO:_display_container: 6
2023-12-14 15:21:04,206:INFO:RandomForestRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:21:04,207:INFO:create_model() successfully completed......................................
2023-12-14 15:21:04,286:INFO:SubProcess create_model() end ==================================
2023-12-14 15:21:04,287:INFO:RandomForestRegressor(n_jobs=-1, random_state=3569) result for R2 is 0.7533
2023-12-14 15:21:04,287:INFO:RandomForestRegressor(bootstrap=False, max_depth=9, max_features='log2',
                      min_impurity_decrease=0, min_samples_leaf=6,
                      min_samples_split=7, n_estimators=130, n_jobs=-1,
                      random_state=3569) result for R2 is 0.7167
2023-12-14 15:21:04,287:INFO:RandomForestRegressor(n_jobs=-1, random_state=3569) is best model
2023-12-14 15:21:04,287:INFO:choose_better completed
2023-12-14 15:21:04,288:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:21:04,294:INFO:_master_model_container: 6
2023-12-14 15:21:04,295:INFO:_display_container: 5
2023-12-14 15:21:04,295:INFO:RandomForestRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:21:04,295:INFO:tune_model() successfully completed......................................
2023-12-14 15:21:04,370:INFO:Initializing finalize_model()
2023-12-14 15:21:04,370:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3569), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:21:04,370:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=3569)
2023-12-14 15:21:04,372:INFO:Initializing create_model()
2023-12-14 15:21:04,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3569), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:21:04,372:INFO:Checking exceptions
2023-12-14 15:21:04,373:INFO:Importing libraries
2023-12-14 15:21:04,373:INFO:Copying training dataset
2023-12-14 15:21:04,373:INFO:Defining folds
2023-12-14 15:21:04,373:INFO:Declaring metric variables
2023-12-14 15:21:04,373:INFO:Importing untrained model
2023-12-14 15:21:04,373:INFO:Declaring custom model
2023-12-14 15:21:04,373:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:21:04,374:INFO:Cross validation set to False
2023-12-14 15:21:04,374:INFO:Fitting Model
2023-12-14 15:21:04,490:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3569))])
2023-12-14 15:21:04,490:INFO:create_model() successfully completed......................................
2023-12-14 15:21:04,560:INFO:_master_model_container: 6
2023-12-14 15:21:04,560:INFO:_display_container: 5
2023-12-14 15:21:04,564:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3569))])
2023-12-14 15:21:04,564:INFO:finalize_model() successfully completed......................................
2023-12-14 15:21:22,654:INFO:Initializing predict_model()
2023-12-14 15:21:22,654:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3569))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C43653D440>)
2023-12-14 15:21:22,654:INFO:Checking exceptions
2023-12-14 15:21:22,654:INFO:Preloading libraries
2023-12-14 15:21:22,654:INFO:Set up data.
2023-12-14 15:21:22,658:INFO:Set up index.
2023-12-14 15:21:22,778:INFO:Initializing predict_model()
2023-12-14 15:21:22,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C4104E5A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3569))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C47F781260>)
2023-12-14 15:21:22,779:INFO:Checking exceptions
2023-12-14 15:21:22,779:INFO:Preloading libraries
2023-12-14 15:21:22,779:INFO:Set up data.
2023-12-14 15:21:22,782:INFO:Set up index.
2023-12-14 15:22:06,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:06,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:06,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:06,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:06,811:INFO:PyCaret RegressionExperiment
2023-12-14 15:22:06,811:INFO:Logging name: reg-default-name
2023-12-14 15:22:06,811:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:22:06,811:INFO:version 3.2.0
2023-12-14 15:22:06,812:INFO:Initializing setup()
2023-12-14 15:22:06,812:INFO:self.USI: 4ef5
2023-12-14 15:22:06,812:INFO:self._variable_keys: {'logging_param', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'X_train', 'exp_id', '_available_plots', 'gpu_param', 'fold_groups_param', 'pipeline', 'html_param', 'idx', 'y_test', 'data', 'seed', 'log_plots_param', 'X_test', 'memory', 'exp_name_log', 'transform_target_param', 'target_param', 'X', 'fold_generator', 'y', 'n_jobs_param', 'USI', 'fold_shuffle_param'}
2023-12-14 15:22:06,812:INFO:Checking environment
2023-12-14 15:22:06,812:INFO:python_version: 3.11.0
2023-12-14 15:22:06,812:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:22:06,812:INFO:machine: AMD64
2023-12-14 15:22:06,823:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:22:06,828:INFO:Memory: svmem(total=14877257728, available=3140747264, percent=78.9, used=11736510464, free=3140747264)
2023-12-14 15:22:06,828:INFO:Physical Core: 8
2023-12-14 15:22:06,828:INFO:Logical Core: 16
2023-12-14 15:22:06,829:INFO:Checking libraries
2023-12-14 15:22:06,829:INFO:System:
2023-12-14 15:22:06,829:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:22:06,829:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:22:06,829:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:22:06,829:INFO:PyCaret required dependencies:
2023-12-14 15:22:06,845:INFO:                 pip: 22.3
2023-12-14 15:22:06,845:INFO:          setuptools: 65.5.0
2023-12-14 15:22:06,845:INFO:             pycaret: 3.2.0
2023-12-14 15:22:06,845:INFO:             IPython: 8.18.1
2023-12-14 15:22:06,845:INFO:          ipywidgets: 8.1.1
2023-12-14 15:22:06,845:INFO:                tqdm: 4.66.1
2023-12-14 15:22:06,845:INFO:               numpy: 1.25.2
2023-12-14 15:22:06,845:INFO:              pandas: 1.5.3
2023-12-14 15:22:06,845:INFO:              jinja2: 3.1.2
2023-12-14 15:22:06,845:INFO:               scipy: 1.10.1
2023-12-14 15:22:06,845:INFO:              joblib: 1.3.2
2023-12-14 15:22:06,845:INFO:             sklearn: 1.2.2
2023-12-14 15:22:06,845:INFO:                pyod: 1.1.2
2023-12-14 15:22:06,845:INFO:            imblearn: 0.11.0
2023-12-14 15:22:06,845:INFO:   category_encoders: 2.6.3
2023-12-14 15:22:06,845:INFO:            lightgbm: 4.1.0
2023-12-14 15:22:06,845:INFO:               numba: 0.58.1
2023-12-14 15:22:06,846:INFO:            requests: 2.31.0
2023-12-14 15:22:06,846:INFO:          matplotlib: 3.6.0
2023-12-14 15:22:06,846:INFO:          scikitplot: 0.3.7
2023-12-14 15:22:06,846:INFO:         yellowbrick: 1.5
2023-12-14 15:22:06,846:INFO:              plotly: 5.18.0
2023-12-14 15:22:06,846:INFO:    plotly-resampler: Not installed
2023-12-14 15:22:06,846:INFO:             kaleido: 0.2.1
2023-12-14 15:22:06,846:INFO:           schemdraw: 0.15
2023-12-14 15:22:06,846:INFO:         statsmodels: 0.14.0
2023-12-14 15:22:06,846:INFO:              sktime: 0.21.1
2023-12-14 15:22:06,846:INFO:               tbats: 1.1.3
2023-12-14 15:22:06,846:INFO:            pmdarima: 2.0.4
2023-12-14 15:22:06,846:INFO:              psutil: 5.9.6
2023-12-14 15:22:06,846:INFO:          markupsafe: 2.1.3
2023-12-14 15:22:06,846:INFO:             pickle5: Not installed
2023-12-14 15:22:06,846:INFO:         cloudpickle: 3.0.0
2023-12-14 15:22:06,846:INFO:         deprecation: 2.1.0
2023-12-14 15:22:06,846:INFO:              xxhash: 3.4.1
2023-12-14 15:22:06,846:INFO:           wurlitzer: Not installed
2023-12-14 15:22:06,846:INFO:PyCaret optional dependencies:
2023-12-14 15:22:06,859:INFO:                shap: Not installed
2023-12-14 15:22:06,859:INFO:           interpret: Not installed
2023-12-14 15:22:06,860:INFO:                umap: Not installed
2023-12-14 15:22:06,860:INFO:     ydata_profiling: Not installed
2023-12-14 15:22:06,860:INFO:  explainerdashboard: Not installed
2023-12-14 15:22:06,860:INFO:             autoviz: Not installed
2023-12-14 15:22:06,860:INFO:           fairlearn: Not installed
2023-12-14 15:22:06,860:INFO:          deepchecks: Not installed
2023-12-14 15:22:06,860:INFO:             xgboost: Not installed
2023-12-14 15:22:06,860:INFO:            catboost: Not installed
2023-12-14 15:22:06,860:INFO:              kmodes: Not installed
2023-12-14 15:22:06,860:INFO:             mlxtend: Not installed
2023-12-14 15:22:06,860:INFO:       statsforecast: Not installed
2023-12-14 15:22:06,860:INFO:        tune_sklearn: Not installed
2023-12-14 15:22:06,860:INFO:                 ray: Not installed
2023-12-14 15:22:06,860:INFO:            hyperopt: Not installed
2023-12-14 15:22:06,860:INFO:              optuna: Not installed
2023-12-14 15:22:06,860:INFO:               skopt: Not installed
2023-12-14 15:22:06,860:INFO:              mlflow: Not installed
2023-12-14 15:22:06,860:INFO:              gradio: Not installed
2023-12-14 15:22:06,860:INFO:             fastapi: Not installed
2023-12-14 15:22:06,860:INFO:             uvicorn: Not installed
2023-12-14 15:22:06,860:INFO:              m2cgen: Not installed
2023-12-14 15:22:06,860:INFO:           evidently: Not installed
2023-12-14 15:22:06,860:INFO:               fugue: Not installed
2023-12-14 15:22:06,860:INFO:           streamlit: Not installed
2023-12-14 15:22:06,860:INFO:             prophet: Not installed
2023-12-14 15:22:06,860:INFO:None
2023-12-14 15:22:06,860:INFO:Set up data.
2023-12-14 15:22:06,864:INFO:Set up folding strategy.
2023-12-14 15:22:06,864:INFO:Set up train/test split.
2023-12-14 15:22:06,867:INFO:Set up index.
2023-12-14 15:22:06,867:INFO:Assigning column types.
2023-12-14 15:22:06,869:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:22:06,869:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,873:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,876:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,921:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:06,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:06,962:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,966:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:06,970:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,058:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:22:07,062:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,066:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,160:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,164:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,211:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,246:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,247:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:22:07,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,306:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,353:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,401:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,437:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:22:07,488:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,610:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,611:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:22:07,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,752:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:07,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,787:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:22:07,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:07,963:INFO:Preparing preprocessing pipeline...
2023-12-14 15:22:07,963:INFO:Set up simple imputation.
2023-12-14 15:22:07,964:INFO:Set up column name cleaning.
2023-12-14 15:22:07,979:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:22:07,983:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:22:07,984:INFO:Creating final display dataframe.
2023-12-14 15:22:08,030:INFO:Setup _display_container:                     Description             Value
0                    Session id              7912
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              4ef5
2023-12-14 15:22:08,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:08,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:08,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:08,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:08,227:INFO:setup() successfully completed in 1.42s...............
2023-12-14 15:22:08,232:INFO:Initializing create_model()
2023-12-14 15:22:08,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:08,232:INFO:Checking exceptions
2023-12-14 15:22:08,234:INFO:Importing libraries
2023-12-14 15:22:08,234:INFO:Copying training dataset
2023-12-14 15:22:08,237:INFO:Defining folds
2023-12-14 15:22:08,237:INFO:Declaring metric variables
2023-12-14 15:22:08,237:INFO:Importing untrained model
2023-12-14 15:22:08,237:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:22:08,237:INFO:Starting cross validation
2023-12-14 15:22:08,242:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:12,169:INFO:Calculating mean and std
2023-12-14 15:22:12,170:INFO:Creating metrics dataframe
2023-12-14 15:22:12,172:INFO:Finalizing model
2023-12-14 15:22:12,275:INFO:Uploading results into container
2023-12-14 15:22:12,276:INFO:Uploading model into container now
2023-12-14 15:22:12,283:INFO:_master_model_container: 1
2023-12-14 15:22:12,283:INFO:_display_container: 2
2023-12-14 15:22:12,283:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:12,283:INFO:create_model() successfully completed......................................
2023-12-14 15:22:12,359:INFO:Initializing tune_model()
2023-12-14 15:22:12,359:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7912), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:22:12,359:INFO:Checking exceptions
2023-12-14 15:22:12,361:INFO:Copying training dataset
2023-12-14 15:22:12,363:INFO:Checking base model
2023-12-14 15:22:12,363:INFO:Base model : Extra Trees Regressor
2023-12-14 15:22:12,363:INFO:Declaring metric variables
2023-12-14 15:22:12,363:INFO:Defining Hyperparameters
2023-12-14 15:22:12,439:INFO:Tuning with n_jobs=-1
2023-12-14 15:22:12,439:INFO:Initializing RandomizedSearchCV
2023-12-14 15:22:18,240:INFO:best_params: {'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:22:18,241:INFO:Hyperparameter search completed
2023-12-14 15:22:18,241:INFO:SubProcess create_model() called ==================================
2023-12-14 15:22:18,241:INFO:Initializing create_model()
2023-12-14 15:22:18,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7912), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F035E45310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 50, 'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 'log2', 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:22:18,241:INFO:Checking exceptions
2023-12-14 15:22:18,241:INFO:Importing libraries
2023-12-14 15:22:18,242:INFO:Copying training dataset
2023-12-14 15:22:18,245:INFO:Defining folds
2023-12-14 15:22:18,245:INFO:Declaring metric variables
2023-12-14 15:22:18,245:INFO:Importing untrained model
2023-12-14 15:22:18,245:INFO:Declaring custom model
2023-12-14 15:22:18,246:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:22:18,246:INFO:Starting cross validation
2023-12-14 15:22:18,247:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:18,426:INFO:Calculating mean and std
2023-12-14 15:22:18,427:INFO:Creating metrics dataframe
2023-12-14 15:22:18,429:INFO:Finalizing model
2023-12-14 15:22:18,484:INFO:Uploading results into container
2023-12-14 15:22:18,484:INFO:Uploading model into container now
2023-12-14 15:22:18,485:INFO:_master_model_container: 2
2023-12-14 15:22:18,485:INFO:_display_container: 3
2023-12-14 15:22:18,485:INFO:ExtraTreesRegressor(max_depth=10, max_features='log2',
                    min_impurity_decrease=0.02, min_samples_leaf=2,
                    min_samples_split=10, n_estimators=50, n_jobs=-1,
                    random_state=7912)
2023-12-14 15:22:18,485:INFO:create_model() successfully completed......................................
2023-12-14 15:22:18,561:INFO:SubProcess create_model() end ==================================
2023-12-14 15:22:18,561:INFO:choose_better activated
2023-12-14 15:22:18,562:INFO:SubProcess create_model() called ==================================
2023-12-14 15:22:18,562:INFO:Initializing create_model()
2023-12-14 15:22:18,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7912), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:18,562:INFO:Checking exceptions
2023-12-14 15:22:18,563:INFO:Importing libraries
2023-12-14 15:22:18,563:INFO:Copying training dataset
2023-12-14 15:22:18,565:INFO:Defining folds
2023-12-14 15:22:18,565:INFO:Declaring metric variables
2023-12-14 15:22:18,565:INFO:Importing untrained model
2023-12-14 15:22:18,565:INFO:Declaring custom model
2023-12-14 15:22:18,565:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:22:18,565:INFO:Starting cross validation
2023-12-14 15:22:18,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:18,842:INFO:Calculating mean and std
2023-12-14 15:22:18,842:INFO:Creating metrics dataframe
2023-12-14 15:22:18,844:INFO:Finalizing model
2023-12-14 15:22:18,937:INFO:Uploading results into container
2023-12-14 15:22:18,937:INFO:Uploading model into container now
2023-12-14 15:22:18,938:INFO:_master_model_container: 3
2023-12-14 15:22:18,938:INFO:_display_container: 4
2023-12-14 15:22:18,938:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:18,938:INFO:create_model() successfully completed......................................
2023-12-14 15:22:19,011:INFO:SubProcess create_model() end ==================================
2023-12-14 15:22:19,011:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7912) result for R2 is 0.7383
2023-12-14 15:22:19,012:INFO:ExtraTreesRegressor(max_depth=10, max_features='log2',
                    min_impurity_decrease=0.02, min_samples_leaf=2,
                    min_samples_split=10, n_estimators=50, n_jobs=-1,
                    random_state=7912) result for R2 is 0.7145
2023-12-14 15:22:19,012:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7912) is best model
2023-12-14 15:22:19,012:INFO:choose_better completed
2023-12-14 15:22:19,012:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:22:19,019:INFO:_master_model_container: 3
2023-12-14 15:22:19,019:INFO:_display_container: 3
2023-12-14 15:22:19,019:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:19,019:INFO:tune_model() successfully completed......................................
2023-12-14 15:22:19,093:INFO:Initializing finalize_model()
2023-12-14 15:22:19,093:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7912), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:22:19,093:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:19,095:INFO:Initializing create_model()
2023-12-14 15:22:19,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7912), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:19,096:INFO:Checking exceptions
2023-12-14 15:22:19,096:INFO:Importing libraries
2023-12-14 15:22:19,096:INFO:Copying training dataset
2023-12-14 15:22:19,096:INFO:Defining folds
2023-12-14 15:22:19,096:INFO:Declaring metric variables
2023-12-14 15:22:19,097:INFO:Importing untrained model
2023-12-14 15:22:19,097:INFO:Declaring custom model
2023-12-14 15:22:19,097:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:22:19,097:INFO:Cross validation set to False
2023-12-14 15:22:19,098:INFO:Fitting Model
2023-12-14 15:22:19,185:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7912))])
2023-12-14 15:22:19,185:INFO:create_model() successfully completed......................................
2023-12-14 15:22:19,255:INFO:_master_model_container: 3
2023-12-14 15:22:19,255:INFO:_display_container: 3
2023-12-14 15:22:19,259:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7912))])
2023-12-14 15:22:19,259:INFO:finalize_model() successfully completed......................................
2023-12-14 15:22:19,328:INFO:Initializing create_model()
2023-12-14 15:22:19,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:19,328:INFO:Checking exceptions
2023-12-14 15:22:19,329:INFO:Importing libraries
2023-12-14 15:22:19,329:INFO:Copying training dataset
2023-12-14 15:22:19,331:INFO:Defining folds
2023-12-14 15:22:19,331:INFO:Declaring metric variables
2023-12-14 15:22:19,331:INFO:Importing untrained model
2023-12-14 15:22:19,331:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:22:19,332:INFO:Starting cross validation
2023-12-14 15:22:19,332:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:19,641:INFO:Calculating mean and std
2023-12-14 15:22:19,642:INFO:Creating metrics dataframe
2023-12-14 15:22:19,643:INFO:Finalizing model
2023-12-14 15:22:19,761:INFO:Uploading results into container
2023-12-14 15:22:19,762:INFO:Uploading model into container now
2023-12-14 15:22:19,767:INFO:_master_model_container: 4
2023-12-14 15:22:19,767:INFO:_display_container: 4
2023-12-14 15:22:19,767:INFO:RandomForestRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:19,767:INFO:create_model() successfully completed......................................
2023-12-14 15:22:19,840:INFO:Initializing tune_model()
2023-12-14 15:22:19,840:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7912), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:22:19,841:INFO:Checking exceptions
2023-12-14 15:22:19,843:INFO:Copying training dataset
2023-12-14 15:22:19,844:INFO:Checking base model
2023-12-14 15:22:19,844:INFO:Base model : Random Forest Regressor
2023-12-14 15:22:19,844:INFO:Declaring metric variables
2023-12-14 15:22:19,844:INFO:Defining Hyperparameters
2023-12-14 15:22:19,916:INFO:Tuning with n_jobs=-1
2023-12-14 15:22:19,916:INFO:Initializing RandomizedSearchCV
2023-12-14 15:22:23,507:INFO:best_params: {'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:22:23,507:INFO:Hyperparameter search completed
2023-12-14 15:22:23,507:INFO:SubProcess create_model() called ==================================
2023-12-14 15:22:23,507:INFO:Initializing create_model()
2023-12-14 15:22:23,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7912), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F035E45310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 50, 'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 'log2', 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:22:23,508:INFO:Checking exceptions
2023-12-14 15:22:23,508:INFO:Importing libraries
2023-12-14 15:22:23,508:INFO:Copying training dataset
2023-12-14 15:22:23,510:INFO:Defining folds
2023-12-14 15:22:23,510:INFO:Declaring metric variables
2023-12-14 15:22:23,510:INFO:Importing untrained model
2023-12-14 15:22:23,510:INFO:Declaring custom model
2023-12-14 15:22:23,511:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:22:23,511:INFO:Starting cross validation
2023-12-14 15:22:23,511:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:23,664:INFO:Calculating mean and std
2023-12-14 15:22:23,664:INFO:Creating metrics dataframe
2023-12-14 15:22:23,666:INFO:Finalizing model
2023-12-14 15:22:23,719:INFO:Uploading results into container
2023-12-14 15:22:23,719:INFO:Uploading model into container now
2023-12-14 15:22:23,719:INFO:_master_model_container: 5
2023-12-14 15:22:23,719:INFO:_display_container: 5
2023-12-14 15:22:23,720:INFO:RandomForestRegressor(bootstrap=False, max_depth=10, max_features='log2',
                      min_impurity_decrease=0.02, min_samples_leaf=2,
                      min_samples_split=10, n_estimators=50, n_jobs=-1,
                      random_state=7912)
2023-12-14 15:22:23,720:INFO:create_model() successfully completed......................................
2023-12-14 15:22:23,806:INFO:SubProcess create_model() end ==================================
2023-12-14 15:22:23,806:INFO:choose_better activated
2023-12-14 15:22:23,806:INFO:SubProcess create_model() called ==================================
2023-12-14 15:22:23,806:INFO:Initializing create_model()
2023-12-14 15:22:23,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7912), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:23,807:INFO:Checking exceptions
2023-12-14 15:22:23,807:INFO:Importing libraries
2023-12-14 15:22:23,807:INFO:Copying training dataset
2023-12-14 15:22:23,809:INFO:Defining folds
2023-12-14 15:22:23,809:INFO:Declaring metric variables
2023-12-14 15:22:23,809:INFO:Importing untrained model
2023-12-14 15:22:23,809:INFO:Declaring custom model
2023-12-14 15:22:23,810:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:22:23,810:INFO:Starting cross validation
2023-12-14 15:22:23,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:24,124:INFO:Calculating mean and std
2023-12-14 15:22:24,124:INFO:Creating metrics dataframe
2023-12-14 15:22:24,125:INFO:Finalizing model
2023-12-14 15:22:24,251:INFO:Uploading results into container
2023-12-14 15:22:24,252:INFO:Uploading model into container now
2023-12-14 15:22:24,252:INFO:_master_model_container: 6
2023-12-14 15:22:24,252:INFO:_display_container: 6
2023-12-14 15:22:24,253:INFO:RandomForestRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:24,253:INFO:create_model() successfully completed......................................
2023-12-14 15:22:24,335:INFO:SubProcess create_model() end ==================================
2023-12-14 15:22:24,335:INFO:RandomForestRegressor(n_jobs=-1, random_state=7912) result for R2 is 0.7377
2023-12-14 15:22:24,336:INFO:RandomForestRegressor(bootstrap=False, max_depth=10, max_features='log2',
                      min_impurity_decrease=0.02, min_samples_leaf=2,
                      min_samples_split=10, n_estimators=50, n_jobs=-1,
                      random_state=7912) result for R2 is 0.7287
2023-12-14 15:22:24,336:INFO:RandomForestRegressor(n_jobs=-1, random_state=7912) is best model
2023-12-14 15:22:24,336:INFO:choose_better completed
2023-12-14 15:22:24,336:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:22:24,344:INFO:_master_model_container: 6
2023-12-14 15:22:24,344:INFO:_display_container: 5
2023-12-14 15:22:24,344:INFO:RandomForestRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:24,344:INFO:tune_model() successfully completed......................................
2023-12-14 15:22:24,434:INFO:Initializing finalize_model()
2023-12-14 15:22:24,434:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7912), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:22:24,434:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=7912)
2023-12-14 15:22:24,436:INFO:Initializing create_model()
2023-12-14 15:22:24,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7912), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:24,436:INFO:Checking exceptions
2023-12-14 15:22:24,437:INFO:Importing libraries
2023-12-14 15:22:24,437:INFO:Copying training dataset
2023-12-14 15:22:24,437:INFO:Defining folds
2023-12-14 15:22:24,437:INFO:Declaring metric variables
2023-12-14 15:22:24,437:INFO:Importing untrained model
2023-12-14 15:22:24,437:INFO:Declaring custom model
2023-12-14 15:22:24,438:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:22:24,438:INFO:Cross validation set to False
2023-12-14 15:22:24,438:INFO:Fitting Model
2023-12-14 15:22:24,553:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7912))])
2023-12-14 15:22:24,553:INFO:create_model() successfully completed......................................
2023-12-14 15:22:24,622:INFO:_master_model_container: 6
2023-12-14 15:22:24,622:INFO:_display_container: 5
2023-12-14 15:22:24,626:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7912))])
2023-12-14 15:22:24,626:INFO:finalize_model() successfully completed......................................
2023-12-14 15:22:26,919:INFO:Initializing predict_model()
2023-12-14 15:22:26,919:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7912))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F035A8C5E0>)
2023-12-14 15:22:26,919:INFO:Checking exceptions
2023-12-14 15:22:26,919:INFO:Preloading libraries
2023-12-14 15:22:26,919:INFO:Set up data.
2023-12-14 15:22:26,922:INFO:Set up index.
2023-12-14 15:22:27,019:INFO:Initializing predict_model()
2023-12-14 15:22:27,020:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F00F9B5690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7912))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F00CD11300>)
2023-12-14 15:22:27,020:INFO:Checking exceptions
2023-12-14 15:22:27,020:INFO:Preloading libraries
2023-12-14 15:22:27,020:INFO:Set up data.
2023-12-14 15:22:27,023:INFO:Set up index.
2023-12-14 15:22:51,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:51,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:51,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:51,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:22:51,804:INFO:PyCaret RegressionExperiment
2023-12-14 15:22:51,804:INFO:Logging name: reg-default-name
2023-12-14 15:22:51,804:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:22:51,804:INFO:version 3.2.0
2023-12-14 15:22:51,804:INFO:Initializing setup()
2023-12-14 15:22:51,805:INFO:self.USI: 9afa
2023-12-14 15:22:51,805:INFO:self._variable_keys: {'seed', 'exp_id', 'exp_name_log', 'fold_groups_param', 'data', 'y', 'memory', 'y_test', 'logging_param', 'idx', 'log_plots_param', 'y_train', 'target_param', 'X_test', 'USI', '_available_plots', 'pipeline', 'gpu_param', 'X_train', 'transform_target_param', 'n_jobs_param', 'html_param', 'gpu_n_jobs_param', 'fold_generator', 'fold_shuffle_param', '_ml_usecase', 'X'}
2023-12-14 15:22:51,805:INFO:Checking environment
2023-12-14 15:22:51,805:INFO:python_version: 3.11.0
2023-12-14 15:22:51,805:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:22:51,805:INFO:machine: AMD64
2023-12-14 15:22:51,814:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:22:51,819:INFO:Memory: svmem(total=14877257728, available=3104579584, percent=79.1, used=11772678144, free=3104579584)
2023-12-14 15:22:51,819:INFO:Physical Core: 8
2023-12-14 15:22:51,819:INFO:Logical Core: 16
2023-12-14 15:22:51,819:INFO:Checking libraries
2023-12-14 15:22:51,819:INFO:System:
2023-12-14 15:22:51,819:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:22:51,819:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:22:51,819:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:22:51,819:INFO:PyCaret required dependencies:
2023-12-14 15:22:51,835:INFO:                 pip: 22.3
2023-12-14 15:22:51,835:INFO:          setuptools: 65.5.0
2023-12-14 15:22:51,835:INFO:             pycaret: 3.2.0
2023-12-14 15:22:51,835:INFO:             IPython: 8.18.1
2023-12-14 15:22:51,835:INFO:          ipywidgets: 8.1.1
2023-12-14 15:22:51,835:INFO:                tqdm: 4.66.1
2023-12-14 15:22:51,836:INFO:               numpy: 1.25.2
2023-12-14 15:22:51,836:INFO:              pandas: 1.5.3
2023-12-14 15:22:51,836:INFO:              jinja2: 3.1.2
2023-12-14 15:22:51,836:INFO:               scipy: 1.10.1
2023-12-14 15:22:51,836:INFO:              joblib: 1.3.2
2023-12-14 15:22:51,836:INFO:             sklearn: 1.2.2
2023-12-14 15:22:51,836:INFO:                pyod: 1.1.2
2023-12-14 15:22:51,836:INFO:            imblearn: 0.11.0
2023-12-14 15:22:51,836:INFO:   category_encoders: 2.6.3
2023-12-14 15:22:51,836:INFO:            lightgbm: 4.1.0
2023-12-14 15:22:51,836:INFO:               numba: 0.58.1
2023-12-14 15:22:51,836:INFO:            requests: 2.31.0
2023-12-14 15:22:51,836:INFO:          matplotlib: 3.6.0
2023-12-14 15:22:51,836:INFO:          scikitplot: 0.3.7
2023-12-14 15:22:51,836:INFO:         yellowbrick: 1.5
2023-12-14 15:22:51,836:INFO:              plotly: 5.18.0
2023-12-14 15:22:51,836:INFO:    plotly-resampler: Not installed
2023-12-14 15:22:51,836:INFO:             kaleido: 0.2.1
2023-12-14 15:22:51,836:INFO:           schemdraw: 0.15
2023-12-14 15:22:51,836:INFO:         statsmodels: 0.14.0
2023-12-14 15:22:51,836:INFO:              sktime: 0.21.1
2023-12-14 15:22:51,836:INFO:               tbats: 1.1.3
2023-12-14 15:22:51,836:INFO:            pmdarima: 2.0.4
2023-12-14 15:22:51,836:INFO:              psutil: 5.9.6
2023-12-14 15:22:51,836:INFO:          markupsafe: 2.1.3
2023-12-14 15:22:51,836:INFO:             pickle5: Not installed
2023-12-14 15:22:51,836:INFO:         cloudpickle: 3.0.0
2023-12-14 15:22:51,836:INFO:         deprecation: 2.1.0
2023-12-14 15:22:51,836:INFO:              xxhash: 3.4.1
2023-12-14 15:22:51,836:INFO:           wurlitzer: Not installed
2023-12-14 15:22:51,836:INFO:PyCaret optional dependencies:
2023-12-14 15:22:51,849:INFO:                shap: Not installed
2023-12-14 15:22:51,849:INFO:           interpret: Not installed
2023-12-14 15:22:51,849:INFO:                umap: Not installed
2023-12-14 15:22:51,849:INFO:     ydata_profiling: Not installed
2023-12-14 15:22:51,849:INFO:  explainerdashboard: Not installed
2023-12-14 15:22:51,849:INFO:             autoviz: Not installed
2023-12-14 15:22:51,849:INFO:           fairlearn: Not installed
2023-12-14 15:22:51,849:INFO:          deepchecks: Not installed
2023-12-14 15:22:51,849:INFO:             xgboost: Not installed
2023-12-14 15:22:51,849:INFO:            catboost: Not installed
2023-12-14 15:22:51,849:INFO:              kmodes: Not installed
2023-12-14 15:22:51,849:INFO:             mlxtend: Not installed
2023-12-14 15:22:51,849:INFO:       statsforecast: Not installed
2023-12-14 15:22:51,849:INFO:        tune_sklearn: Not installed
2023-12-14 15:22:51,849:INFO:                 ray: Not installed
2023-12-14 15:22:51,849:INFO:            hyperopt: Not installed
2023-12-14 15:22:51,849:INFO:              optuna: Not installed
2023-12-14 15:22:51,849:INFO:               skopt: Not installed
2023-12-14 15:22:51,849:INFO:              mlflow: Not installed
2023-12-14 15:22:51,849:INFO:              gradio: Not installed
2023-12-14 15:22:51,849:INFO:             fastapi: Not installed
2023-12-14 15:22:51,849:INFO:             uvicorn: Not installed
2023-12-14 15:22:51,849:INFO:              m2cgen: Not installed
2023-12-14 15:22:51,849:INFO:           evidently: Not installed
2023-12-14 15:22:51,849:INFO:               fugue: Not installed
2023-12-14 15:22:51,849:INFO:           streamlit: Not installed
2023-12-14 15:22:51,849:INFO:             prophet: Not installed
2023-12-14 15:22:51,849:INFO:None
2023-12-14 15:22:51,849:INFO:Set up data.
2023-12-14 15:22:51,853:INFO:Set up folding strategy.
2023-12-14 15:22:51,853:INFO:Set up train/test split.
2023-12-14 15:22:51,856:INFO:Set up index.
2023-12-14 15:22:51,856:INFO:Assigning column types.
2023-12-14 15:22:51,858:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:22:51,858:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,861:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,865:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,909:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:51,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:51,952:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,958:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:51,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,043:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,044:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:22:52,047:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,050:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,095:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,133:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,137:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,181:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,215:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:22:52,222:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,413:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:22:52,466:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,500:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,587:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:22:52,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:22:52,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,768:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:22:52,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:52,943:INFO:Preparing preprocessing pipeline...
2023-12-14 15:22:52,943:INFO:Set up simple imputation.
2023-12-14 15:22:52,944:INFO:Set up column name cleaning.
2023-12-14 15:22:52,960:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:22:52,964:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:22:52,964:INFO:Creating final display dataframe.
2023-12-14 15:22:53,010:INFO:Setup _display_container:                     Description             Value
0                    Session id              1342
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              9afa
2023-12-14 15:22:53,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:53,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:53,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:53,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:22:53,194:INFO:setup() successfully completed in 1.39s...............
2023-12-14 15:22:53,199:INFO:Initializing create_model()
2023-12-14 15:22:53,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:22:53,199:INFO:Checking exceptions
2023-12-14 15:22:53,201:INFO:Importing libraries
2023-12-14 15:22:53,201:INFO:Copying training dataset
2023-12-14 15:22:53,203:INFO:Defining folds
2023-12-14 15:22:53,203:INFO:Declaring metric variables
2023-12-14 15:22:53,203:INFO:Importing untrained model
2023-12-14 15:22:53,204:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:22:53,204:INFO:Starting cross validation
2023-12-14 15:22:53,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:22:57,122:INFO:Calculating mean and std
2023-12-14 15:22:57,123:INFO:Creating metrics dataframe
2023-12-14 15:22:57,127:INFO:Finalizing model
2023-12-14 15:22:57,239:INFO:Uploading results into container
2023-12-14 15:22:57,240:INFO:Uploading model into container now
2023-12-14 15:22:57,247:INFO:_master_model_container: 1
2023-12-14 15:22:57,247:INFO:_display_container: 2
2023-12-14 15:22:57,247:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:22:57,247:INFO:create_model() successfully completed......................................
2023-12-14 15:22:57,324:INFO:Initializing tune_model()
2023-12-14 15:22:57,324:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1342), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:22:57,324:INFO:Checking exceptions
2023-12-14 15:22:57,326:INFO:Copying training dataset
2023-12-14 15:22:57,327:INFO:Checking base model
2023-12-14 15:22:57,328:INFO:Base model : Extra Trees Regressor
2023-12-14 15:22:57,328:INFO:Declaring metric variables
2023-12-14 15:22:57,328:INFO:Defining Hyperparameters
2023-12-14 15:22:57,400:INFO:Tuning with n_jobs=-1
2023-12-14 15:22:57,400:INFO:Initializing RandomizedSearchCV
2023-12-14 15:23:03,140:INFO:best_params: {'actual_estimator__n_estimators': 280, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:23:03,140:INFO:Hyperparameter search completed
2023-12-14 15:23:03,140:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:03,140:INFO:Initializing create_model()
2023-12-14 15:23:03,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1342), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B82E328150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 280, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.2, 'max_features': 'log2', 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:23:03,141:INFO:Checking exceptions
2023-12-14 15:23:03,141:INFO:Importing libraries
2023-12-14 15:23:03,141:INFO:Copying training dataset
2023-12-14 15:23:03,143:INFO:Defining folds
2023-12-14 15:23:03,143:INFO:Declaring metric variables
2023-12-14 15:23:03,143:INFO:Importing untrained model
2023-12-14 15:23:03,143:INFO:Declaring custom model
2023-12-14 15:23:03,144:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:03,144:INFO:Starting cross validation
2023-12-14 15:23:03,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:03,608:INFO:Calculating mean and std
2023-12-14 15:23:03,608:INFO:Creating metrics dataframe
2023-12-14 15:23:03,610:INFO:Finalizing model
2023-12-14 15:23:03,809:INFO:Uploading results into container
2023-12-14 15:23:03,809:INFO:Uploading model into container now
2023-12-14 15:23:03,810:INFO:_master_model_container: 2
2023-12-14 15:23:03,810:INFO:_display_container: 3
2023-12-14 15:23:03,810:INFO:ExtraTreesRegressor(max_depth=11, max_features='log2',
                    min_impurity_decrease=0.2, min_samples_leaf=4,
                    min_samples_split=10, n_estimators=280, n_jobs=-1,
                    random_state=1342)
2023-12-14 15:23:03,810:INFO:create_model() successfully completed......................................
2023-12-14 15:23:03,887:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:03,887:INFO:choose_better activated
2023-12-14 15:23:03,887:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:03,887:INFO:Initializing create_model()
2023-12-14 15:23:03,887:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1342), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:03,888:INFO:Checking exceptions
2023-12-14 15:23:03,888:INFO:Importing libraries
2023-12-14 15:23:03,888:INFO:Copying training dataset
2023-12-14 15:23:03,890:INFO:Defining folds
2023-12-14 15:23:03,890:INFO:Declaring metric variables
2023-12-14 15:23:03,891:INFO:Importing untrained model
2023-12-14 15:23:03,891:INFO:Declaring custom model
2023-12-14 15:23:03,891:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:03,891:INFO:Starting cross validation
2023-12-14 15:23:03,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:04,144:INFO:Calculating mean and std
2023-12-14 15:23:04,144:INFO:Creating metrics dataframe
2023-12-14 15:23:04,146:INFO:Finalizing model
2023-12-14 15:23:04,231:INFO:Uploading results into container
2023-12-14 15:23:04,231:INFO:Uploading model into container now
2023-12-14 15:23:04,232:INFO:_master_model_container: 3
2023-12-14 15:23:04,232:INFO:_display_container: 4
2023-12-14 15:23:04,232:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:04,232:INFO:create_model() successfully completed......................................
2023-12-14 15:23:04,304:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:04,304:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1342) result for R2 is 0.7399
2023-12-14 15:23:04,305:INFO:ExtraTreesRegressor(max_depth=11, max_features='log2',
                    min_impurity_decrease=0.2, min_samples_leaf=4,
                    min_samples_split=10, n_estimators=280, n_jobs=-1,
                    random_state=1342) result for R2 is 0.6783
2023-12-14 15:23:04,305:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1342) is best model
2023-12-14 15:23:04,305:INFO:choose_better completed
2023-12-14 15:23:04,305:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:23:04,312:INFO:_master_model_container: 3
2023-12-14 15:23:04,312:INFO:_display_container: 3
2023-12-14 15:23:04,312:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:04,312:INFO:tune_model() successfully completed......................................
2023-12-14 15:23:04,388:INFO:Initializing finalize_model()
2023-12-14 15:23:04,388:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1342), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:23:04,388:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:04,390:INFO:Initializing create_model()
2023-12-14 15:23:04,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1342), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:04,390:INFO:Checking exceptions
2023-12-14 15:23:04,391:INFO:Importing libraries
2023-12-14 15:23:04,391:INFO:Copying training dataset
2023-12-14 15:23:04,391:INFO:Defining folds
2023-12-14 15:23:04,391:INFO:Declaring metric variables
2023-12-14 15:23:04,391:INFO:Importing untrained model
2023-12-14 15:23:04,391:INFO:Declaring custom model
2023-12-14 15:23:04,392:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:04,392:INFO:Cross validation set to False
2023-12-14 15:23:04,392:INFO:Fitting Model
2023-12-14 15:23:04,494:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1342))])
2023-12-14 15:23:04,494:INFO:create_model() successfully completed......................................
2023-12-14 15:23:04,568:INFO:_master_model_container: 3
2023-12-14 15:23:04,568:INFO:_display_container: 3
2023-12-14 15:23:04,572:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1342))])
2023-12-14 15:23:04,572:INFO:finalize_model() successfully completed......................................
2023-12-14 15:23:04,644:INFO:Initializing create_model()
2023-12-14 15:23:04,645:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:04,645:INFO:Checking exceptions
2023-12-14 15:23:04,646:INFO:Importing libraries
2023-12-14 15:23:04,646:INFO:Copying training dataset
2023-12-14 15:23:04,648:INFO:Defining folds
2023-12-14 15:23:04,648:INFO:Declaring metric variables
2023-12-14 15:23:04,648:INFO:Importing untrained model
2023-12-14 15:23:04,648:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:04,649:INFO:Starting cross validation
2023-12-14 15:23:04,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:04,963:INFO:Calculating mean and std
2023-12-14 15:23:04,963:INFO:Creating metrics dataframe
2023-12-14 15:23:04,964:INFO:Finalizing model
2023-12-14 15:23:05,074:INFO:Uploading results into container
2023-12-14 15:23:05,075:INFO:Uploading model into container now
2023-12-14 15:23:05,081:INFO:_master_model_container: 4
2023-12-14 15:23:05,081:INFO:_display_container: 4
2023-12-14 15:23:05,081:INFO:RandomForestRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:05,081:INFO:create_model() successfully completed......................................
2023-12-14 15:23:05,154:INFO:Initializing tune_model()
2023-12-14 15:23:05,154:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1342), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:23:05,154:INFO:Checking exceptions
2023-12-14 15:23:05,156:INFO:Copying training dataset
2023-12-14 15:23:05,157:INFO:Checking base model
2023-12-14 15:23:05,157:INFO:Base model : Random Forest Regressor
2023-12-14 15:23:05,157:INFO:Declaring metric variables
2023-12-14 15:23:05,158:INFO:Defining Hyperparameters
2023-12-14 15:23:05,230:INFO:Tuning with n_jobs=-1
2023-12-14 15:23:05,230:INFO:Initializing RandomizedSearchCV
2023-12-14 15:23:10,080:INFO:best_params: {'actual_estimator__n_estimators': 280, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:23:10,080:INFO:Hyperparameter search completed
2023-12-14 15:23:10,080:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:10,081:INFO:Initializing create_model()
2023-12-14 15:23:10,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1342), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B82EAC4450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 280, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.2, 'max_features': 'log2', 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:23:10,081:INFO:Checking exceptions
2023-12-14 15:23:10,081:INFO:Importing libraries
2023-12-14 15:23:10,081:INFO:Copying training dataset
2023-12-14 15:23:10,083:INFO:Defining folds
2023-12-14 15:23:10,083:INFO:Declaring metric variables
2023-12-14 15:23:10,083:INFO:Importing untrained model
2023-12-14 15:23:10,083:INFO:Declaring custom model
2023-12-14 15:23:10,084:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:10,084:INFO:Starting cross validation
2023-12-14 15:23:10,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:10,570:INFO:Calculating mean and std
2023-12-14 15:23:10,571:INFO:Creating metrics dataframe
2023-12-14 15:23:10,572:INFO:Finalizing model
2023-12-14 15:23:10,771:INFO:Uploading results into container
2023-12-14 15:23:10,772:INFO:Uploading model into container now
2023-12-14 15:23:10,772:INFO:_master_model_container: 5
2023-12-14 15:23:10,772:INFO:_display_container: 5
2023-12-14 15:23:10,772:INFO:RandomForestRegressor(bootstrap=False, max_depth=11, max_features='log2',
                      min_impurity_decrease=0.2, min_samples_leaf=4,
                      min_samples_split=10, n_estimators=280, n_jobs=-1,
                      random_state=1342)
2023-12-14 15:23:10,772:INFO:create_model() successfully completed......................................
2023-12-14 15:23:10,846:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:10,846:INFO:choose_better activated
2023-12-14 15:23:10,846:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:10,846:INFO:Initializing create_model()
2023-12-14 15:23:10,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1342), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:10,846:INFO:Checking exceptions
2023-12-14 15:23:10,847:INFO:Importing libraries
2023-12-14 15:23:10,847:INFO:Copying training dataset
2023-12-14 15:23:10,849:INFO:Defining folds
2023-12-14 15:23:10,849:INFO:Declaring metric variables
2023-12-14 15:23:10,849:INFO:Importing untrained model
2023-12-14 15:23:10,849:INFO:Declaring custom model
2023-12-14 15:23:10,850:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:10,850:INFO:Starting cross validation
2023-12-14 15:23:10,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:11,150:INFO:Calculating mean and std
2023-12-14 15:23:11,150:INFO:Creating metrics dataframe
2023-12-14 15:23:11,151:INFO:Finalizing model
2023-12-14 15:23:11,268:INFO:Uploading results into container
2023-12-14 15:23:11,268:INFO:Uploading model into container now
2023-12-14 15:23:11,269:INFO:_master_model_container: 6
2023-12-14 15:23:11,269:INFO:_display_container: 6
2023-12-14 15:23:11,269:INFO:RandomForestRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:11,269:INFO:create_model() successfully completed......................................
2023-12-14 15:23:11,340:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:11,341:INFO:RandomForestRegressor(n_jobs=-1, random_state=1342) result for R2 is 0.7351
2023-12-14 15:23:11,341:INFO:RandomForestRegressor(bootstrap=False, max_depth=11, max_features='log2',
                      min_impurity_decrease=0.2, min_samples_leaf=4,
                      min_samples_split=10, n_estimators=280, n_jobs=-1,
                      random_state=1342) result for R2 is 0.7221
2023-12-14 15:23:11,341:INFO:RandomForestRegressor(n_jobs=-1, random_state=1342) is best model
2023-12-14 15:23:11,341:INFO:choose_better completed
2023-12-14 15:23:11,342:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:23:11,349:INFO:_master_model_container: 6
2023-12-14 15:23:11,349:INFO:_display_container: 5
2023-12-14 15:23:11,350:INFO:RandomForestRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:11,350:INFO:tune_model() successfully completed......................................
2023-12-14 15:23:11,426:INFO:Initializing finalize_model()
2023-12-14 15:23:11,426:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1342), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:23:11,426:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=1342)
2023-12-14 15:23:11,428:INFO:Initializing create_model()
2023-12-14 15:23:11,428:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=1342), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:11,428:INFO:Checking exceptions
2023-12-14 15:23:11,429:INFO:Importing libraries
2023-12-14 15:23:11,429:INFO:Copying training dataset
2023-12-14 15:23:11,429:INFO:Defining folds
2023-12-14 15:23:11,429:INFO:Declaring metric variables
2023-12-14 15:23:11,429:INFO:Importing untrained model
2023-12-14 15:23:11,429:INFO:Declaring custom model
2023-12-14 15:23:11,429:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:11,430:INFO:Cross validation set to False
2023-12-14 15:23:11,430:INFO:Fitting Model
2023-12-14 15:23:11,544:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1342))])
2023-12-14 15:23:11,544:INFO:create_model() successfully completed......................................
2023-12-14 15:23:11,613:INFO:_master_model_container: 6
2023-12-14 15:23:11,613:INFO:_display_container: 5
2023-12-14 15:23:11,617:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1342))])
2023-12-14 15:23:11,617:INFO:finalize_model() successfully completed......................................
2023-12-14 15:23:15,936:INFO:Initializing predict_model()
2023-12-14 15:23:15,936:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=1342))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B82E83D6C0>)
2023-12-14 15:23:15,936:INFO:Checking exceptions
2023-12-14 15:23:15,936:INFO:Preloading libraries
2023-12-14 15:23:15,936:INFO:Set up data.
2023-12-14 15:23:15,938:INFO:Set up index.
2023-12-14 15:23:16,041:INFO:Initializing predict_model()
2023-12-14 15:23:16,041:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B87F6ED690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=1342))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B8094740E0>)
2023-12-14 15:23:16,042:INFO:Checking exceptions
2023-12-14 15:23:16,042:INFO:Preloading libraries
2023-12-14 15:23:16,042:INFO:Set up data.
2023-12-14 15:23:16,044:INFO:Set up index.
2023-12-14 15:23:36,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:23:36,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:23:36,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:23:36,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:23:36,851:INFO:PyCaret RegressionExperiment
2023-12-14 15:23:36,851:INFO:Logging name: reg-default-name
2023-12-14 15:23:36,851:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:23:36,851:INFO:version 3.2.0
2023-12-14 15:23:36,851:INFO:Initializing setup()
2023-12-14 15:23:36,851:INFO:self.USI: cbdc
2023-12-14 15:23:36,851:INFO:self._variable_keys: {'y_test', 'X', 'fold_generator', 'transform_target_param', 'idx', 'fold_groups_param', 'gpu_param', 'seed', '_ml_usecase', 'exp_id', 'n_jobs_param', 'USI', 'target_param', 'X_train', 'pipeline', 'html_param', 'y', 'y_train', 'memory', '_available_plots', 'data', 'fold_shuffle_param', 'X_test', 'gpu_n_jobs_param', 'exp_name_log', 'logging_param', 'log_plots_param'}
2023-12-14 15:23:36,851:INFO:Checking environment
2023-12-14 15:23:36,851:INFO:python_version: 3.11.0
2023-12-14 15:23:36,851:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:23:36,851:INFO:machine: AMD64
2023-12-14 15:23:36,862:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:23:36,867:INFO:Memory: svmem(total=14877257728, available=3137781760, percent=78.9, used=11739475968, free=3137781760)
2023-12-14 15:23:36,867:INFO:Physical Core: 8
2023-12-14 15:23:36,867:INFO:Logical Core: 16
2023-12-14 15:23:36,867:INFO:Checking libraries
2023-12-14 15:23:36,867:INFO:System:
2023-12-14 15:23:36,867:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:23:36,867:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:23:36,867:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:23:36,867:INFO:PyCaret required dependencies:
2023-12-14 15:23:36,884:INFO:                 pip: 22.3
2023-12-14 15:23:36,885:INFO:          setuptools: 65.5.0
2023-12-14 15:23:36,885:INFO:             pycaret: 3.2.0
2023-12-14 15:23:36,885:INFO:             IPython: 8.18.1
2023-12-14 15:23:36,885:INFO:          ipywidgets: 8.1.1
2023-12-14 15:23:36,885:INFO:                tqdm: 4.66.1
2023-12-14 15:23:36,885:INFO:               numpy: 1.25.2
2023-12-14 15:23:36,885:INFO:              pandas: 1.5.3
2023-12-14 15:23:36,885:INFO:              jinja2: 3.1.2
2023-12-14 15:23:36,885:INFO:               scipy: 1.10.1
2023-12-14 15:23:36,885:INFO:              joblib: 1.3.2
2023-12-14 15:23:36,885:INFO:             sklearn: 1.2.2
2023-12-14 15:23:36,885:INFO:                pyod: 1.1.2
2023-12-14 15:23:36,885:INFO:            imblearn: 0.11.0
2023-12-14 15:23:36,885:INFO:   category_encoders: 2.6.3
2023-12-14 15:23:36,885:INFO:            lightgbm: 4.1.0
2023-12-14 15:23:36,885:INFO:               numba: 0.58.1
2023-12-14 15:23:36,885:INFO:            requests: 2.31.0
2023-12-14 15:23:36,885:INFO:          matplotlib: 3.6.0
2023-12-14 15:23:36,885:INFO:          scikitplot: 0.3.7
2023-12-14 15:23:36,885:INFO:         yellowbrick: 1.5
2023-12-14 15:23:36,885:INFO:              plotly: 5.18.0
2023-12-14 15:23:36,885:INFO:    plotly-resampler: Not installed
2023-12-14 15:23:36,885:INFO:             kaleido: 0.2.1
2023-12-14 15:23:36,885:INFO:           schemdraw: 0.15
2023-12-14 15:23:36,885:INFO:         statsmodels: 0.14.0
2023-12-14 15:23:36,885:INFO:              sktime: 0.21.1
2023-12-14 15:23:36,885:INFO:               tbats: 1.1.3
2023-12-14 15:23:36,885:INFO:            pmdarima: 2.0.4
2023-12-14 15:23:36,885:INFO:              psutil: 5.9.6
2023-12-14 15:23:36,885:INFO:          markupsafe: 2.1.3
2023-12-14 15:23:36,885:INFO:             pickle5: Not installed
2023-12-14 15:23:36,885:INFO:         cloudpickle: 3.0.0
2023-12-14 15:23:36,885:INFO:         deprecation: 2.1.0
2023-12-14 15:23:36,885:INFO:              xxhash: 3.4.1
2023-12-14 15:23:36,886:INFO:           wurlitzer: Not installed
2023-12-14 15:23:36,886:INFO:PyCaret optional dependencies:
2023-12-14 15:23:36,898:INFO:                shap: Not installed
2023-12-14 15:23:36,899:INFO:           interpret: Not installed
2023-12-14 15:23:36,899:INFO:                umap: Not installed
2023-12-14 15:23:36,899:INFO:     ydata_profiling: Not installed
2023-12-14 15:23:36,899:INFO:  explainerdashboard: Not installed
2023-12-14 15:23:36,899:INFO:             autoviz: Not installed
2023-12-14 15:23:36,899:INFO:           fairlearn: Not installed
2023-12-14 15:23:36,899:INFO:          deepchecks: Not installed
2023-12-14 15:23:36,899:INFO:             xgboost: Not installed
2023-12-14 15:23:36,899:INFO:            catboost: Not installed
2023-12-14 15:23:36,899:INFO:              kmodes: Not installed
2023-12-14 15:23:36,899:INFO:             mlxtend: Not installed
2023-12-14 15:23:36,899:INFO:       statsforecast: Not installed
2023-12-14 15:23:36,899:INFO:        tune_sklearn: Not installed
2023-12-14 15:23:36,899:INFO:                 ray: Not installed
2023-12-14 15:23:36,899:INFO:            hyperopt: Not installed
2023-12-14 15:23:36,899:INFO:              optuna: Not installed
2023-12-14 15:23:36,899:INFO:               skopt: Not installed
2023-12-14 15:23:36,899:INFO:              mlflow: Not installed
2023-12-14 15:23:36,899:INFO:              gradio: Not installed
2023-12-14 15:23:36,899:INFO:             fastapi: Not installed
2023-12-14 15:23:36,899:INFO:             uvicorn: Not installed
2023-12-14 15:23:36,899:INFO:              m2cgen: Not installed
2023-12-14 15:23:36,899:INFO:           evidently: Not installed
2023-12-14 15:23:36,899:INFO:               fugue: Not installed
2023-12-14 15:23:36,899:INFO:           streamlit: Not installed
2023-12-14 15:23:36,899:INFO:             prophet: Not installed
2023-12-14 15:23:36,899:INFO:None
2023-12-14 15:23:36,899:INFO:Set up data.
2023-12-14 15:23:36,904:INFO:Set up folding strategy.
2023-12-14 15:23:36,904:INFO:Set up train/test split.
2023-12-14 15:23:36,906:INFO:Set up index.
2023-12-14 15:23:36,906:INFO:Assigning column types.
2023-12-14 15:23:36,908:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:23:36,909:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:23:36,912:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:23:36,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:23:36,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,006:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,010:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,015:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,070:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,118:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,119:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:23:37,123:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,127:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,223:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,227:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,311:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:23:37,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,423:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,503:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,504:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:23:37,562:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,681:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:23:37,736:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,823:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:23:37,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,858:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:23:37,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:37,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,032:INFO:Preparing preprocessing pipeline...
2023-12-14 15:23:38,032:INFO:Set up simple imputation.
2023-12-14 15:23:38,032:INFO:Set up column name cleaning.
2023-12-14 15:23:38,049:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:23:38,053:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:23:38,053:INFO:Creating final display dataframe.
2023-12-14 15:23:38,113:INFO:Setup _display_container:                     Description             Value
0                    Session id              6183
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              cbdc
2023-12-14 15:23:38,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:23:38,307:INFO:setup() successfully completed in 1.46s...............
2023-12-14 15:23:38,312:INFO:Initializing create_model()
2023-12-14 15:23:38,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:38,312:INFO:Checking exceptions
2023-12-14 15:23:38,314:INFO:Importing libraries
2023-12-14 15:23:38,314:INFO:Copying training dataset
2023-12-14 15:23:38,317:INFO:Defining folds
2023-12-14 15:23:38,317:INFO:Declaring metric variables
2023-12-14 15:23:38,317:INFO:Importing untrained model
2023-12-14 15:23:38,318:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:38,318:INFO:Starting cross validation
2023-12-14 15:23:38,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:42,574:INFO:Calculating mean and std
2023-12-14 15:23:42,575:INFO:Creating metrics dataframe
2023-12-14 15:23:42,577:INFO:Finalizing model
2023-12-14 15:23:42,688:INFO:Uploading results into container
2023-12-14 15:23:42,689:INFO:Uploading model into container now
2023-12-14 15:23:42,695:INFO:_master_model_container: 1
2023-12-14 15:23:42,695:INFO:_display_container: 2
2023-12-14 15:23:42,696:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:42,696:INFO:create_model() successfully completed......................................
2023-12-14 15:23:42,771:INFO:Initializing tune_model()
2023-12-14 15:23:42,771:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6183), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:23:42,771:INFO:Checking exceptions
2023-12-14 15:23:42,774:INFO:Copying training dataset
2023-12-14 15:23:42,775:INFO:Checking base model
2023-12-14 15:23:42,775:INFO:Base model : Extra Trees Regressor
2023-12-14 15:23:42,775:INFO:Declaring metric variables
2023-12-14 15:23:42,776:INFO:Defining Hyperparameters
2023-12-14 15:23:42,847:INFO:Tuning with n_jobs=-1
2023-12-14 15:23:42,847:INFO:Initializing RandomizedSearchCV
2023-12-14 15:23:47,535:INFO:best_params: {'actual_estimator__n_estimators': 110, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2023-12-14 15:23:47,536:INFO:Hyperparameter search completed
2023-12-14 15:23:47,536:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:47,536:INFO:Initializing create_model()
2023-12-14 15:23:47,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6183), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A51F17750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 110, 'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'absolute_error', 'bootstrap': True})
2023-12-14 15:23:47,536:INFO:Checking exceptions
2023-12-14 15:23:47,536:INFO:Importing libraries
2023-12-14 15:23:47,536:INFO:Copying training dataset
2023-12-14 15:23:47,539:INFO:Defining folds
2023-12-14 15:23:47,539:INFO:Declaring metric variables
2023-12-14 15:23:47,540:INFO:Importing untrained model
2023-12-14 15:23:47,540:INFO:Declaring custom model
2023-12-14 15:23:47,540:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:47,540:INFO:Starting cross validation
2023-12-14 15:23:47,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:48,115:INFO:Calculating mean and std
2023-12-14 15:23:48,116:INFO:Creating metrics dataframe
2023-12-14 15:23:48,117:INFO:Finalizing model
2023-12-14 15:23:48,359:INFO:Uploading results into container
2023-12-14 15:23:48,360:INFO:Uploading model into container now
2023-12-14 15:23:48,360:INFO:_master_model_container: 2
2023-12-14 15:23:48,360:INFO:_display_container: 3
2023-12-14 15:23:48,360:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=8,
                    min_impurity_decrease=0.01, min_samples_leaf=4,
                    min_samples_split=9, n_estimators=110, n_jobs=-1,
                    random_state=6183)
2023-12-14 15:23:48,360:INFO:create_model() successfully completed......................................
2023-12-14 15:23:48,437:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:48,437:INFO:choose_better activated
2023-12-14 15:23:48,437:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:48,438:INFO:Initializing create_model()
2023-12-14 15:23:48,438:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6183), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:48,438:INFO:Checking exceptions
2023-12-14 15:23:48,439:INFO:Importing libraries
2023-12-14 15:23:48,439:INFO:Copying training dataset
2023-12-14 15:23:48,441:INFO:Defining folds
2023-12-14 15:23:48,441:INFO:Declaring metric variables
2023-12-14 15:23:48,441:INFO:Importing untrained model
2023-12-14 15:23:48,441:INFO:Declaring custom model
2023-12-14 15:23:48,441:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:48,441:INFO:Starting cross validation
2023-12-14 15:23:48,441:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:48,690:INFO:Calculating mean and std
2023-12-14 15:23:48,690:INFO:Creating metrics dataframe
2023-12-14 15:23:48,692:INFO:Finalizing model
2023-12-14 15:23:48,774:INFO:Uploading results into container
2023-12-14 15:23:48,774:INFO:Uploading model into container now
2023-12-14 15:23:48,774:INFO:_master_model_container: 3
2023-12-14 15:23:48,774:INFO:_display_container: 4
2023-12-14 15:23:48,775:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:48,775:INFO:create_model() successfully completed......................................
2023-12-14 15:23:48,841:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:48,841:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6183) result for R2 is 0.7684
2023-12-14 15:23:48,841:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=8,
                    min_impurity_decrease=0.01, min_samples_leaf=4,
                    min_samples_split=9, n_estimators=110, n_jobs=-1,
                    random_state=6183) result for R2 is 0.6974
2023-12-14 15:23:48,843:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6183) is best model
2023-12-14 15:23:48,843:INFO:choose_better completed
2023-12-14 15:23:48,843:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:23:48,850:INFO:_master_model_container: 3
2023-12-14 15:23:48,850:INFO:_display_container: 3
2023-12-14 15:23:48,850:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:48,850:INFO:tune_model() successfully completed......................................
2023-12-14 15:23:48,927:INFO:Initializing finalize_model()
2023-12-14 15:23:48,927:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6183), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:23:48,927:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:48,929:INFO:Initializing create_model()
2023-12-14 15:23:48,929:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6183), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:48,929:INFO:Checking exceptions
2023-12-14 15:23:48,930:INFO:Importing libraries
2023-12-14 15:23:48,930:INFO:Copying training dataset
2023-12-14 15:23:48,930:INFO:Defining folds
2023-12-14 15:23:48,930:INFO:Declaring metric variables
2023-12-14 15:23:48,930:INFO:Importing untrained model
2023-12-14 15:23:48,930:INFO:Declaring custom model
2023-12-14 15:23:48,930:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:23:48,931:INFO:Cross validation set to False
2023-12-14 15:23:48,931:INFO:Fitting Model
2023-12-14 15:23:49,017:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6183))])
2023-12-14 15:23:49,017:INFO:create_model() successfully completed......................................
2023-12-14 15:23:49,085:INFO:_master_model_container: 3
2023-12-14 15:23:49,085:INFO:_display_container: 3
2023-12-14 15:23:49,088:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6183))])
2023-12-14 15:23:49,088:INFO:finalize_model() successfully completed......................................
2023-12-14 15:23:49,156:INFO:Initializing create_model()
2023-12-14 15:23:49,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:49,156:INFO:Checking exceptions
2023-12-14 15:23:49,158:INFO:Importing libraries
2023-12-14 15:23:49,158:INFO:Copying training dataset
2023-12-14 15:23:49,160:INFO:Defining folds
2023-12-14 15:23:49,160:INFO:Declaring metric variables
2023-12-14 15:23:49,160:INFO:Importing untrained model
2023-12-14 15:23:49,160:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:49,161:INFO:Starting cross validation
2023-12-14 15:23:49,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:49,462:INFO:Calculating mean and std
2023-12-14 15:23:49,463:INFO:Creating metrics dataframe
2023-12-14 15:23:49,464:INFO:Finalizing model
2023-12-14 15:23:49,571:INFO:Uploading results into container
2023-12-14 15:23:49,572:INFO:Uploading model into container now
2023-12-14 15:23:49,578:INFO:_master_model_container: 4
2023-12-14 15:23:49,578:INFO:_display_container: 4
2023-12-14 15:23:49,578:INFO:RandomForestRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:49,578:INFO:create_model() successfully completed......................................
2023-12-14 15:23:49,654:INFO:Initializing tune_model()
2023-12-14 15:23:49,654:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6183), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:23:49,654:INFO:Checking exceptions
2023-12-14 15:23:49,656:INFO:Copying training dataset
2023-12-14 15:23:49,657:INFO:Checking base model
2023-12-14 15:23:49,658:INFO:Base model : Random Forest Regressor
2023-12-14 15:23:49,658:INFO:Declaring metric variables
2023-12-14 15:23:49,658:INFO:Defining Hyperparameters
2023-12-14 15:23:49,730:INFO:Tuning with n_jobs=-1
2023-12-14 15:23:49,730:INFO:Initializing RandomizedSearchCV
2023-12-14 15:23:53,323:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-12-14 15:23:53,323:INFO:Hyperparameter search completed
2023-12-14 15:23:53,323:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:53,323:INFO:Initializing create_model()
2023-12-14 15:23:53,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6183), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019A51FF57D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 6, 'criterion': 'squared_error', 'bootstrap': False})
2023-12-14 15:23:53,324:INFO:Checking exceptions
2023-12-14 15:23:53,324:INFO:Importing libraries
2023-12-14 15:23:53,324:INFO:Copying training dataset
2023-12-14 15:23:53,326:INFO:Defining folds
2023-12-14 15:23:53,326:INFO:Declaring metric variables
2023-12-14 15:23:53,326:INFO:Importing untrained model
2023-12-14 15:23:53,326:INFO:Declaring custom model
2023-12-14 15:23:53,327:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:53,327:INFO:Starting cross validation
2023-12-14 15:23:53,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:53,553:INFO:Calculating mean and std
2023-12-14 15:23:53,554:INFO:Creating metrics dataframe
2023-12-14 15:23:53,555:INFO:Finalizing model
2023-12-14 15:23:53,638:INFO:Uploading results into container
2023-12-14 15:23:53,638:INFO:Uploading model into container now
2023-12-14 15:23:53,639:INFO:_master_model_container: 5
2023-12-14 15:23:53,639:INFO:_display_container: 5
2023-12-14 15:23:53,639:INFO:RandomForestRegressor(bootstrap=False, max_depth=6, max_features='sqrt',
                      min_impurity_decrease=0, min_samples_leaf=4,
                      min_samples_split=9, n_jobs=-1, random_state=6183)
2023-12-14 15:23:53,639:INFO:create_model() successfully completed......................................
2023-12-14 15:23:53,718:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:53,718:INFO:choose_better activated
2023-12-14 15:23:53,718:INFO:SubProcess create_model() called ==================================
2023-12-14 15:23:53,718:INFO:Initializing create_model()
2023-12-14 15:23:53,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6183), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:53,718:INFO:Checking exceptions
2023-12-14 15:23:53,719:INFO:Importing libraries
2023-12-14 15:23:53,719:INFO:Copying training dataset
2023-12-14 15:23:53,721:INFO:Defining folds
2023-12-14 15:23:53,721:INFO:Declaring metric variables
2023-12-14 15:23:53,721:INFO:Importing untrained model
2023-12-14 15:23:53,721:INFO:Declaring custom model
2023-12-14 15:23:53,722:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:53,722:INFO:Starting cross validation
2023-12-14 15:23:53,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:23:54,057:INFO:Calculating mean and std
2023-12-14 15:23:54,058:INFO:Creating metrics dataframe
2023-12-14 15:23:54,059:INFO:Finalizing model
2023-12-14 15:23:54,179:INFO:Uploading results into container
2023-12-14 15:23:54,179:INFO:Uploading model into container now
2023-12-14 15:23:54,180:INFO:_master_model_container: 6
2023-12-14 15:23:54,180:INFO:_display_container: 6
2023-12-14 15:23:54,180:INFO:RandomForestRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:54,180:INFO:create_model() successfully completed......................................
2023-12-14 15:23:54,266:INFO:SubProcess create_model() end ==================================
2023-12-14 15:23:54,266:INFO:RandomForestRegressor(n_jobs=-1, random_state=6183) result for R2 is 0.7618
2023-12-14 15:23:54,267:INFO:RandomForestRegressor(bootstrap=False, max_depth=6, max_features='sqrt',
                      min_impurity_decrease=0, min_samples_leaf=4,
                      min_samples_split=9, n_jobs=-1, random_state=6183) result for R2 is 0.732
2023-12-14 15:23:54,267:INFO:RandomForestRegressor(n_jobs=-1, random_state=6183) is best model
2023-12-14 15:23:54,267:INFO:choose_better completed
2023-12-14 15:23:54,267:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:23:54,274:INFO:_master_model_container: 6
2023-12-14 15:23:54,275:INFO:_display_container: 5
2023-12-14 15:23:54,275:INFO:RandomForestRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:54,275:INFO:tune_model() successfully completed......................................
2023-12-14 15:23:54,370:INFO:Initializing finalize_model()
2023-12-14 15:23:54,370:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6183), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:23:54,370:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=6183)
2023-12-14 15:23:54,372:INFO:Initializing create_model()
2023-12-14 15:23:54,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6183), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:23:54,373:INFO:Checking exceptions
2023-12-14 15:23:54,373:INFO:Importing libraries
2023-12-14 15:23:54,373:INFO:Copying training dataset
2023-12-14 15:23:54,373:INFO:Defining folds
2023-12-14 15:23:54,373:INFO:Declaring metric variables
2023-12-14 15:23:54,373:INFO:Importing untrained model
2023-12-14 15:23:54,373:INFO:Declaring custom model
2023-12-14 15:23:54,374:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:23:54,374:INFO:Cross validation set to False
2023-12-14 15:23:54,374:INFO:Fitting Model
2023-12-14 15:23:54,509:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6183))])
2023-12-14 15:23:54,509:INFO:create_model() successfully completed......................................
2023-12-14 15:23:54,616:INFO:_master_model_container: 6
2023-12-14 15:23:54,617:INFO:_display_container: 5
2023-12-14 15:23:54,621:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6183))])
2023-12-14 15:23:54,622:INFO:finalize_model() successfully completed......................................
2023-12-14 15:23:57,125:INFO:Initializing predict_model()
2023-12-14 15:23:57,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6183))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019A520D0C20>)
2023-12-14 15:23:57,125:INFO:Checking exceptions
2023-12-14 15:23:57,125:INFO:Preloading libraries
2023-12-14 15:23:57,125:INFO:Set up data.
2023-12-14 15:23:57,128:INFO:Set up index.
2023-12-14 15:23:57,239:INFO:Initializing predict_model()
2023-12-14 15:23:57,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019A2A09DCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6183))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019A28EC1300>)
2023-12-14 15:23:57,239:INFO:Checking exceptions
2023-12-14 15:23:57,239:INFO:Preloading libraries
2023-12-14 15:23:57,239:INFO:Set up data.
2023-12-14 15:23:57,242:INFO:Set up index.
2023-12-14 15:24:21,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:24:21,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:24:21,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:24:21,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 15:24:21,193:INFO:PyCaret RegressionExperiment
2023-12-14 15:24:21,193:INFO:Logging name: reg-default-name
2023-12-14 15:24:21,193:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 15:24:21,193:INFO:version 3.2.0
2023-12-14 15:24:21,193:INFO:Initializing setup()
2023-12-14 15:24:21,193:INFO:self.USI: f840
2023-12-14 15:24:21,193:INFO:self._variable_keys: {'pipeline', 'exp_name_log', 'fold_shuffle_param', 'gpu_param', '_ml_usecase', 'X_train', '_available_plots', 'fold_groups_param', 'transform_target_param', 'y_train', 'y', 'y_test', 'html_param', 'fold_generator', 'X_test', 'seed', 'USI', 'target_param', 'logging_param', 'X', 'n_jobs_param', 'exp_id', 'data', 'memory', 'gpu_n_jobs_param', 'log_plots_param', 'idx'}
2023-12-14 15:24:21,193:INFO:Checking environment
2023-12-14 15:24:21,193:INFO:python_version: 3.11.0
2023-12-14 15:24:21,193:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 15:24:21,193:INFO:machine: AMD64
2023-12-14 15:24:21,203:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 15:24:21,207:INFO:Memory: svmem(total=14877257728, available=3131461632, percent=79.0, used=11745796096, free=3131461632)
2023-12-14 15:24:21,207:INFO:Physical Core: 8
2023-12-14 15:24:21,207:INFO:Logical Core: 16
2023-12-14 15:24:21,208:INFO:Checking libraries
2023-12-14 15:24:21,208:INFO:System:
2023-12-14 15:24:21,208:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 15:24:21,208:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 15:24:21,208:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 15:24:21,208:INFO:PyCaret required dependencies:
2023-12-14 15:24:21,225:INFO:                 pip: 22.3
2023-12-14 15:24:21,225:INFO:          setuptools: 65.5.0
2023-12-14 15:24:21,225:INFO:             pycaret: 3.2.0
2023-12-14 15:24:21,225:INFO:             IPython: 8.18.1
2023-12-14 15:24:21,225:INFO:          ipywidgets: 8.1.1
2023-12-14 15:24:21,225:INFO:                tqdm: 4.66.1
2023-12-14 15:24:21,225:INFO:               numpy: 1.25.2
2023-12-14 15:24:21,225:INFO:              pandas: 1.5.3
2023-12-14 15:24:21,225:INFO:              jinja2: 3.1.2
2023-12-14 15:24:21,225:INFO:               scipy: 1.10.1
2023-12-14 15:24:21,225:INFO:              joblib: 1.3.2
2023-12-14 15:24:21,225:INFO:             sklearn: 1.2.2
2023-12-14 15:24:21,225:INFO:                pyod: 1.1.2
2023-12-14 15:24:21,225:INFO:            imblearn: 0.11.0
2023-12-14 15:24:21,225:INFO:   category_encoders: 2.6.3
2023-12-14 15:24:21,225:INFO:            lightgbm: 4.1.0
2023-12-14 15:24:21,225:INFO:               numba: 0.58.1
2023-12-14 15:24:21,225:INFO:            requests: 2.31.0
2023-12-14 15:24:21,225:INFO:          matplotlib: 3.6.0
2023-12-14 15:24:21,225:INFO:          scikitplot: 0.3.7
2023-12-14 15:24:21,225:INFO:         yellowbrick: 1.5
2023-12-14 15:24:21,225:INFO:              plotly: 5.18.0
2023-12-14 15:24:21,225:INFO:    plotly-resampler: Not installed
2023-12-14 15:24:21,226:INFO:             kaleido: 0.2.1
2023-12-14 15:24:21,226:INFO:           schemdraw: 0.15
2023-12-14 15:24:21,226:INFO:         statsmodels: 0.14.0
2023-12-14 15:24:21,226:INFO:              sktime: 0.21.1
2023-12-14 15:24:21,226:INFO:               tbats: 1.1.3
2023-12-14 15:24:21,226:INFO:            pmdarima: 2.0.4
2023-12-14 15:24:21,226:INFO:              psutil: 5.9.6
2023-12-14 15:24:21,226:INFO:          markupsafe: 2.1.3
2023-12-14 15:24:21,226:INFO:             pickle5: Not installed
2023-12-14 15:24:21,226:INFO:         cloudpickle: 3.0.0
2023-12-14 15:24:21,226:INFO:         deprecation: 2.1.0
2023-12-14 15:24:21,226:INFO:              xxhash: 3.4.1
2023-12-14 15:24:21,226:INFO:           wurlitzer: Not installed
2023-12-14 15:24:21,226:INFO:PyCaret optional dependencies:
2023-12-14 15:24:21,239:INFO:                shap: Not installed
2023-12-14 15:24:21,239:INFO:           interpret: Not installed
2023-12-14 15:24:21,239:INFO:                umap: Not installed
2023-12-14 15:24:21,239:INFO:     ydata_profiling: Not installed
2023-12-14 15:24:21,239:INFO:  explainerdashboard: Not installed
2023-12-14 15:24:21,239:INFO:             autoviz: Not installed
2023-12-14 15:24:21,239:INFO:           fairlearn: Not installed
2023-12-14 15:24:21,239:INFO:          deepchecks: Not installed
2023-12-14 15:24:21,239:INFO:             xgboost: Not installed
2023-12-14 15:24:21,239:INFO:            catboost: Not installed
2023-12-14 15:24:21,239:INFO:              kmodes: Not installed
2023-12-14 15:24:21,239:INFO:             mlxtend: Not installed
2023-12-14 15:24:21,239:INFO:       statsforecast: Not installed
2023-12-14 15:24:21,239:INFO:        tune_sklearn: Not installed
2023-12-14 15:24:21,239:INFO:                 ray: Not installed
2023-12-14 15:24:21,239:INFO:            hyperopt: Not installed
2023-12-14 15:24:21,239:INFO:              optuna: Not installed
2023-12-14 15:24:21,239:INFO:               skopt: Not installed
2023-12-14 15:24:21,239:INFO:              mlflow: Not installed
2023-12-14 15:24:21,239:INFO:              gradio: Not installed
2023-12-14 15:24:21,239:INFO:             fastapi: Not installed
2023-12-14 15:24:21,239:INFO:             uvicorn: Not installed
2023-12-14 15:24:21,239:INFO:              m2cgen: Not installed
2023-12-14 15:24:21,239:INFO:           evidently: Not installed
2023-12-14 15:24:21,239:INFO:               fugue: Not installed
2023-12-14 15:24:21,239:INFO:           streamlit: Not installed
2023-12-14 15:24:21,239:INFO:             prophet: Not installed
2023-12-14 15:24:21,239:INFO:None
2023-12-14 15:24:21,239:INFO:Set up data.
2023-12-14 15:24:21,243:INFO:Set up folding strategy.
2023-12-14 15:24:21,243:INFO:Set up train/test split.
2023-12-14 15:24:21,246:INFO:Set up index.
2023-12-14 15:24:21,246:INFO:Assigning column types.
2023-12-14 15:24:21,248:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 15:24:21,248:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,252:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,255:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,339:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,340:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,344:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,348:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,436:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 15:24:21,439:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,443:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,486:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,525:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,528:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,573:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,607:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,608:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 15:24:21,615:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,658:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,703:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,789:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 15:24:21,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,959:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 15:24:21,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:21,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 15:24:22,011:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:22,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,100:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 15:24:22,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,142:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 15:24:22,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,344:INFO:Preparing preprocessing pipeline...
2023-12-14 15:24:22,344:INFO:Set up simple imputation.
2023-12-14 15:24:22,345:INFO:Set up column name cleaning.
2023-12-14 15:24:22,362:INFO:Finished creating preprocessing pipeline.
2023-12-14 15:24:22,366:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 15:24:22,366:INFO:Creating final display dataframe.
2023-12-14 15:24:22,412:INFO:Setup _display_container:                     Description             Value
0                    Session id              4012
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f840
2023-12-14 15:24:22,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 15:24:22,596:INFO:setup() successfully completed in 1.41s...............
2023-12-14 15:24:22,601:INFO:Initializing create_model()
2023-12-14 15:24:22,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:24:22,601:INFO:Checking exceptions
2023-12-14 15:24:22,603:INFO:Importing libraries
2023-12-14 15:24:22,603:INFO:Copying training dataset
2023-12-14 15:24:22,605:INFO:Defining folds
2023-12-14 15:24:22,605:INFO:Declaring metric variables
2023-12-14 15:24:22,605:INFO:Importing untrained model
2023-12-14 15:24:22,606:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:24:22,606:INFO:Starting cross validation
2023-12-14 15:24:22,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:24:26,809:INFO:Calculating mean and std
2023-12-14 15:24:26,810:INFO:Creating metrics dataframe
2023-12-14 15:24:26,813:INFO:Finalizing model
2023-12-14 15:24:26,950:INFO:Uploading results into container
2023-12-14 15:24:26,950:INFO:Uploading model into container now
2023-12-14 15:24:26,957:INFO:_master_model_container: 1
2023-12-14 15:24:26,958:INFO:_display_container: 2
2023-12-14 15:24:26,958:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4012)
2023-12-14 15:24:26,958:INFO:create_model() successfully completed......................................
2023-12-14 15:24:27,041:INFO:Initializing tune_model()
2023-12-14 15:24:27,041:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4012), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:24:27,041:INFO:Checking exceptions
2023-12-14 15:24:27,044:INFO:Copying training dataset
2023-12-14 15:24:27,045:INFO:Checking base model
2023-12-14 15:24:27,045:INFO:Base model : Extra Trees Regressor
2023-12-14 15:24:27,046:INFO:Declaring metric variables
2023-12-14 15:24:27,046:INFO:Defining Hyperparameters
2023-12-14 15:24:27,119:INFO:Tuning with n_jobs=-1
2023-12-14 15:24:27,119:INFO:Initializing RandomizedSearchCV
2023-12-14 15:24:32,136:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-14 15:24:32,136:INFO:Hyperparameter search completed
2023-12-14 15:24:32,136:INFO:SubProcess create_model() called ==================================
2023-12-14 15:24:32,137:INFO:Initializing create_model()
2023-12-14 15:24:32,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4012), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD2F34E0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-14 15:24:32,137:INFO:Checking exceptions
2023-12-14 15:24:32,137:INFO:Importing libraries
2023-12-14 15:24:32,137:INFO:Copying training dataset
2023-12-14 15:24:32,139:INFO:Defining folds
2023-12-14 15:24:32,140:INFO:Declaring metric variables
2023-12-14 15:24:32,140:INFO:Importing untrained model
2023-12-14 15:24:32,140:INFO:Declaring custom model
2023-12-14 15:24:32,140:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:24:32,140:INFO:Starting cross validation
2023-12-14 15:24:32,141:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:24:32,314:INFO:Calculating mean and std
2023-12-14 15:24:32,315:INFO:Creating metrics dataframe
2023-12-14 15:24:32,316:INFO:Finalizing model
2023-12-14 15:24:32,376:INFO:Uploading results into container
2023-12-14 15:24:32,377:INFO:Uploading model into container now
2023-12-14 15:24:32,377:INFO:_master_model_container: 2
2023-12-14 15:24:32,377:INFO:_display_container: 3
2023-12-14 15:24:32,377:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012)
2023-12-14 15:24:32,377:INFO:create_model() successfully completed......................................
2023-12-14 15:24:32,453:INFO:SubProcess create_model() end ==================================
2023-12-14 15:24:32,453:INFO:choose_better activated
2023-12-14 15:24:32,453:INFO:SubProcess create_model() called ==================================
2023-12-14 15:24:32,453:INFO:Initializing create_model()
2023-12-14 15:24:32,453:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4012), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:24:32,453:INFO:Checking exceptions
2023-12-14 15:24:32,454:INFO:Importing libraries
2023-12-14 15:24:32,454:INFO:Copying training dataset
2023-12-14 15:24:32,456:INFO:Defining folds
2023-12-14 15:24:32,456:INFO:Declaring metric variables
2023-12-14 15:24:32,456:INFO:Importing untrained model
2023-12-14 15:24:32,456:INFO:Declaring custom model
2023-12-14 15:24:32,457:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:24:32,457:INFO:Starting cross validation
2023-12-14 15:24:32,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:24:32,710:INFO:Calculating mean and std
2023-12-14 15:24:32,710:INFO:Creating metrics dataframe
2023-12-14 15:24:32,712:INFO:Finalizing model
2023-12-14 15:24:32,804:INFO:Uploading results into container
2023-12-14 15:24:32,805:INFO:Uploading model into container now
2023-12-14 15:24:32,805:INFO:_master_model_container: 3
2023-12-14 15:24:32,805:INFO:_display_container: 4
2023-12-14 15:24:32,805:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4012)
2023-12-14 15:24:32,805:INFO:create_model() successfully completed......................................
2023-12-14 15:24:32,873:INFO:SubProcess create_model() end ==================================
2023-12-14 15:24:32,874:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4012) result for R2 is 0.733
2023-12-14 15:24:32,874:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012) result for R2 is 0.7345
2023-12-14 15:24:32,874:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012) is best model
2023-12-14 15:24:32,874:INFO:choose_better completed
2023-12-14 15:24:32,882:INFO:_master_model_container: 3
2023-12-14 15:24:32,882:INFO:_display_container: 3
2023-12-14 15:24:32,882:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012)
2023-12-14 15:24:32,882:INFO:tune_model() successfully completed......................................
2023-12-14 15:24:32,956:INFO:Initializing finalize_model()
2023-12-14 15:24:32,956:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:24:32,957:INFO:Finalizing ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012)
2023-12-14 15:24:32,959:INFO:Initializing create_model()
2023-12-14 15:24:32,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                    n_jobs=-1, random_state=4012), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:24:32,959:INFO:Checking exceptions
2023-12-14 15:24:32,959:INFO:Importing libraries
2023-12-14 15:24:32,959:INFO:Copying training dataset
2023-12-14 15:24:32,960:INFO:Defining folds
2023-12-14 15:24:32,960:INFO:Declaring metric variables
2023-12-14 15:24:32,960:INFO:Importing untrained model
2023-12-14 15:24:32,960:INFO:Declaring custom model
2023-12-14 15:24:32,960:INFO:Extra Trees Regressor Imported successfully
2023-12-14 15:24:32,961:INFO:Cross validation set to False
2023-12-14 15:24:32,961:INFO:Fitting Model
2023-12-14 15:24:33,014:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))])
2023-12-14 15:24:33,015:INFO:create_model() successfully completed......................................
2023-12-14 15:24:33,086:INFO:_master_model_container: 3
2023-12-14 15:24:33,086:INFO:_display_container: 3
2023-12-14 15:24:33,090:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))])
2023-12-14 15:24:33,090:INFO:finalize_model() successfully completed......................................
2023-12-14 15:24:33,160:INFO:Initializing create_model()
2023-12-14 15:24:33,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:24:33,160:INFO:Checking exceptions
2023-12-14 15:24:33,162:INFO:Importing libraries
2023-12-14 15:24:33,162:INFO:Copying training dataset
2023-12-14 15:24:33,165:INFO:Defining folds
2023-12-14 15:24:33,165:INFO:Declaring metric variables
2023-12-14 15:24:33,165:INFO:Importing untrained model
2023-12-14 15:24:33,165:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:24:33,165:INFO:Starting cross validation
2023-12-14 15:24:33,166:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:24:33,518:INFO:Calculating mean and std
2023-12-14 15:24:33,518:INFO:Creating metrics dataframe
2023-12-14 15:24:33,520:INFO:Finalizing model
2023-12-14 15:24:33,637:INFO:Uploading results into container
2023-12-14 15:24:33,637:INFO:Uploading model into container now
2023-12-14 15:24:33,644:INFO:_master_model_container: 4
2023-12-14 15:24:33,644:INFO:_display_container: 4
2023-12-14 15:24:33,645:INFO:RandomForestRegressor(n_jobs=-1, random_state=4012)
2023-12-14 15:24:33,645:INFO:create_model() successfully completed......................................
2023-12-14 15:24:33,730:INFO:Initializing tune_model()
2023-12-14 15:24:33,730:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4012), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-14 15:24:33,730:INFO:Checking exceptions
2023-12-14 15:24:33,732:INFO:Copying training dataset
2023-12-14 15:24:33,734:INFO:Checking base model
2023-12-14 15:24:33,734:INFO:Base model : Random Forest Regressor
2023-12-14 15:24:33,734:INFO:Declaring metric variables
2023-12-14 15:24:33,734:INFO:Defining Hyperparameters
2023-12-14 15:24:33,816:INFO:Tuning with n_jobs=-1
2023-12-14 15:24:33,816:INFO:Initializing RandomizedSearchCV
2023-12-14 15:24:37,718:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2023-12-14 15:24:37,718:INFO:Hyperparameter search completed
2023-12-14 15:24:37,718:INFO:SubProcess create_model() called ==================================
2023-12-14 15:24:37,719:INFO:Initializing create_model()
2023-12-14 15:24:37,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4012), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD2DE59190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2023-12-14 15:24:37,719:INFO:Checking exceptions
2023-12-14 15:24:37,719:INFO:Importing libraries
2023-12-14 15:24:37,719:INFO:Copying training dataset
2023-12-14 15:24:37,721:INFO:Defining folds
2023-12-14 15:24:37,721:INFO:Declaring metric variables
2023-12-14 15:24:37,721:INFO:Importing untrained model
2023-12-14 15:24:37,722:INFO:Declaring custom model
2023-12-14 15:24:37,722:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:24:37,722:INFO:Starting cross validation
2023-12-14 15:24:37,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:24:37,930:INFO:Calculating mean and std
2023-12-14 15:24:37,931:INFO:Creating metrics dataframe
2023-12-14 15:24:37,933:INFO:Finalizing model
2023-12-14 15:24:37,998:INFO:Uploading results into container
2023-12-14 15:24:37,998:INFO:Uploading model into container now
2023-12-14 15:24:37,999:INFO:_master_model_container: 5
2023-12-14 15:24:37,999:INFO:_display_container: 5
2023-12-14 15:24:37,999:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.01,
                      min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                      n_jobs=-1, random_state=4012)
2023-12-14 15:24:37,999:INFO:create_model() successfully completed......................................
2023-12-14 15:24:38,090:INFO:SubProcess create_model() end ==================================
2023-12-14 15:24:38,090:INFO:choose_better activated
2023-12-14 15:24:38,090:INFO:SubProcess create_model() called ==================================
2023-12-14 15:24:38,091:INFO:Initializing create_model()
2023-12-14 15:24:38,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4012), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:24:38,091:INFO:Checking exceptions
2023-12-14 15:24:38,092:INFO:Importing libraries
2023-12-14 15:24:38,092:INFO:Copying training dataset
2023-12-14 15:24:38,094:INFO:Defining folds
2023-12-14 15:24:38,094:INFO:Declaring metric variables
2023-12-14 15:24:38,094:INFO:Importing untrained model
2023-12-14 15:24:38,094:INFO:Declaring custom model
2023-12-14 15:24:38,095:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:24:38,095:INFO:Starting cross validation
2023-12-14 15:24:38,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-14 15:24:38,481:INFO:Calculating mean and std
2023-12-14 15:24:38,481:INFO:Creating metrics dataframe
2023-12-14 15:24:38,483:INFO:Finalizing model
2023-12-14 15:24:38,609:INFO:Uploading results into container
2023-12-14 15:24:38,609:INFO:Uploading model into container now
2023-12-14 15:24:38,609:INFO:_master_model_container: 6
2023-12-14 15:24:38,610:INFO:_display_container: 6
2023-12-14 15:24:38,610:INFO:RandomForestRegressor(n_jobs=-1, random_state=4012)
2023-12-14 15:24:38,610:INFO:create_model() successfully completed......................................
2023-12-14 15:24:38,678:INFO:SubProcess create_model() end ==================================
2023-12-14 15:24:38,678:INFO:RandomForestRegressor(n_jobs=-1, random_state=4012) result for R2 is 0.7582
2023-12-14 15:24:38,679:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.01,
                      min_samples_leaf=2, min_samples_split=5, n_estimators=40,
                      n_jobs=-1, random_state=4012) result for R2 is 0.7387
2023-12-14 15:24:38,679:INFO:RandomForestRegressor(n_jobs=-1, random_state=4012) is best model
2023-12-14 15:24:38,679:INFO:choose_better completed
2023-12-14 15:24:38,679:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-12-14 15:24:38,686:INFO:_master_model_container: 6
2023-12-14 15:24:38,686:INFO:_display_container: 5
2023-12-14 15:24:38,686:INFO:RandomForestRegressor(n_jobs=-1, random_state=4012)
2023-12-14 15:24:38,686:INFO:tune_model() successfully completed......................................
2023-12-14 15:24:38,761:INFO:Initializing finalize_model()
2023-12-14 15:24:38,761:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4012), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-14 15:24:38,761:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=4012)
2023-12-14 15:24:38,763:INFO:Initializing create_model()
2023-12-14 15:24:38,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4012), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-14 15:24:38,763:INFO:Checking exceptions
2023-12-14 15:24:38,764:INFO:Importing libraries
2023-12-14 15:24:38,764:INFO:Copying training dataset
2023-12-14 15:24:38,764:INFO:Defining folds
2023-12-14 15:24:38,764:INFO:Declaring metric variables
2023-12-14 15:24:38,764:INFO:Importing untrained model
2023-12-14 15:24:38,764:INFO:Declaring custom model
2023-12-14 15:24:38,764:INFO:Random Forest Regressor Imported successfully
2023-12-14 15:24:38,765:INFO:Cross validation set to False
2023-12-14 15:24:38,765:INFO:Fitting Model
2023-12-14 15:24:38,885:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))])
2023-12-14 15:24:38,885:INFO:create_model() successfully completed......................................
2023-12-14 15:24:38,953:INFO:_master_model_container: 6
2023-12-14 15:24:38,953:INFO:_display_container: 5
2023-12-14 15:24:38,957:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))])
2023-12-14 15:24:38,957:INFO:finalize_model() successfully completed......................................
2023-12-14 15:24:41,116:INFO:Initializing predict_model()
2023-12-14 15:24:41,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF0F40>)
2023-12-14 15:24:41,116:INFO:Checking exceptions
2023-12-14 15:24:41,116:INFO:Preloading libraries
2023-12-14 15:24:41,116:INFO:Set up data.
2023-12-14 15:24:41,119:INFO:Set up index.
2023-12-14 15:24:41,220:INFO:Initializing predict_model()
2023-12-14 15:24:41,220:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF0F40>)
2023-12-14 15:24:41,221:INFO:Checking exceptions
2023-12-14 15:24:41,221:INFO:Preloading libraries
2023-12-14 15:24:41,221:INFO:Set up data.
2023-12-14 15:24:41,223:INFO:Set up index.
2023-12-14 15:29:17,738:INFO:Initializing predict_model()
2023-12-14 15:29:17,738:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2D40>)
2023-12-14 15:29:17,738:INFO:Checking exceptions
2023-12-14 15:29:17,738:INFO:Preloading libraries
2023-12-14 15:29:17,738:INFO:Set up data.
2023-12-14 15:29:17,740:INFO:Set up index.
2023-12-14 15:29:17,836:INFO:Initializing predict_model()
2023-12-14 15:29:17,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2D40>)
2023-12-14 15:29:17,837:INFO:Checking exceptions
2023-12-14 15:29:17,837:INFO:Preloading libraries
2023-12-14 15:29:17,837:INFO:Set up data.
2023-12-14 15:29:17,839:INFO:Set up index.
2023-12-14 15:31:51,456:INFO:Initializing predict_model()
2023-12-14 15:31:51,456:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF27A0>)
2023-12-14 15:31:51,456:INFO:Checking exceptions
2023-12-14 15:31:51,456:INFO:Preloading libraries
2023-12-14 15:31:51,456:INFO:Set up data.
2023-12-14 15:31:51,458:INFO:Set up index.
2023-12-14 15:31:51,553:INFO:Initializing predict_model()
2023-12-14 15:31:51,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF27A0>)
2023-12-14 15:31:51,554:INFO:Checking exceptions
2023-12-14 15:31:51,554:INFO:Preloading libraries
2023-12-14 15:31:51,554:INFO:Set up data.
2023-12-14 15:31:51,556:INFO:Set up index.
2023-12-14 15:33:12,945:INFO:Initializing predict_model()
2023-12-14 15:33:12,945:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF25C0>)
2023-12-14 15:33:12,945:INFO:Checking exceptions
2023-12-14 15:33:12,945:INFO:Preloading libraries
2023-12-14 15:33:12,946:INFO:Set up data.
2023-12-14 15:33:12,948:INFO:Set up index.
2023-12-14 15:33:13,042:INFO:Initializing predict_model()
2023-12-14 15:33:13,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2DEFA700>)
2023-12-14 15:33:13,043:INFO:Checking exceptions
2023-12-14 15:33:13,043:INFO:Preloading libraries
2023-12-14 15:33:13,043:INFO:Set up data.
2023-12-14 15:33:13,045:INFO:Set up index.
2023-12-14 15:33:30,014:INFO:Initializing predict_model()
2023-12-14 15:33:30,014:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2E80>)
2023-12-14 15:33:30,014:INFO:Checking exceptions
2023-12-14 15:33:30,014:INFO:Preloading libraries
2023-12-14 15:33:30,014:INFO:Set up data.
2023-12-14 15:33:30,016:INFO:Set up index.
2023-12-14 15:33:30,110:INFO:Initializing predict_model()
2023-12-14 15:33:30,110:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2E80>)
2023-12-14 15:33:30,110:INFO:Checking exceptions
2023-12-14 15:33:30,110:INFO:Preloading libraries
2023-12-14 15:33:30,111:INFO:Set up data.
2023-12-14 15:33:30,113:INFO:Set up index.
2023-12-14 15:34:15,718:INFO:Initializing predict_model()
2023-12-14 15:34:15,718:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2E80>)
2023-12-14 15:34:15,718:INFO:Checking exceptions
2023-12-14 15:34:15,718:INFO:Preloading libraries
2023-12-14 15:34:15,718:INFO:Set up data.
2023-12-14 15:34:15,720:INFO:Set up index.
2023-12-14 15:34:15,817:INFO:Initializing predict_model()
2023-12-14 15:34:15,817:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2DEFA700>)
2023-12-14 15:34:15,817:INFO:Checking exceptions
2023-12-14 15:34:15,817:INFO:Preloading libraries
2023-12-14 15:34:15,817:INFO:Set up data.
2023-12-14 15:34:15,820:INFO:Set up index.
2023-12-14 15:34:34,503:INFO:Initializing predict_model()
2023-12-14 15:34:34,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(bootstrap=True, max_depth=10,
                                     min_impurity_decrease=0.01,
                                     min_samples_leaf=2, min_samples_split=5,
                                     n_estimators=40, n_jobs=-1,
                                     random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2700>)
2023-12-14 15:34:34,503:INFO:Checking exceptions
2023-12-14 15:34:34,503:INFO:Preloading libraries
2023-12-14 15:34:34,503:INFO:Set up data.
2023-12-14 15:34:34,505:INFO:Set up index.
2023-12-14 15:34:34,598:INFO:Initializing predict_model()
2023-12-14 15:34:34,598:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD07D35690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4012))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD2FBF2700>)
2023-12-14 15:34:34,598:INFO:Checking exceptions
2023-12-14 15:34:34,598:INFO:Preloading libraries
2023-12-14 15:34:34,598:INFO:Set up data.
2023-12-14 15:34:34,601:INFO:Set up index.
2023-12-14 18:35:45,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:35:45,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:35:45,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:35:45,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:35:45,998:INFO:PyCaret RegressionExperiment
2023-12-14 18:35:45,999:INFO:Logging name: reg-default-name
2023-12-14 18:35:45,999:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 18:35:45,999:INFO:version 3.2.0
2023-12-14 18:35:46,000:INFO:Initializing setup()
2023-12-14 18:35:46,000:INFO:self.USI: 3560
2023-12-14 18:35:46,000:INFO:self._variable_keys: {'exp_id', 'data', 'y', 'y_train', 'gpu_param', 'X_train', 'X', 'transform_target_param', 'fold_groups_param', 'html_param', '_available_plots', 'target_param', 'y_test', 'fold_shuffle_param', 'logging_param', 'X_test', 'idx', 'log_plots_param', 'pipeline', 'USI', 'fold_generator', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'exp_name_log'}
2023-12-14 18:35:46,000:INFO:Checking environment
2023-12-14 18:35:46,000:INFO:python_version: 3.11.0
2023-12-14 18:35:46,001:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 18:35:46,001:INFO:machine: AMD64
2023-12-14 18:35:46,012:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 18:35:46,017:INFO:Memory: svmem(total=14877257728, available=2840104960, percent=80.9, used=12037152768, free=2840104960)
2023-12-14 18:35:46,017:INFO:Physical Core: 8
2023-12-14 18:35:46,018:INFO:Logical Core: 16
2023-12-14 18:35:46,018:INFO:Checking libraries
2023-12-14 18:35:46,018:INFO:System:
2023-12-14 18:35:46,018:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 18:35:46,018:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 18:35:46,018:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 18:35:46,018:INFO:PyCaret required dependencies:
2023-12-14 18:35:46,059:INFO:                 pip: 22.3
2023-12-14 18:35:46,059:INFO:          setuptools: 65.5.0
2023-12-14 18:35:46,059:INFO:             pycaret: 3.2.0
2023-12-14 18:35:46,059:INFO:             IPython: 8.18.1
2023-12-14 18:35:46,059:INFO:          ipywidgets: 8.1.1
2023-12-14 18:35:46,059:INFO:                tqdm: 4.66.1
2023-12-14 18:35:46,059:INFO:               numpy: 1.25.2
2023-12-14 18:35:46,059:INFO:              pandas: 1.5.3
2023-12-14 18:35:46,059:INFO:              jinja2: 3.1.2
2023-12-14 18:35:46,059:INFO:               scipy: 1.10.1
2023-12-14 18:35:46,059:INFO:              joblib: 1.3.2
2023-12-14 18:35:46,059:INFO:             sklearn: 1.2.2
2023-12-14 18:35:46,059:INFO:                pyod: 1.1.2
2023-12-14 18:35:46,059:INFO:            imblearn: 0.11.0
2023-12-14 18:35:46,059:INFO:   category_encoders: 2.6.3
2023-12-14 18:35:46,059:INFO:            lightgbm: 4.1.0
2023-12-14 18:35:46,059:INFO:               numba: 0.58.1
2023-12-14 18:35:46,059:INFO:            requests: 2.31.0
2023-12-14 18:35:46,059:INFO:          matplotlib: 3.6.0
2023-12-14 18:35:46,059:INFO:          scikitplot: 0.3.7
2023-12-14 18:35:46,059:INFO:         yellowbrick: 1.5
2023-12-14 18:35:46,059:INFO:              plotly: 5.18.0
2023-12-14 18:35:46,059:INFO:    plotly-resampler: Not installed
2023-12-14 18:35:46,059:INFO:             kaleido: 0.2.1
2023-12-14 18:35:46,059:INFO:           schemdraw: 0.15
2023-12-14 18:35:46,059:INFO:         statsmodels: 0.14.0
2023-12-14 18:35:46,059:INFO:              sktime: 0.21.1
2023-12-14 18:35:46,060:INFO:               tbats: 1.1.3
2023-12-14 18:35:46,060:INFO:            pmdarima: 2.0.4
2023-12-14 18:35:46,060:INFO:              psutil: 5.9.6
2023-12-14 18:35:46,060:INFO:          markupsafe: 2.1.3
2023-12-14 18:35:46,060:INFO:             pickle5: Not installed
2023-12-14 18:35:46,060:INFO:         cloudpickle: 3.0.0
2023-12-14 18:35:46,060:INFO:         deprecation: 2.1.0
2023-12-14 18:35:46,060:INFO:              xxhash: 3.4.1
2023-12-14 18:35:46,060:INFO:           wurlitzer: Not installed
2023-12-14 18:35:46,060:INFO:PyCaret optional dependencies:
2023-12-14 18:35:46,073:INFO:                shap: Not installed
2023-12-14 18:35:46,073:INFO:           interpret: Not installed
2023-12-14 18:35:46,073:INFO:                umap: Not installed
2023-12-14 18:35:46,073:INFO:     ydata_profiling: Not installed
2023-12-14 18:35:46,073:INFO:  explainerdashboard: Not installed
2023-12-14 18:35:46,073:INFO:             autoviz: Not installed
2023-12-14 18:35:46,073:INFO:           fairlearn: Not installed
2023-12-14 18:35:46,073:INFO:          deepchecks: Not installed
2023-12-14 18:35:46,073:INFO:             xgboost: Not installed
2023-12-14 18:35:46,073:INFO:            catboost: Not installed
2023-12-14 18:35:46,073:INFO:              kmodes: Not installed
2023-12-14 18:35:46,073:INFO:             mlxtend: Not installed
2023-12-14 18:35:46,073:INFO:       statsforecast: Not installed
2023-12-14 18:35:46,073:INFO:        tune_sklearn: Not installed
2023-12-14 18:35:46,073:INFO:                 ray: Not installed
2023-12-14 18:35:46,073:INFO:            hyperopt: Not installed
2023-12-14 18:35:46,073:INFO:              optuna: Not installed
2023-12-14 18:35:46,074:INFO:               skopt: Not installed
2023-12-14 18:35:46,074:INFO:              mlflow: Not installed
2023-12-14 18:35:46,074:INFO:              gradio: Not installed
2023-12-14 18:35:46,074:INFO:             fastapi: Not installed
2023-12-14 18:35:46,074:INFO:             uvicorn: Not installed
2023-12-14 18:35:46,074:INFO:              m2cgen: Not installed
2023-12-14 18:35:46,074:INFO:           evidently: Not installed
2023-12-14 18:35:46,074:INFO:               fugue: Not installed
2023-12-14 18:35:46,074:INFO:           streamlit: Not installed
2023-12-14 18:35:46,074:INFO:             prophet: Not installed
2023-12-14 18:35:46,074:INFO:None
2023-12-14 18:35:46,074:INFO:Set up data.
2023-12-14 18:35:46,078:INFO:Set up folding strategy.
2023-12-14 18:35:46,078:INFO:Set up train/test split.
2023-12-14 18:35:46,081:INFO:Set up index.
2023-12-14 18:35:46,081:INFO:Assigning column types.
2023-12-14 18:35:46,083:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 18:35:46,084:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,087:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,147:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,185:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,189:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,193:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,239:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,274:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,275:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 18:35:46,278:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,282:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,365:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,369:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,413:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,447:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,449:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 18:35:46,456:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,495:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,540:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,623:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 18:35:46,675:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,797:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 18:35:46,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:35:46,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:46,965:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 18:35:47,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,134:INFO:Preparing preprocessing pipeline...
2023-12-14 18:35:47,134:INFO:Set up simple imputation.
2023-12-14 18:35:47,149:INFO:Set up column name cleaning.
2023-12-14 18:35:47,165:INFO:Finished creating preprocessing pipeline.
2023-12-14 18:35:47,165:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 18:35:47,165:INFO:Creating final display dataframe.
2023-12-14 18:35:47,214:INFO:Setup _display_container:                     Description             Value
0                    Session id              1107
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3560
2023-12-14 18:35:47,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:35:47,396:INFO:setup() successfully completed in 1.4s...............
2023-12-14 18:36:11,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:36:11,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:36:11,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:36:11,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:36:11,830:INFO:PyCaret RegressionExperiment
2023-12-14 18:36:11,830:INFO:Logging name: reg-default-name
2023-12-14 18:36:11,830:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 18:36:11,830:INFO:version 3.2.0
2023-12-14 18:36:11,830:INFO:Initializing setup()
2023-12-14 18:36:11,830:INFO:self.USI: ce39
2023-12-14 18:36:11,830:INFO:self._variable_keys: {'idx', 'y_train', 'exp_name_log', 'logging_param', 'pipeline', 'exp_id', 'transform_target_param', 'USI', 'X_test', 'html_param', 'log_plots_param', 'X_train', 'target_param', 'fold_generator', 'data', 'gpu_param', 'y_test', 'X', 'memory', 'y', 'fold_shuffle_param', '_available_plots', '_ml_usecase', 'gpu_n_jobs_param', 'fold_groups_param', 'seed', 'n_jobs_param'}
2023-12-14 18:36:11,830:INFO:Checking environment
2023-12-14 18:36:11,830:INFO:python_version: 3.11.0
2023-12-14 18:36:11,830:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 18:36:11,830:INFO:machine: AMD64
2023-12-14 18:36:11,837:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 18:36:11,846:INFO:Memory: svmem(total=14877257728, available=2871234560, percent=80.7, used=12006023168, free=2871234560)
2023-12-14 18:36:11,846:INFO:Physical Core: 8
2023-12-14 18:36:11,846:INFO:Logical Core: 16
2023-12-14 18:36:11,846:INFO:Checking libraries
2023-12-14 18:36:11,846:INFO:System:
2023-12-14 18:36:11,846:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 18:36:11,846:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 18:36:11,846:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 18:36:11,846:INFO:PyCaret required dependencies:
2023-12-14 18:36:11,861:INFO:                 pip: 22.3
2023-12-14 18:36:11,861:INFO:          setuptools: 65.5.0
2023-12-14 18:36:11,861:INFO:             pycaret: 3.2.0
2023-12-14 18:36:11,861:INFO:             IPython: 8.18.1
2023-12-14 18:36:11,861:INFO:          ipywidgets: 8.1.1
2023-12-14 18:36:11,861:INFO:                tqdm: 4.66.1
2023-12-14 18:36:11,861:INFO:               numpy: 1.25.2
2023-12-14 18:36:11,861:INFO:              pandas: 1.5.3
2023-12-14 18:36:11,861:INFO:              jinja2: 3.1.2
2023-12-14 18:36:11,861:INFO:               scipy: 1.10.1
2023-12-14 18:36:11,861:INFO:              joblib: 1.3.2
2023-12-14 18:36:11,861:INFO:             sklearn: 1.2.2
2023-12-14 18:36:11,861:INFO:                pyod: 1.1.2
2023-12-14 18:36:11,861:INFO:            imblearn: 0.11.0
2023-12-14 18:36:11,861:INFO:   category_encoders: 2.6.3
2023-12-14 18:36:11,861:INFO:            lightgbm: 4.1.0
2023-12-14 18:36:11,861:INFO:               numba: 0.58.1
2023-12-14 18:36:11,861:INFO:            requests: 2.31.0
2023-12-14 18:36:11,861:INFO:          matplotlib: 3.6.0
2023-12-14 18:36:11,861:INFO:          scikitplot: 0.3.7
2023-12-14 18:36:11,861:INFO:         yellowbrick: 1.5
2023-12-14 18:36:11,861:INFO:              plotly: 5.18.0
2023-12-14 18:36:11,861:INFO:    plotly-resampler: Not installed
2023-12-14 18:36:11,861:INFO:             kaleido: 0.2.1
2023-12-14 18:36:11,861:INFO:           schemdraw: 0.15
2023-12-14 18:36:11,861:INFO:         statsmodels: 0.14.0
2023-12-14 18:36:11,861:INFO:              sktime: 0.21.1
2023-12-14 18:36:11,861:INFO:               tbats: 1.1.3
2023-12-14 18:36:11,861:INFO:            pmdarima: 2.0.4
2023-12-14 18:36:11,861:INFO:              psutil: 5.9.6
2023-12-14 18:36:11,861:INFO:          markupsafe: 2.1.3
2023-12-14 18:36:11,861:INFO:             pickle5: Not installed
2023-12-14 18:36:11,861:INFO:         cloudpickle: 3.0.0
2023-12-14 18:36:11,861:INFO:         deprecation: 2.1.0
2023-12-14 18:36:11,861:INFO:              xxhash: 3.4.1
2023-12-14 18:36:11,861:INFO:           wurlitzer: Not installed
2023-12-14 18:36:11,861:INFO:PyCaret optional dependencies:
2023-12-14 18:36:11,877:INFO:                shap: Not installed
2023-12-14 18:36:11,877:INFO:           interpret: Not installed
2023-12-14 18:36:11,877:INFO:                umap: Not installed
2023-12-14 18:36:11,877:INFO:     ydata_profiling: Not installed
2023-12-14 18:36:11,877:INFO:  explainerdashboard: Not installed
2023-12-14 18:36:11,877:INFO:             autoviz: Not installed
2023-12-14 18:36:11,877:INFO:           fairlearn: Not installed
2023-12-14 18:36:11,877:INFO:          deepchecks: Not installed
2023-12-14 18:36:11,877:INFO:             xgboost: Not installed
2023-12-14 18:36:11,877:INFO:            catboost: Not installed
2023-12-14 18:36:11,877:INFO:              kmodes: Not installed
2023-12-14 18:36:11,877:INFO:             mlxtend: Not installed
2023-12-14 18:36:11,877:INFO:       statsforecast: Not installed
2023-12-14 18:36:11,877:INFO:        tune_sklearn: Not installed
2023-12-14 18:36:11,877:INFO:                 ray: Not installed
2023-12-14 18:36:11,877:INFO:            hyperopt: Not installed
2023-12-14 18:36:11,877:INFO:              optuna: Not installed
2023-12-14 18:36:11,877:INFO:               skopt: Not installed
2023-12-14 18:36:11,877:INFO:              mlflow: Not installed
2023-12-14 18:36:11,877:INFO:              gradio: Not installed
2023-12-14 18:36:11,877:INFO:             fastapi: Not installed
2023-12-14 18:36:11,877:INFO:             uvicorn: Not installed
2023-12-14 18:36:11,877:INFO:              m2cgen: Not installed
2023-12-14 18:36:11,877:INFO:           evidently: Not installed
2023-12-14 18:36:11,877:INFO:               fugue: Not installed
2023-12-14 18:36:11,877:INFO:           streamlit: Not installed
2023-12-14 18:36:11,877:INFO:             prophet: Not installed
2023-12-14 18:36:11,877:INFO:None
2023-12-14 18:36:11,877:INFO:Set up data.
2023-12-14 18:36:11,877:INFO:Set up folding strategy.
2023-12-14 18:36:11,877:INFO:Set up train/test split.
2023-12-14 18:36:11,877:INFO:Set up index.
2023-12-14 18:36:11,877:INFO:Assigning column types.
2023-12-14 18:36:11,877:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 18:36:11,877:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,877:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,893:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,969:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:11,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:11,969:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,969:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:36:11,985:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,016:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,063:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 18:36:12,063:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,063:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,142:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,142:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,158:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,189:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,237:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,237:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 18:36:12,237:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,284:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,331:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,362:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,409:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,409:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 18:36:12,462:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,485:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,537:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,580:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 18:36:12,628:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,715:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:36:12,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,763:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 18:36:12,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:12,936:INFO:Preparing preprocessing pipeline...
2023-12-14 18:36:12,936:INFO:Set up simple imputation.
2023-12-14 18:36:12,938:INFO:Set up column name cleaning.
2023-12-14 18:36:12,953:INFO:Finished creating preprocessing pipeline.
2023-12-14 18:36:12,953:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 18:36:12,953:INFO:Creating final display dataframe.
2023-12-14 18:36:13,002:INFO:Setup _display_container:                     Description             Value
0                    Session id              3738
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              ce39
2023-12-14 18:36:13,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:13,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:13,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:13,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:36:13,172:INFO:setup() successfully completed in 1.36s...............
2023-12-14 18:37:39,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:37:39,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:37:39,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:37:39,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-14 18:37:39,123:INFO:PyCaret RegressionExperiment
2023-12-14 18:37:39,123:INFO:Logging name: reg-default-name
2023-12-14 18:37:39,123:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-14 18:37:39,123:INFO:version 3.2.0
2023-12-14 18:37:39,123:INFO:Initializing setup()
2023-12-14 18:37:39,123:INFO:self.USI: 445d
2023-12-14 18:37:39,123:INFO:self._variable_keys: {'pipeline', 'target_param', 'fold_shuffle_param', 'idx', 'gpu_param', 'fold_generator', 'X_train', 'y', 'X_test', 'memory', 'fold_groups_param', '_ml_usecase', 'logging_param', 'exp_id', 'seed', 'y_test', 'y_train', 'transform_target_param', 'n_jobs_param', 'data', 'log_plots_param', 'USI', 'exp_name_log', '_available_plots', 'gpu_n_jobs_param', 'html_param', 'X'}
2023-12-14 18:37:39,123:INFO:Checking environment
2023-12-14 18:37:39,123:INFO:python_version: 3.11.0
2023-12-14 18:37:39,123:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2023-12-14 18:37:39,123:INFO:machine: AMD64
2023-12-14 18:37:39,123:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-14 18:37:39,139:INFO:Memory: svmem(total=14877257728, available=2933526528, percent=80.3, used=11943731200, free=2933526528)
2023-12-14 18:37:39,139:INFO:Physical Core: 8
2023-12-14 18:37:39,139:INFO:Logical Core: 16
2023-12-14 18:37:39,139:INFO:Checking libraries
2023-12-14 18:37:39,139:INFO:System:
2023-12-14 18:37:39,139:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2023-12-14 18:37:39,139:INFO:executable: C:\Users\xoryt\OneDrive\Documents\info\SEO\Site\PY\flask server\.venv\Scripts\python.exe
2023-12-14 18:37:39,139:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-14 18:37:39,139:INFO:PyCaret required dependencies:
2023-12-14 18:37:39,154:INFO:                 pip: 22.3
2023-12-14 18:37:39,154:INFO:          setuptools: 65.5.0
2023-12-14 18:37:39,154:INFO:             pycaret: 3.2.0
2023-12-14 18:37:39,154:INFO:             IPython: 8.18.1
2023-12-14 18:37:39,154:INFO:          ipywidgets: 8.1.1
2023-12-14 18:37:39,154:INFO:                tqdm: 4.66.1
2023-12-14 18:37:39,154:INFO:               numpy: 1.25.2
2023-12-14 18:37:39,154:INFO:              pandas: 1.5.3
2023-12-14 18:37:39,154:INFO:              jinja2: 3.1.2
2023-12-14 18:37:39,154:INFO:               scipy: 1.10.1
2023-12-14 18:37:39,154:INFO:              joblib: 1.3.2
2023-12-14 18:37:39,154:INFO:             sklearn: 1.2.2
2023-12-14 18:37:39,154:INFO:                pyod: 1.1.2
2023-12-14 18:37:39,154:INFO:            imblearn: 0.11.0
2023-12-14 18:37:39,154:INFO:   category_encoders: 2.6.3
2023-12-14 18:37:39,154:INFO:            lightgbm: 4.1.0
2023-12-14 18:37:39,154:INFO:               numba: 0.58.1
2023-12-14 18:37:39,154:INFO:            requests: 2.31.0
2023-12-14 18:37:39,154:INFO:          matplotlib: 3.6.0
2023-12-14 18:37:39,154:INFO:          scikitplot: 0.3.7
2023-12-14 18:37:39,154:INFO:         yellowbrick: 1.5
2023-12-14 18:37:39,154:INFO:              plotly: 5.18.0
2023-12-14 18:37:39,154:INFO:    plotly-resampler: Not installed
2023-12-14 18:37:39,154:INFO:             kaleido: 0.2.1
2023-12-14 18:37:39,154:INFO:           schemdraw: 0.15
2023-12-14 18:37:39,154:INFO:         statsmodels: 0.14.0
2023-12-14 18:37:39,154:INFO:              sktime: 0.21.1
2023-12-14 18:37:39,154:INFO:               tbats: 1.1.3
2023-12-14 18:37:39,154:INFO:            pmdarima: 2.0.4
2023-12-14 18:37:39,154:INFO:              psutil: 5.9.6
2023-12-14 18:37:39,154:INFO:          markupsafe: 2.1.3
2023-12-14 18:37:39,154:INFO:             pickle5: Not installed
2023-12-14 18:37:39,154:INFO:         cloudpickle: 3.0.0
2023-12-14 18:37:39,154:INFO:         deprecation: 2.1.0
2023-12-14 18:37:39,154:INFO:              xxhash: 3.4.1
2023-12-14 18:37:39,154:INFO:           wurlitzer: Not installed
2023-12-14 18:37:39,154:INFO:PyCaret optional dependencies:
2023-12-14 18:37:39,171:INFO:                shap: Not installed
2023-12-14 18:37:39,171:INFO:           interpret: Not installed
2023-12-14 18:37:39,171:INFO:                umap: Not installed
2023-12-14 18:37:39,171:INFO:     ydata_profiling: Not installed
2023-12-14 18:37:39,171:INFO:  explainerdashboard: Not installed
2023-12-14 18:37:39,171:INFO:             autoviz: Not installed
2023-12-14 18:37:39,171:INFO:           fairlearn: Not installed
2023-12-14 18:37:39,171:INFO:          deepchecks: Not installed
2023-12-14 18:37:39,171:INFO:             xgboost: Not installed
2023-12-14 18:37:39,171:INFO:            catboost: Not installed
2023-12-14 18:37:39,171:INFO:              kmodes: Not installed
2023-12-14 18:37:39,171:INFO:             mlxtend: Not installed
2023-12-14 18:37:39,171:INFO:       statsforecast: Not installed
2023-12-14 18:37:39,171:INFO:        tune_sklearn: Not installed
2023-12-14 18:37:39,171:INFO:                 ray: Not installed
2023-12-14 18:37:39,171:INFO:            hyperopt: Not installed
2023-12-14 18:37:39,171:INFO:              optuna: Not installed
2023-12-14 18:37:39,171:INFO:               skopt: Not installed
2023-12-14 18:37:39,171:INFO:              mlflow: Not installed
2023-12-14 18:37:39,171:INFO:              gradio: Not installed
2023-12-14 18:37:39,171:INFO:             fastapi: Not installed
2023-12-14 18:37:39,171:INFO:             uvicorn: Not installed
2023-12-14 18:37:39,171:INFO:              m2cgen: Not installed
2023-12-14 18:37:39,171:INFO:           evidently: Not installed
2023-12-14 18:37:39,171:INFO:               fugue: Not installed
2023-12-14 18:37:39,171:INFO:           streamlit: Not installed
2023-12-14 18:37:39,171:INFO:             prophet: Not installed
2023-12-14 18:37:39,171:INFO:None
2023-12-14 18:37:39,171:INFO:Set up data.
2023-12-14 18:37:39,178:INFO:Set up folding strategy.
2023-12-14 18:37:39,178:INFO:Set up train/test split.
2023-12-14 18:37:39,180:INFO:Set up index.
2023-12-14 18:37:39,180:INFO:Assigning column types.
2023-12-14 18:37:39,182:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-14 18:37:39,183:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,185:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,189:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,262:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,262:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,262:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,341:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-12-14 18:37:39,356:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,356:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,404:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,435:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,435:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,513:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-12-14 18:37:39,529:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,560:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,608:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,690:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-12-14 18:37:39,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,779:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,826:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,858:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-14 18:37:39,905:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:39,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:39,999:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-14 18:37:40,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,030:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-12-14 18:37:40,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,191:INFO:Preparing preprocessing pipeline...
2023-12-14 18:37:40,191:INFO:Set up simple imputation.
2023-12-14 18:37:40,191:INFO:Set up column name cleaning.
2023-12-14 18:37:40,203:INFO:Finished creating preprocessing pipeline.
2023-12-14 18:37:40,219:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\xoryt\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-12-14 18:37:40,219:INFO:Creating final display dataframe.
2023-12-14 18:37:40,266:INFO:Setup _display_container:                     Description             Value
0                    Session id              2643
1                        Target              Pret
2                   Target type        Regression
3           Original data shape          (761, 7)
4        Transformed data shape          (761, 7)
5   Transformed train set shape          (532, 7)
6    Transformed test set shape          (229, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              445d
2023-12-14 18:37:40,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-14 18:37:40,444:INFO:setup() successfully completed in 1.34s...............
